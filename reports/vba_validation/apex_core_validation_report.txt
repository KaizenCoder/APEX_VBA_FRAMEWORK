=== Rapport de validation VBA APEX Framework ===
Date: 2025-04-13 22:36

--- Statistiques ---
Fichiers analysés: 26
Lignes analysées: 10930
Problèmes détectés: 4912
  - Erreurs: 16
  - Avertissements: 121
  - Informations: 4775

--- Problèmes détectés ---

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\utils\modFileUtils.bas
-------------------------------------------------------------------
ℹ️ Ligne 19: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   #If VBA7 Then
ℹ️ Ligne 24: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetTempPath Lib "kernel32" Alias "GetTempPathA" _
ℹ️ Ligne 25: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
ℹ️ Ligne 31: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetTempFileName Lib "kernel32" Alias "GetTempFileNameA" _
ℹ️ Ligne 32: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpszPath As String, ByVal lpPrefixString As String, _
ℹ️ Ligne 33: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal wUnique As Long, ByVal lpTempFileName As String) As Long
ℹ️ Ligne 39: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetFileAttributes Lib "kernel32" Alias "GetFileAttributesA" _
ℹ️ Ligne 40: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpFileName As String) As Long
ℹ️ Ligne 46: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function SetFileAttributes Lib "kernel32" Alias "SetFileAttributesA" _
ℹ️ Ligne 47: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpFileName As String, ByVal dwFileAttributes As Long) As Long
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetTempPath Lib "kernel32" Alias "GetTempPathA" _
ℹ️ Ligne 54: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
ℹ️ Ligne 60: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetTempFileName Lib "kernel32" Alias "GetTempFileNameA" _
ℹ️ Ligne 61: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpszPath As String, ByVal lpPrefixString As String, _
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal wUnique As Long, ByVal lpTempFileName As String) As Long
ℹ️ Ligne 68: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetFileAttributes Lib "kernel32" Alias "GetFileAttributesA" _
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpFileName As String) As Long
ℹ️ Ligne 75: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function SetFileAttributes Lib "kernel32" Alias "SetFileAttributesA" _
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpFileName As String, ByVal dwFileAttributes As Long) As Long
ℹ️ Ligne 90: Le nom de variable 'm_Logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 90: Le nom de variable 'm_Logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 91: Le nom de variable 'm_LastError' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_LastError As String
ℹ️ Ligne 91: Le nom de variable 'm_LastError' ne suit pas la convention camelCase [naming.variable_case]
   Private m_LastError As String
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize(Optional ByVal logger As Object = Nothing)
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then
ℹ️ Ligne 114: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function FileExists(ByVal filePath As String) As Boolean
⚠️ Ligne 114: La fonction 'FileExists' est trop longue (110 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 127: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification de l'existence du fichier: " & Err.Description
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       FileExists = False
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Public Function DirectoryExists(ByVal folderPath As String) As Boolean
ℹ️ Ligne 139: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If Right(folderPath, 1) = "\" Then
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           folderPath = Left(folderPath, Len(folderPath) - 1)
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       DirectoryExists = (Dir(folderPath, vbDirectory) <> "")
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 153: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification de l'existence du répertoire: " & Err.Description
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       DirectoryExists = False
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Public Function IsDirectory(ByVal path As String) As Boolean
ℹ️ Ligne 167: Le nom de variable 'attributes' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim attributes As Long
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim attributes As Long
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       attributes = GetFileAttributes(path)
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       If attributes <> INVALID_FILE_ATTRIBUTES Then
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           IsDirectory = ((attributes And FILE_ATTRIBUTE_DIRECTORY) = FILE_ATTRIBUTE_DIRECTORY)
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           IsDirectory = False
ℹ️ Ligne 181: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 32 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si le chemin est un répertoire: " & Err.Description
ℹ️ Ligne 189: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       IsDirectory = False
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Public Function IsReadOnly(ByVal filePath As String) As Boolean
ℹ️ Ligne 199: Le nom de variable 'attributes' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim attributes As Long
ℹ️ Ligne 199: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim attributes As Long
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       attributes = GetFileAttributes(filePath)
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If attributes <> INVALID_FILE_ATTRIBUTES Then
ℹ️ Ligne 208: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           IsReadOnly = ((attributes And FILE_ATTRIBUTE_READONLY) = FILE_ATTRIBUTE_READONLY)
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           IsReadOnly = False
ℹ️ Ligne 213: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 219: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si le fichier est en lecture seule: " & Err.Description
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       IsReadOnly = False
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   Public Function CreateDirectory(ByVal folderPath As String) As Boolean
⚠️ Ligne 230: La fonction 'CreateDirectory' est trop longue (104 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 232: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       Dim parts() As String
ℹ️ Ligne 233: Le nom de variable 'currentPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim currentPath As String
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       Dim currentPath As String
ℹ️ Ligne 234: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If DirectoryExists(folderPath) Then
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           CreateDirectory = True
ℹ️ Ligne 241: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 245: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 249: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       parts = Split(folderPath, "\")
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       currentPath = parts(0) & "\"
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       For i = 1 To UBound(parts)
ℹ️ Ligne 255: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           currentPath = currentPath & parts(i) & "\"
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           If Not DirectoryExists(currentPath) Then
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 56 espaces, trouvé: 12 [style.indentation]
               MkDir currentPath
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       CreateDirectory = True
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 272: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la création du répertoire: " & Err.Description
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 274: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       CreateDirectory = False
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 281: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Public Function CreateTemporaryFile(Optional ByVal prefix As String = "APX") As String
ℹ️ Ligne 283: Le nom de variable 'tempPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim tempPath As String
ℹ️ Ligne 283: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim tempPath As String
ℹ️ Ligne 284: Le nom de variable 'tempFile' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim tempFile As String
ℹ️ Ligne 284: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim tempFile As String
ℹ️ Ligne 285: Le nom de variable 'result' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim result As Long
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim result As Long
ℹ️ Ligne 287: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       tempPath = Space$(MAX_PATH)
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       result = GetTempPath(Len(tempPath), tempPath)
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If result = 0 Then
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Impossible d'obtenir le chemin du répertoire temporaire"
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           CreateTemporaryFile = ""
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       tempPath = Left$(tempPath, result)
ℹ️ Ligne 307: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       tempFile = Space$(MAX_PATH)
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       result = GetTempFileName(tempPath, prefix, 0, tempFile)
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       If result = 0 Then
ℹ️ Ligne 311: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Impossible de créer un fichier temporaire"
ℹ️ Ligne 312: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           CreateTemporaryFile = ""
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 321: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       CreateTemporaryFile = Left$(tempFile, InStr(tempFile, vbNullChar) - 1)
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 327: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 329: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la création du fichier temporaire: " & Err.Description
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 332: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       CreateTemporaryFile = ""
ℹ️ Ligne 340: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Public Function CopyFile(ByVal sourcePath As String, ByVal destPath As String, _
⚠️ Ligne 340: La fonction 'CopyFile' est trop longue (135 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 68 espaces, trouvé: 25 [style.indentation]
                            Optional ByVal overwrite As Boolean = False) As Boolean
ℹ️ Ligne 343: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If Not FileExists(sourcePath) Then
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le fichier source n'existe pas: " & sourcePath
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           CopyFile = False
ℹ️ Ligne 350: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 354: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 358: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If FileExists(destPath) And Not overwrite Then
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le fichier de destination existe déjà: " & destPath
ℹ️ Ligne 360: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 361: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           CopyFile = False
ℹ️ Ligne 362: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 370: Le nom de variable 'destFolder' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim destFolder As String
ℹ️ Ligne 370: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim destFolder As String
ℹ️ Ligne 371: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       destFolder = Left$(destPath, InStrRev(destPath, "\") - 1)
ℹ️ Ligne 373: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       If Not DirectoryExists(destFolder) Then
ℹ️ Ligne 374: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           If Not CreateDirectory(destFolder) Then
ℹ️ Ligne 375: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               CopyFile = False
ℹ️ Ligne 376: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 380: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 385: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       FileCopy sourcePath, destPath
ℹ️ Ligne 386: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       CopyFile = True
ℹ️ Ligne 388: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 392: Indentation incorrecte. Attendu: 84 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 394: Indentation incorrecte. Attendu: 84 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 395: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la copie du fichier: " & Err.Description
ℹ️ Ligne 396: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 397: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       CopyFile = False
ℹ️ Ligne 402: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 404: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   Public Function MoveFile(ByVal sourcePath As String, ByVal destPath As String, _
ℹ️ Ligne 405: Indentation incorrecte. Attendu: 88 espaces, trouvé: 25 [style.indentation]
                            Optional ByVal overwrite As Boolean = False) As Boolean
ℹ️ Ligne 407: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 410: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       If Not FileExists(sourcePath) Then
ℹ️ Ligne 411: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le fichier source n'existe pas: " & sourcePath
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 413: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           MoveFile = False
ℹ️ Ligne 414: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 418: Indentation incorrecte. Attendu: 96 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 422: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       If FileExists(destPath) Then
ℹ️ Ligne 423: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           If overwrite Then
ℹ️ Ligne 425: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               If Not DeleteFile(destPath) Then
ℹ️ Ligne 426: Indentation incorrecte. Attendu: 104 espaces, trouvé: 16 [style.indentation]
                   MoveFile = False
ℹ️ Ligne 427: Indentation incorrecte. Attendu: 104 espaces, trouvé: 16 [style.indentation]
                   Exit'@Description: 
ℹ️ Ligne 431: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 434: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               m_LastError = "Le fichier de destination existe déjà: " & destPath
ℹ️ Ligne 435: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               LogError m_LastError
ℹ️ Ligne 436: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               MoveFile = False
ℹ️ Ligne 437: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 441: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 446: Le nom de variable 'destFolder' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim destFolder As String
ℹ️ Ligne 446: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim destFolder As String
ℹ️ Ligne 447: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       destFolder = Left$(destPath, InStrRev(destPath, "\") - 1)
ℹ️ Ligne 449: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If Not DirectoryExists(destFolder) Then
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           If Not CreateDirectory(destFolder) Then
ℹ️ Ligne 451: Indentation incorrecte. Attendu: 108 espaces, trouvé: 12 [style.indentation]
               MoveFile = False
ℹ️ Ligne 452: Indentation incorrecte. Attendu: 108 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 456: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 461: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Name sourcePath As destPath
ℹ️ Ligne 462: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       MoveFile = True
ℹ️ Ligne 464: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 468: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 470: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 471: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du déplacement du fichier: " & Err.Description
ℹ️ Ligne 472: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 473: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       MoveFile = False
ℹ️ Ligne 481: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   Public Function DeleteFile(ByVal filePath As String) As Boolean
⚠️ Ligne 481: La fonction 'DeleteFile' est trop longue (118 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 483: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 486: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       If Not FileExists(filePath) Then
ℹ️ Ligne 488: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           DeleteFile = True
ℹ️ Ligne 489: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 116 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 497: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       If IsReadOnly(filePath) Then
ℹ️ Ligne 499: Indentation incorrecte. Attendu: 116 espaces, trouvé: 8 [style.indentation]
           SetFileAttributes filePath, GetFileAttributes(filePath) And Not FILE_ATTRIBUTE_READONLY
ℹ️ Ligne 503: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       Kill filePath
ℹ️ Ligne 504: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       DeleteFile = True
ℹ️ Ligne 506: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 510: Indentation incorrecte. Attendu: 116 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 512: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 513: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la suppression du fichier: " & Err.Description
ℹ️ Ligne 514: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 515: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       DeleteFile = False
ℹ️ Ligne 520: Indentation incorrecte. Attendu: 120 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 522: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   Public Function DeleteDirectory(ByVal folderPath As String, Optional ByVal recursive As Boolean = False) As Boolean
ℹ️ Ligne 524: Le nom de variable 'file' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim file As String
ℹ️ Ligne 524: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       Dim file As String
ℹ️ Ligne 525: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       Dim subfolder As String
ℹ️ Ligne 527: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 530: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       If Not DirectoryExists(folderPath) Then
ℹ️ Ligne 532: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           DeleteDirectory = True
ℹ️ Ligne 533: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 537: Indentation incorrecte. Attendu: 132 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 541: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       If Right$(folderPath, 1) <> "\" Then
ℹ️ Ligne 542: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           folderPath = folderPath & "\"
ℹ️ Ligne 545: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       If recursive Then
ℹ️ Ligne 547: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           file = Dir(folderPath & "*.*", vbNormal)
ℹ️ Ligne 549: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           Do While file <> ""
ℹ️ Ligne 550: Indentation incorrecte. Attendu: 140 espaces, trouvé: 12 [style.indentation]
               If Not DeleteFile(folderPath & file) Then
ℹ️ Ligne 551: Indentation incorrecte. Attendu: 140 espaces, trouvé: 16 [style.indentation]
                   DeleteDirectory = False
ℹ️ Ligne 552: Indentation incorrecte. Attendu: 140 espaces, trouvé: 16 [style.indentation]
                   Exit'@Description: 
ℹ️ Ligne 556: Indentation incorrecte. Attendu: 144 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 559: Indentation incorrecte. Attendu: 140 espaces, trouvé: 12 [style.indentation]
               file = Dir()
ℹ️ Ligne 560: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           Loop
ℹ️ Ligne 563: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           subfolder = Dir(folderPath & "*.*", vbDirectory)
ℹ️ Ligne 565: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           Do While subfolder <> ""
ℹ️ Ligne 567: Indentation incorrecte. Attendu: 144 espaces, trouvé: 12 [style.indentation]
               If subfolder <> "." And subfolder <> ".." Then
ℹ️ Ligne 568: La ligne dépasse la longueur maximale recommandée (123/120) [style.line_length]
   If (GetFileAttributes(folderPath & subfolder) And FILE_ATTRIBUTE_DIRECTORY) = FILE_ATTRIBUTE_DIRECTORY Then
ℹ️ Ligne 568: Indentation incorrecte. Attendu: 148 espaces, trouvé: 16 [style.indentation]
                   If (GetFileAttributes(folderPath & subfolder) And FILE_ATTRIBUTE_DIRECTORY) = FILE_ATTRIBUTE_DIRECTORY Then
ℹ️ Ligne 569: Indentation incorrecte. Attendu: 152 espaces, trouvé: 20 [style.indentation]
                       If Not DeleteDirectory(folderPath & subfolder, True) Then
ℹ️ Ligne 570: Indentation incorrecte. Attendu: 152 espaces, trouvé: 24 [style.indentation]
                           DeleteDirectory = False
ℹ️ Ligne 571: Indentation incorrecte. Attendu: 152 espaces, trouvé: 24 [style.indentation]
                           Exit'@Description: 
ℹ️ Ligne 575: Indentation incorrecte. Attendu: 156 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 580: Indentation incorrecte. Attendu: 144 espaces, trouvé: 12 [style.indentation]
               subfolder = Dir()
ℹ️ Ligne 581: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           Loop
ℹ️ Ligne 585: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       RmDir folderPath
ℹ️ Ligne 586: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       DeleteDirectory = True
ℹ️ Ligne 588: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 592: Indentation incorrecte. Attendu: 140 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 594: Indentation incorrecte. Attendu: 140 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 595: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la suppression du répertoire: " & Err.Description
ℹ️ Ligne 596: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 597: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       DeleteDirectory = False
ℹ️ Ligne 605: Indentation incorrecte. Attendu: 140 espaces, trouvé: 0 [style.indentation]
   Public Function SetReadOnly(ByVal filePath As String, ByVal readOnly As Boolean) As Boolean
⚠️ Ligne 605: La fonction 'SetReadOnly' est trop longue (111 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 607: Le nom de variable 'attributes' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim attributes As Long
ℹ️ Ligne 607: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       Dim attributes As Long
ℹ️ Ligne 609: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 612: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       If Not FileExists(filePath) Then
ℹ️ Ligne 613: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le fichier n'existe pas: " & filePath
ℹ️ Ligne 614: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 615: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           SetReadOnly = False
ℹ️ Ligne 616: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 620: Indentation incorrecte. Attendu: 148 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 624: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       attributes = GetFileAttributes(filePath)
ℹ️ Ligne 626: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       If attributes = INVALID_FILE_ATTRIBUTES Then
ℹ️ Ligne 627: Indentation incorrecte. Attendu: 148 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Impossible d'obtenir les attributs du fichier: " & filePath
ℹ️ Ligne 628: Indentation incorrecte. Attendu: 148 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 629: Indentation incorrecte. Attendu: 148 espaces, trouvé: 8 [style.indentation]
           SetReadOnly = False
ℹ️ Ligne 630: Indentation incorrecte. Attendu: 148 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 634: Indentation incorrecte. Attendu: 152 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 638: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       If readOnly Then
ℹ️ Ligne 639: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           attributes = attributes Or FILE_ATTRIBUTE_READONLY
ℹ️ Ligne 641: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           attributes = attributes And Not FILE_ATTRIBUTE_READONLY
ℹ️ Ligne 645: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       SetReadOnly = (SetFileAttributes(filePath, attributes) <> 0)
ℹ️ Ligne 647: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 651: Indentation incorrecte. Attendu: 152 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 653: Indentation incorrecte. Attendu: 152 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 654: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la modification de l'attribut lecture seule: " & Err.Description
ℹ️ Ligne 655: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 656: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       SetReadOnly = False
ℹ️ Ligne 661: Indentation incorrecte. Attendu: 156 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 663: Indentation incorrecte. Attendu: 160 espaces, trouvé: 0 [style.indentation]
   Public Function SetHidden(ByVal filePath As String, ByVal hidden As Boolean) As Boolean
ℹ️ Ligne 665: Le nom de variable 'attributes' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim attributes As Long
ℹ️ Ligne 665: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       Dim attributes As Long
ℹ️ Ligne 667: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 670: Indentation incorrecte. Attendu: 164 espaces, trouvé: 4 [style.indentation]
       If Not FileExists(filePath) And Not DirectoryExists(filePath) Then
ℹ️ Ligne 671: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le fichier ou répertoire n'existe pas: " & filePath
ℹ️ Ligne 672: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 673: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           SetHidden = False
ℹ️ Ligne 674: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 678: Indentation incorrecte. Attendu: 168 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 682: Indentation incorrecte. Attendu: 164 espaces, trouvé: 4 [style.indentation]
       attributes = GetFileAttributes(filePath)
ℹ️ Ligne 684: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       If attributes = INVALID_FILE_ATTRIBUTES Then
ℹ️ Ligne 685: Indentation incorrecte. Attendu: 168 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Impossible d'obtenir les attributs du fichier: " & filePath
ℹ️ Ligne 686: Indentation incorrecte. Attendu: 168 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 687: Indentation incorrecte. Attendu: 168 espaces, trouvé: 8 [style.indentation]
           SetHidden = False
ℹ️ Ligne 688: Indentation incorrecte. Attendu: 168 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 692: Indentation incorrecte. Attendu: 172 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 696: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       If hidden Then
ℹ️ Ligne 697: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           attributes = attributes Or FILE_ATTRIBUTE_HIDDEN
ℹ️ Ligne 699: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           attributes = attributes And Not FILE_ATTRIBUTE_HIDDEN
ℹ️ Ligne 703: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       SetHidden = (SetFileAttributes(filePath, attributes) <> 0)
ℹ️ Ligne 705: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 709: Indentation incorrecte. Attendu: 172 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 711: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 712: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la modification de l'attribut caché: " & Err.Description
ℹ️ Ligne 713: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 714: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       SetHidden = False
ℹ️ Ligne 722: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   Public Function GetFileName(ByVal filePath As String) As String
⚠️ Ligne 722: La fonction 'GetFileName' est trop longue (152 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 724: Le nom de variable 'pos' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim pos As Long
ℹ️ Ligne 724: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim pos As Long
ℹ️ Ligne 726: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 728: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       pos = InStrRev(filePath, "\")
ℹ️ Ligne 730: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       If pos > 0 Then
ℹ️ Ligne 731: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           GetFileName = Mid$(filePath, pos + 1)
ℹ️ Ligne 733: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           GetFileName = filePath
ℹ️ Ligne 736: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 740: Indentation incorrecte. Attendu: 176 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 742: Indentation incorrecte. Attendu: 176 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 743: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction du nom de fichier: " & Err.Description
ℹ️ Ligne 744: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 745: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       GetFileName = ""
ℹ️ Ligne 750: Indentation incorrecte. Attendu: 180 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 752: Indentation incorrecte. Attendu: 184 espaces, trouvé: 0 [style.indentation]
   Public Function GetFileExtension(ByVal filePath As String) As String
ℹ️ Ligne 754: Le nom de variable 'fileName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim fileName As String
ℹ️ Ligne 754: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Dim fileName As String
ℹ️ Ligne 755: Le nom de variable 'pos' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim pos As Long
ℹ️ Ligne 755: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Dim pos As Long
ℹ️ Ligne 757: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 759: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       fileName = GetFileName(filePath)
ℹ️ Ligne 760: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       pos = InStrRev(fileName, ".")
ℹ️ Ligne 762: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       If pos > 0 Then
ℹ️ Ligne 763: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           GetFileExtension = Mid$(fileName, pos + 1)
ℹ️ Ligne 765: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           GetFileExtension = ""
ℹ️ Ligne 768: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 772: Indentation incorrecte. Attendu: 188 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 774: Indentation incorrecte. Attendu: 188 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 775: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction de l'extension: " & Err.Description
ℹ️ Ligne 776: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 777: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       GetFileExtension = ""
ℹ️ Ligne 782: Indentation incorrecte. Attendu: 192 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 784: Indentation incorrecte. Attendu: 196 espaces, trouvé: 0 [style.indentation]
   Public Function GetFileNameWithoutExtension(ByVal filePath As String) As String
ℹ️ Ligne 786: Le nom de variable 'fileName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim fileName As String
ℹ️ Ligne 786: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       Dim fileName As String
ℹ️ Ligne 787: Le nom de variable 'pos' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim pos As Long
ℹ️ Ligne 787: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       Dim pos As Long
ℹ️ Ligne 789: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 791: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       fileName = GetFileName(filePath)
ℹ️ Ligne 792: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       pos = InStrRev(fileName, ".")
ℹ️ Ligne 794: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       If pos > 0 Then
ℹ️ Ligne 795: Indentation incorrecte. Attendu: 200 espaces, trouvé: 8 [style.indentation]
           GetFileNameWithoutExtension = Left$(fileName, pos - 1)
ℹ️ Ligne 797: Indentation incorrecte. Attendu: 200 espaces, trouvé: 8 [style.indentation]
           GetFileNameWithoutExtension = fileName
ℹ️ Ligne 800: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 804: Indentation incorrecte. Attendu: 200 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 806: Indentation incorrecte. Attendu: 200 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 807: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction du nom sans extension: " & Err.Description
ℹ️ Ligne 808: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 809: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       GetFileNameWithoutExtension = ""
ℹ️ Ligne 814: Indentation incorrecte. Attendu: 204 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 816: Indentation incorrecte. Attendu: 208 espaces, trouvé: 0 [style.indentation]
   Public Function GetDirectoryPath(ByVal filePath As String) As String
ℹ️ Ligne 818: Le nom de variable 'pos' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim pos As Long
ℹ️ Ligne 818: Indentation incorrecte. Attendu: 208 espaces, trouvé: 4 [style.indentation]
       Dim pos As Long
ℹ️ Ligne 820: Indentation incorrecte. Attendu: 208 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 822: Indentation incorrecte. Attendu: 208 espaces, trouvé: 4 [style.indentation]
       pos = InStrRev(filePath, "\")
ℹ️ Ligne 824: Indentation incorrecte. Attendu: 212 espaces, trouvé: 4 [style.indentation]
       If pos > 0 Then
ℹ️ Ligne 825: Indentation incorrecte. Attendu: 212 espaces, trouvé: 8 [style.indentation]
           GetDirectoryPath = Left$(filePath, pos)
ℹ️ Ligne 827: Indentation incorrecte. Attendu: 212 espaces, trouvé: 8 [style.indentation]
           GetDirectoryPath = ""
ℹ️ Ligne 830: Indentation incorrecte. Attendu: 208 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 834: Indentation incorrecte. Attendu: 212 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 836: Indentation incorrecte. Attendu: 212 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 837: Indentation incorrecte. Attendu: 212 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction du chemin du répertoire: " & Err.Description
ℹ️ Ligne 838: Indentation incorrecte. Attendu: 212 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 839: Indentation incorrecte. Attendu: 212 espaces, trouvé: 4 [style.indentation]
       GetDirectoryPath = ""
ℹ️ Ligne 844: Indentation incorrecte. Attendu: 216 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 846: Indentation incorrecte. Attendu: 220 espaces, trouvé: 0 [style.indentation]
   Public Function CombinePaths(ByVal path1 As String, ByVal path2 As String) As String
ℹ️ Ligne 848: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 851: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       If Right$(path1, 1) = "\" Then
ℹ️ Ligne 852: Indentation incorrecte. Attendu: 224 espaces, trouvé: 8 [style.indentation]
           path1 = Left$(path1, Len(path1) - 1)
ℹ️ Ligne 856: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       If Left$(path2, 1) = "\" Then
ℹ️ Ligne 857: Indentation incorrecte. Attendu: 224 espaces, trouvé: 8 [style.indentation]
           path2 = Mid$(path2, 2)
ℹ️ Ligne 861: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       CombinePaths = path1 & "\" & path2
ℹ️ Ligne 863: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 867: Indentation incorrecte. Attendu: 224 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 869: Indentation incorrecte. Attendu: 224 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 870: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la combinaison des chemins: " & Err.Description
ℹ️ Ligne 871: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 872: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       CombinePaths = ""
ℹ️ Ligne 880: Indentation incorrecte. Attendu: 224 espaces, trouvé: 0 [style.indentation]
   Public Function ReadTextFile(ByVal filePath As String, Optional ByVal encoding As String = "utf-8") As String
⚠️ Ligne 880: La fonction 'ReadTextFile' est trop longue (163 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 882: Le nom de variable 'fileNum' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim fileNum As Integer
ℹ️ Ligne 882: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       Dim fileNum As Integer
ℹ️ Ligne 883: Le nom de variable 'content' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim content As String
ℹ️ Ligne 883: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       Dim content As String
ℹ️ Ligne 885: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 888: Indentation incorrecte. Attendu: 228 espaces, trouvé: 4 [style.indentation]
       If Not FileExists(filePath) Then
ℹ️ Ligne 889: Indentation incorrecte. Attendu: 228 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le fichier n'existe pas: " & filePath
ℹ️ Ligne 890: Indentation incorrecte. Attendu: 228 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 891: Indentation incorrecte. Attendu: 228 espaces, trouvé: 8 [style.indentation]
           ReadTextFile = ""
ℹ️ Ligne 892: Indentation incorrecte. Attendu: 228 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 896: Indentation incorrecte. Attendu: 232 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 900: Indentation incorrecte. Attendu: 228 espaces, trouvé: 4 [style.indentation]
       fileNum = FreeFile
ℹ️ Ligne 901: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       Open filePath For Input As #fileNum
ℹ️ Ligne 902: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       content = Input$(LOF(fileNum), #fileNum)
ℹ️ Ligne 903: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       Close #fileNum
ℹ️ Ligne 905: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       ReadTextFile = content
ℹ️ Ligne 907: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 911: Indentation incorrecte. Attendu: 236 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 913: Indentation incorrecte. Attendu: 236 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 914: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la lecture du fichier: " & Err.Description
ℹ️ Ligne 915: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 918: Indentation incorrecte. Attendu: 240 espaces, trouvé: 4 [style.indentation]
       If fileNum > 0 Then
ℹ️ Ligne 919: Indentation incorrecte. Attendu: 240 espaces, trouvé: 8 [style.indentation]
           Close #fileNum
ℹ️ Ligne 922: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       ReadTextFile = ""
ℹ️ Ligne 927: Indentation incorrecte. Attendu: 240 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 929: Indentation incorrecte. Attendu: 240 espaces, trouvé: 0 [style.indentation]
   Public Function WriteTextFile(ByVal filePath As String, ByVal content As String, _
ℹ️ Ligne 930: Indentation incorrecte. Attendu: 240 espaces, trouvé: 30 [style.indentation]
                                 Optional ByVal overwrite As Boolean = True, _
ℹ️ Ligne 931: Indentation incorrecte. Attendu: 240 espaces, trouvé: 30 [style.indentation]
                                 Optional ByVal encoding As String = "utf-8") As Boolean
ℹ️ Ligne 933: Le nom de variable 'fileNum' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim fileNum As Integer
ℹ️ Ligne 933: Indentation incorrecte. Attendu: 240 espaces, trouvé: 4 [style.indentation]
       Dim fileNum As Integer
ℹ️ Ligne 935: Indentation incorrecte. Attendu: 240 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 938: Indentation incorrecte. Attendu: 244 espaces, trouvé: 4 [style.indentation]
       If FileExists(filePath) And Not overwrite Then
ℹ️ Ligne 939: Indentation incorrecte. Attendu: 244 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le fichier existe déjà: " & filePath
ℹ️ Ligne 940: Indentation incorrecte. Attendu: 244 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 941: Indentation incorrecte. Attendu: 244 espaces, trouvé: 8 [style.indentation]
           WriteTextFile = False
ℹ️ Ligne 942: Indentation incorrecte. Attendu: 244 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 946: Indentation incorrecte. Attendu: 248 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 950: Le nom de variable 'folderPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim folderPath As String
ℹ️ Ligne 950: Indentation incorrecte. Attendu: 244 espaces, trouvé: 4 [style.indentation]
       Dim folderPath As String
ℹ️ Ligne 951: Indentation incorrecte. Attendu: 244 espaces, trouvé: 4 [style.indentation]
       folderPath = GetDirectoryPath(filePath)
ℹ️ Ligne 953: Indentation incorrecte. Attendu: 248 espaces, trouvé: 4 [style.indentation]
       If folderPath <> "" And Not DirectoryExists(folderPath) Then
ℹ️ Ligne 954: Indentation incorrecte. Attendu: 252 espaces, trouvé: 8 [style.indentation]
           If Not CreateDirectory(folderPath) Then
ℹ️ Ligne 955: Indentation incorrecte. Attendu: 252 espaces, trouvé: 12 [style.indentation]
               WriteTextFile = False
ℹ️ Ligne 956: Indentation incorrecte. Attendu: 252 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 960: Indentation incorrecte. Attendu: 256 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 965: Indentation incorrecte. Attendu: 248 espaces, trouvé: 4 [style.indentation]
       fileNum = FreeFile
ℹ️ Ligne 966: Indentation incorrecte. Attendu: 252 espaces, trouvé: 4 [style.indentation]
       Open filePath For Output As #fileNum
ℹ️ Ligne 967: Indentation incorrecte. Attendu: 252 espaces, trouvé: 4 [style.indentation]
       Print #fileNum, content;
ℹ️ Ligne 968: Indentation incorrecte. Attendu: 252 espaces, trouvé: 4 [style.indentation]
       Close #fileNum
ℹ️ Ligne 970: Indentation incorrecte. Attendu: 252 espaces, trouvé: 4 [style.indentation]
       WriteTextFile = True
ℹ️ Ligne 972: Indentation incorrecte. Attendu: 252 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 976: Indentation incorrecte. Attendu: 256 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 978: Indentation incorrecte. Attendu: 256 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 979: Indentation incorrecte. Attendu: 256 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'écriture dans le fichier: " & Err.Description
ℹ️ Ligne 980: Indentation incorrecte. Attendu: 256 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 983: Indentation incorrecte. Attendu: 260 espaces, trouvé: 4 [style.indentation]
       If fileNum > 0 Then
ℹ️ Ligne 984: Indentation incorrecte. Attendu: 260 espaces, trouvé: 8 [style.indentation]
           Close #fileNum
ℹ️ Ligne 987: Indentation incorrecte. Attendu: 256 espaces, trouvé: 4 [style.indentation]
       WriteTextFile = False
ℹ️ Ligne 992: Indentation incorrecte. Attendu: 260 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 994: Indentation incorrecte. Attendu: 264 espaces, trouvé: 0 [style.indentation]
   Public Function AppendToTextFile(ByVal filePath As String, ByVal content As String) As Boolean
ℹ️ Ligne 996: Le nom de variable 'fileNum' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim fileNum As Integer
ℹ️ Ligne 996: Indentation incorrecte. Attendu: 264 espaces, trouvé: 4 [style.indentation]
       Dim fileNum As Integer
ℹ️ Ligne 998: Indentation incorrecte. Attendu: 264 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 1001: Indentation incorrecte. Attendu: 268 espaces, trouvé: 4 [style.indentation]
       If Not FileExists(filePath) Then
ℹ️ Ligne 1003: Le nom de variable 'folderPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim folderPath As String
ℹ️ Ligne 1003: Indentation incorrecte. Attendu: 268 espaces, trouvé: 8 [style.indentation]
           Dim folderPath As String
ℹ️ Ligne 1004: Indentation incorrecte. Attendu: 268 espaces, trouvé: 8 [style.indentation]
           folderPath = GetDirectoryPath(filePath)
ℹ️ Ligne 1006: Indentation incorrecte. Attendu: 272 espaces, trouvé: 8 [style.indentation]
           If folderPath <> "" And Not DirectoryExists(folderPath) Then
ℹ️ Ligne 1007: Indentation incorrecte. Attendu: 276 espaces, trouvé: 12 [style.indentation]
               If Not CreateDirectory(folderPath) Then
ℹ️ Ligne 1008: Indentation incorrecte. Attendu: 276 espaces, trouvé: 16 [style.indentation]
                   AppendToTextFile = False
ℹ️ Ligne 1009: Indentation incorrecte. Attendu: 276 espaces, trouvé: 16 [style.indentation]
                   Exit'@Description: 
ℹ️ Ligne 1013: Indentation incorrecte. Attendu: 280 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 1019: Indentation incorrecte. Attendu: 268 espaces, trouvé: 4 [style.indentation]
       fileNum = FreeFile
ℹ️ Ligne 1020: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Open filePath For Append As #fileNum
ℹ️ Ligne 1021: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Print #fileNum, content;
ℹ️ Ligne 1022: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Close #fileNum
ℹ️ Ligne 1024: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       AppendToTextFile = True
ℹ️ Ligne 1026: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 1030: Indentation incorrecte. Attendu: 276 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 1032: Indentation incorrecte. Attendu: 276 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 1033: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'ajout au fichier: " & Err.Description
ℹ️ Ligne 1034: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 1037: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       If fileNum > 0 Then
ℹ️ Ligne 1038: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           Close #fileNum
ℹ️ Ligne 1041: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       AppendToTextFile = False
ℹ️ Ligne 1049: Indentation incorrecte. Attendu: 272 espaces, trouvé: 0 [style.indentation]
   Public Function FindFiles(ByVal folderPath As String, ByVal pattern As String, _
⚠️ Ligne 1049: La fonction 'FindFiles' a un niveau d'imbrication trop élevé (7, max recommandé: 5) [complexity.nesting_level]
ℹ️ Ligne 1050: Indentation incorrecte. Attendu: 272 espaces, trouvé: 26 [style.indentation]
                             Optional ByVal includeSubfolders As Boolean = False) As Variant
ℹ️ Ligne 1052: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Dim files() As String
ℹ️ Ligne 1053: Le nom de variable 'fileCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim fileCount As Long
ℹ️ Ligne 1053: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Dim fileCount As Long
ℹ️ Ligne 1054: Le nom de variable 'file' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim file As String
ℹ️ Ligne 1054: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Dim file As String
ℹ️ Ligne 1055: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Dim subfolder As String
ℹ️ Ligne 1057: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 1060: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       ReDim files(0 To 99)
ℹ️ Ligne 1061: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       fileCount = 0
ℹ️ Ligne 1064: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       If Not DirectoryExists(folderPath) Then
ℹ️ Ligne 1065: Indentation incorrecte. Attendu: 276 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Le répertoire n'existe pas: " & folderPath
ℹ️ Ligne 1066: Indentation incorrecte. Attendu: 276 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 1067: Indentation incorrecte. Attendu: 276 espaces, trouvé: 8 [style.indentation]
           FindFiles = Array()
ℹ️ Ligne 1068: Indentation incorrecte. Attendu: 276 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 1072: Indentation incorrecte. Attendu: 280 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 1076: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       If Right$(folderPath, 1) <> "\" Then
ℹ️ Ligne 1077: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           folderPath = folderPath & "\"
ℹ️ Ligne 1081: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       file = Dir(folderPath & pattern, vbNormal)
ℹ️ Ligne 1083: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       Do While file <> ""
ℹ️ Ligne 1085: Indentation incorrecte. Attendu: 284 espaces, trouvé: 8 [style.indentation]
           If fileCount > UBound(files) Then
ℹ️ Ligne 1086: Indentation incorrecte. Attendu: 284 espaces, trouvé: 12 [style.indentation]
               ReDim Preserve files(0 To UBound(files) * 2)
ℹ️ Ligne 1089: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           files(fileCount) = folderPath & file
ℹ️ Ligne 1090: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           fileCount = fileCount + 1
ℹ️ Ligne 1092: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           file = Dir()
ℹ️ Ligne 1093: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       Loop
ℹ️ Ligne 1096: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       If includeSubfolders Then
ℹ️ Ligne 1097: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           subfolder = Dir(folderPath & "*.*", vbDirectory)
ℹ️ Ligne 1099: Indentation incorrecte. Attendu: 284 espaces, trouvé: 8 [style.indentation]
           Do While subfolder <> ""
ℹ️ Ligne 1101: Indentation incorrecte. Attendu: 288 espaces, trouvé: 12 [style.indentation]
               If subfolder <> "." And subfolder <> ".." Then
ℹ️ Ligne 1102: La ligne dépasse la longueur maximale recommandée (123/120) [style.line_length]
   If (GetFileAttributes(folderPath & subfolder) And FILE_ATTRIBUTE_DIRECTORY) = FILE_ATTRIBUTE_DIRECTORY Then
ℹ️ Ligne 1102: Indentation incorrecte. Attendu: 292 espaces, trouvé: 16 [style.indentation]
                   If (GetFileAttributes(folderPath & subfolder) And FILE_ATTRIBUTE_DIRECTORY) = FILE_ATTRIBUTE_DIRECTORY Then
ℹ️ Ligne 1104: Le nom de variable 'subfiles' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim subfiles As Variant
ℹ️ Ligne 1104: Indentation incorrecte. Attendu: 292 espaces, trouvé: 20 [style.indentation]
                       Dim subfiles As Variant
ℹ️ Ligne 1105: Indentation incorrecte. Attendu: 292 espaces, trouvé: 20 [style.indentation]
                       subfiles = FindFiles(folderPath & subfolder, pattern, True)
ℹ️ Ligne 1108: Indentation incorrecte. Attendu: 296 espaces, trouvé: 20 [style.indentation]
                       If IsArray(subfiles) Then
ℹ️ Ligne 1109: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 1109: Indentation incorrecte. Attendu: 296 espaces, trouvé: 24 [style.indentation]
                           Dim i As Long
ℹ️ Ligne 1110: Indentation incorrecte. Attendu: 300 espaces, trouvé: 24 [style.indentation]
                           For i = LBound(subfiles) To UBound(subfiles)
ℹ️ Ligne 1111: Indentation incorrecte. Attendu: 304 espaces, trouvé: 28 [style.indentation]
                               If fileCount > UBound(files) Then
ℹ️ Ligne 1112: Indentation incorrecte. Attendu: 304 espaces, trouvé: 32 [style.indentation]
                                   ReDim Preserve files(0 To UBound(files) * 2)
ℹ️ Ligne 1115: Indentation incorrecte. Attendu: 300 espaces, trouvé: 28 [style.indentation]
                               files(fileCount) = subfiles(i)
ℹ️ Ligne 1116: Indentation incorrecte. Attendu: 300 espaces, trouvé: 28 [style.indentation]
                               fileCount = fileCount + 1
ℹ️ Ligne 1117: Indentation incorrecte. Attendu: 296 espaces, trouvé: 24 [style.indentation]
                           Next i
ℹ️ Ligne 1122: Indentation incorrecte. Attendu: 284 espaces, trouvé: 12 [style.indentation]
               subfolder = Dir()
ℹ️ Ligne 1123: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           Loop
ℹ️ Ligne 1127: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       If fileCount > 0 Then
ℹ️ Ligne 1128: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           ReDim Preserve files(0 To fileCount - 1)
ℹ️ Ligne 1129: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           FindFiles = files
ℹ️ Ligne 1131: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           FindFiles = Array()
ℹ️ Ligne 1134: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 1138: Indentation incorrecte. Attendu: 280 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 1140: Indentation incorrecte. Attendu: 280 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 1141: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la recherche de fichiers: " & Err.Description
ℹ️ Ligne 1142: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 1143: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       FindFiles = Array()
ℹ️ Ligne 1147: Indentation incorrecte. Attendu: 276 espaces, trouvé: 0 [style.indentation]
   Private Const MAX_PATH As Long = 260
ℹ️ Ligne 1150: Indentation incorrecte. Attendu: 276 espaces, trouvé: 0 [style.indentation]
   Public Property Get LastError() As String
ℹ️ Ligne 1152: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       LastError = m_LastError
ℹ️ Ligne 1160: Indentation incorrecte. Attendu: 276 espaces, trouvé: 0 [style.indentation]
   Private Sub LogError(ByVal errorMessage As String)
ℹ️ Ligne 1162: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\testing\modTestRunner.bas
----------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 26: Le nom de variable 'm_suites' de type Collection devrait commencer par 'col' [naming.variable_prefix]
   Private m_suites As Collection
ℹ️ Ligne 26: Le nom de variable 'm_suites' ne suit pas la convention camelCase [naming.variable_case]
   Private m_suites As Collection
ℹ️ Ligne 27: Le nom de variable 'm_runningTest' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Private m_runningTest As Boolean
ℹ️ Ligne 27: Le nom de variable 'm_runningTest' ne suit pas la convention camelCase [naming.variable_case]
   Private m_runningTest As Boolean
ℹ️ Ligne 28: Le nom de variable 'm_stopTests' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Private m_stopTests As Boolean
ℹ️ Ligne 28: Le nom de variable 'm_stopTests' ne suit pas la convention camelCase [naming.variable_case]
   Private m_stopTests As Boolean
ℹ️ Ligne 29: Le nom de variable 'm_currentTestName' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_currentTestName As String
ℹ️ Ligne 29: Le nom de variable 'm_currentTestName' ne suit pas la convention camelCase [naming.variable_case]
   Private m_currentTestName As String
ℹ️ Ligne 30: Le nom de variable 'm_perfResults' de type Collection devrait commencer par 'col' [naming.variable_prefix]
   Private m_perfResults As Collection
ℹ️ Ligne 30: Le nom de variable 'm_perfResults' ne suit pas la convention camelCase [naming.variable_case]
   Private m_perfResults As Collection
ℹ️ Ligne 31: Le nom de variable 'm_configManager' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_configManager As Object
ℹ️ Ligne 31: Le nom de variable 'm_configManager' ne suit pas la convention camelCase [naming.variable_case]
   Private m_configManager As Object
ℹ️ Ligne 32: Le nom de variable 'm_logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_logger As Object
ℹ️ Ligne 32: Le nom de variable 'm_logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_logger As Object
ℹ️ Ligne 39: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub RegisterTestSuite(suite As clsTestSuite)
ℹ️ Ligne 40: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If m_suites Is Nothing Then Set m_suites = New Collection
ℹ️ Ligne 43: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub RunAllTests(Optional ByVal outputReport As Boolean = True, Optional ByVal stopOnFailure As Boolean = False)
⚠️ Ligne 55: La fonction 'RunAllTests' est trop longue (128 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 56: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If m_runningTest Then
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       m_runningTest = True
ℹ️ Ligne 66: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       m_stopTests = False
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       InitializeConfig
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Not GetConfigBool("General", "EnableTests", True) Then
ℹ️ Ligne 73: La ligne dépasse la longueur maximale recommandée (138/120) [style.line_length]
   LogMessage "Les tests sont désactivés dans la configuration. Modifiez le fichier " & CONFIG_FILE & " pour les activer.", "warning"
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           LogMessage "Les tests sont désactivés dans la configuration. Modifiez le fichier " & CONFIG_FILE & " pour les activer.", "warning"
ℹ️ Ligne 74: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           m_runningTest = False
ℹ️ Ligne 75: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 16 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 83: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set m_perfResults = New Collection
ℹ️ Ligne 85: Le nom de variable 'startTime' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim startTime As Double
ℹ️ Ligne 85: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim startTime As Double
ℹ️ Ligne 86: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       startTime = Timer
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If outputReport Then EnsureReportFolder
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim suite As clsTestSuite
ℹ️ Ligne 92: Le nom de variable 'totalSuites' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim totalSuites As Long
ℹ️ Ligne 92: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim totalSuites As Long
ℹ️ Ligne 93: Le nom de variable 'totalTests' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim totalTests As Long
ℹ️ Ligne 93: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim totalTests As Long
ℹ️ Ligne 94: Le nom de variable 'totalPassed' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim totalPassed As Long
ℹ️ Ligne 94: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim totalPassed As Long
ℹ️ Ligne 95: Le nom de variable 'totalFailed' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim totalFailed As Long
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim totalFailed As Long
ℹ️ Ligne 96: Le nom de variable 'totalSkipped' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim totalSkipped As Long
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim totalSkipped As Long
ℹ️ Ligne 97: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim suiteResults As String
ℹ️ Ligne 98: Le nom de variable 'allResults' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim allResults As String
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim allResults As String
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       LogMessage "==========================================================", "info"
ℹ️ Ligne 102: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       LogMessage "DÉBUT DE L'EXÉCUTION DE TOUS LES TESTS: " & Format(Now, "yyyy-mm-dd hh:mm:ss"), "info"
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       LogMessage "==========================================================", "info"
ℹ️ Ligne 105: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If m_suites Is Nothing Or m_suites.Count = 0 Then
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           LogMessage "AUCUNE SUITE DE TEST ENREGISTRÉE", "warning"
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           If outputReport Then
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               WriteReportFile "AUCUNE SUITE DE TEST ENREGISTRÉE", "AllTests"
ℹ️ Ligne 110: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           m_runningTest = False
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 119: Le nom de variable 'suitesToRun' de type Collection devrait commencer par 'col' [naming.variable_prefix]
   Dim suitesToRun As Collection
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim suitesToRun As Collection
ℹ️ Ligne 120: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Set suitesToRun = GetSuitesToRun(m_suites)
ℹ️ Ligne 123: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       For Each suite In suitesToRun
ℹ️ Ligne 124: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           suiteResults = RunSuite(suite, stopOnFailure)
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           allResults = allResults & suiteResults & vbCrLf & vbCrLf
ℹ️ Ligne 127: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           totalSuites = totalSuites + 1
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           totalTests = totalTests + suite.TestCount
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           totalPassed = totalPassed + suite.PassedCount
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           totalFailed = totalFailed + suite.FailedCount
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           totalSkipped = totalSkipped + suite.SkippedCount
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           If m_stopTests Then Exit For
ℹ️ Ligne 134: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Next suite
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "==========================================================", "info"
ℹ️ Ligne 138: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "RÉSUMÉ DES TESTS:", "info"
ℹ️ Ligne 139: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Suites: " & totalSuites, "info"
ℹ️ Ligne 140: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Tests: " & totalTests, "info"
ℹ️ Ligne 141: La ligne dépasse la longueur maximale recommandée (137/120) [style.line_length]
   LogMessage "  Réussis: " & totalPassed & " (" & Format(IIf(totalTests > 0, totalPassed / totalTests * 100, 0), "0.00") & "%)", "info"
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Réussis: " & totalPassed & " (" & Format(IIf(totalTests > 0, totalPassed / totalTests * 100, 0), "0.00") & "%)", "info"
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Échoués: " & totalFailed, "info"
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Ignorés: " & totalSkipped, "info"
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Temps total: " & Format(Timer - startTime, "0.000") & " secondes", "info"
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "==========================================================", "info"
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If m_perfResults.Count > 0 And GetConfigBool("Performance", "LogPerformance", True) Then
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           LogMessage vbCrLf & "TOP 5 DES TESTS LES PLUS LENTS:", "info"
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           OutputTopSlowTests GetConfigInt("Reporting", "Top5SlowTests", 5)
ℹ️ Ligne 154: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If outputReport And GetConfigBool("Reporting", "GenerateReports", True) Then
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           Dim summary As String
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           summary = "RÉSUMÉ DES TESTS:" & vbCrLf & _
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 28 espaces, trouvé: 17 [style.indentation]
                    "  Suites: " & totalSuites & vbCrLf & _
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 28 espaces, trouvé: 17 [style.indentation]
                    "  Tests: " & totalTests & vbCrLf & _
ℹ️ Ligne 159: La ligne dépasse la longueur maximale recommandée (144/120) [style.line_length]
   "  Réussis: " & totalPassed & " (" & Format(IIf(totalTests > 0, totalPassed / totalTests * 100, 0), "0.00") & "%)" & vbCrLf & _
ℹ️ Ligne 159: Indentation incorrecte. Attendu: 28 espaces, trouvé: 17 [style.indentation]
                    "  Réussis: " & totalPassed & " (" & Format(IIf(totalTests > 0, totalPassed / totalTests * 100, 0), "0.00") & "%)" & vbCrLf & _
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 28 espaces, trouvé: 17 [style.indentation]
                    "  Échoués: " & totalFailed & vbCrLf & _
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 28 espaces, trouvé: 17 [style.indentation]
                    "  Ignorés: " & totalSkipped & vbCrLf & _
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 28 espaces, trouvé: 17 [style.indentation]
                    "  Temps total: " & Format(Timer - startTime, "0.000") & " secondes"
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           If m_perfResults.Count > 0 And GetConfigBool("Reporting", "Top5SlowTests", True) Then
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 32 espaces, trouvé: 12 [style.indentation]
               summary = summary & vbCrLf & vbCrLf & "TOP 5 DES TESTS LES PLUS LENTS:" & vbCrLf
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 32 espaces, trouvé: 12 [style.indentation]
               summary = summary & GetTopSlowTestsText(5)
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           allResults = allResults & vbCrLf & summary
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           WriteReportFile allResults, "AllTests"
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           If GetConfigBool("Email", "SendReportByEmail", False) Then
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 32 espaces, trouvé: 12 [style.indentation]
               SendReportByEmail summary
ℹ️ Ligne 180: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       m_runningTest = False
ℹ️ Ligne 181: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Set m_perfResults = Nothing
ℹ️ Ligne 189: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   Public Function RunSuite(suite As clsTestSuite, Optional ByVal stopOnFailure As Boolean = False) As String
ℹ️ Ligne 190: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 191: Le nom de variable 'startTime' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim startTime As Double
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim startTime As Double
ℹ️ Ligne 192: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       startTime = Timer
ℹ️ Ligne 194: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "DÉBUT DE LA SUITE: " & suite.Name, "info"
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       result = "SUITE DE TEST: " & suite.Name & vbCrLf
ℹ️ Ligne 198: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       suite.RunAllTests stopOnFailure
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Tests: " & suite.TestCount, "info"
ℹ️ Ligne 202: La ligne dépasse la longueur maximale recommandée (159/120) [style.line_length]
   LogMessage "  Réussis: " & suite.PassedCount & " (" & Format(IIf(suite.TestCount > 0, suite.PassedCount / suite.TestCount * 100, 0), "0.00") & "%)", "info"
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Réussis: " & suite.PassedCount & " (" & Format(IIf(suite.TestCount > 0, suite.PassedCount / suite.TestCount * 100, 0), "0.00") & "%)", "info"
ℹ️ Ligne 202: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   LogMessage "  Réussis: " & suite.PassedCount & " (" & Format(IIf(suite.TestCount > 0, suite.PassedCount / suite.TestCount * 100, 0), "0.00") & "%)", "info"
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Échoués: " & suite.FailedCount, "info"
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Ignorés: " & suite.SkippedCount, "info"
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "  Temps: " & Format(Timer - startTime, "0.000") & " secondes", "info"
ℹ️ Ligne 208: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       result = result & "  Tests: " & suite.TestCount & vbCrLf & _
ℹ️ Ligne 209: La ligne dépasse la longueur maximale recommandée (162/120) [style.line_length]
   "  Réussis: " & suite.PassedCount & " (" & Format(IIf(suite.TestCount > 0, suite.PassedCount / suite.TestCount * 100, 0), "0.00") & "%)" & vbCrLf & _
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 24 espaces, trouvé: 13 [style.indentation]
                "  Réussis: " & suite.PassedCount & " (" & Format(IIf(suite.TestCount > 0, suite.PassedCount / suite.TestCount * 100, 0), "0.00") & "%)" & vbCrLf & _
ℹ️ Ligne 209: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   "  Réussis: " & suite.PassedCount & " (" & Format(IIf(suite.TestCount > 0, suite.PassedCount / suite.TestCount * 100, 0), "0.00") & "%)" & vbCrLf & _
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 24 espaces, trouvé: 13 [style.indentation]
                "  Échoués: " & suite.FailedCount & vbCrLf & _
ℹ️ Ligne 211: Indentation incorrecte. Attendu: 24 espaces, trouvé: 13 [style.indentation]
                "  Ignorés: " & suite.SkippedCount & vbCrLf & _
ℹ️ Ligne 212: Indentation incorrecte. Attendu: 24 espaces, trouvé: 13 [style.indentation]
                "  Temps: " & Format(Timer - startTime, "0.000") & " secondes" & vbCrLf
ℹ️ Ligne 215: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If suite.FailedCount > 0 Then
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           result = result & vbCrLf & "DÉTAILS DES ÉCHECS:" & vbCrLf & suite.GetFailureDetails
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If suite.FailedCount > 0 And stopOnFailure Then
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           LogMessage "ARRÊT DES TESTS DEMANDÉ EN RAISON D'UN ÉCHEC", "warning"
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           m_stopTests = True
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       RunSuite = result
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Public Function RunTest(testName As String, testProc As String, _
⚠️ Ligne 233: La fonction 'RunTest' est trop longue (106 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 20 espaces, trouvé: 24 [style.indentation]
                           Optional callingModule As String = "", _
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 20 espaces, trouvé: 24 [style.indentation]
                           Optional timeout As Long = 0, _
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 20 espaces, trouvé: 24 [style.indentation]
                           Optional expectedExceptions As String = "") As clsTestResult
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim result As New clsTestResult
ℹ️ Ligne 238: Le nom de variable 'startTime' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim startTime As Double
ℹ️ Ligne 238: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim startTime As Double
ℹ️ Ligne 239: Le nom de variable 'elapsedTime' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim elapsedTime As Double
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim elapsedTime As Double
ℹ️ Ligne 240: Le nom de variable 'perfEntry' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim perfEntry As String
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim perfEntry As String
ℹ️ Ligne 241: Le nom de variable 'actualTimeout' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim actualTimeout As Long
ℹ️ Ligne 241: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim actualTimeout As Long
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       result.TestName = testName
ℹ️ Ligne 245: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       result.Success = False ' Par défaut, considérer que le test échoue
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_currentTestName = testName
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If timeout <= 0 Then
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           actualTimeout = GetConfigInt("Performance", "MaxTestDurationSeconds", 30) * 1000
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           actualTimeout = timeout
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If GetConfigBool("Debug", "VerboseLogging", False) Then
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           LogMessage "Début d'exécution du test: " & testName, "debug"
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       startTime = Timer
ℹ️ Ligne 266: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Application.OnTime Now + TimeSerial(0, 0, actualTimeout / 1000), "TestTimeoutHandler"
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If callingModule <> "" Then
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Application.Run callingModule & "." & testProc
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Application.Run testProc
ℹ️ Ligne 275: Le nom de variable 'errorOccurred' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim errorOccurred As Boolean
ℹ️ Ligne 275: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim errorOccurred As Boolean
ℹ️ Ligne 276: Le nom de variable 'errorWasExpected' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim errorWasExpected As Boolean
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim errorWasExpected As Boolean
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       errorOccurred = (Err.Number <> 0)
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       errorWasExpected = IsErrorExpected(Err.Number, expectedExceptions)
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 283: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Application.OnTime Now + TimeSerial(0, 0, actualTimeout / 1000), "TestTimeoutHandler", , False
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If errorOccurred Then
ℹ️ Ligne 287: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           If errorWasExpected Then
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.Success = True
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.ErrorMessage = "Exception attendue: " & Err.Description & " (Code: " & Err.Number & ")"
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.Success = False
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.ErrorMessage = "Erreur d'exécution: " & Err.Description & " (Code: " & Err.Number & ")"
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.ErrorSource = IIf(Err.Source <> "", Err.Source, callingModule & "." & testProc)
ℹ️ Ligne 293: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   result.ErrorSource = IIf(Err.Source <> "", Err.Source, callingModule & "." & testProc)
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           If expectedExceptions <> "" Then
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.Success = False
ℹ️ Ligne 300: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.ErrorMessage = "Exception attendue non déclenchée: " & expectedExceptions
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.ErrorSource = callingModule & "." & testProc
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               result.Success = True
ℹ️ Ligne 309: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       elapsedTime = Timer - startTime
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       result.ExecutionTime = elapsedTime
ℹ️ Ligne 313: Le nom de variable 'perfThreshold' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim perfThreshold As Long
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim perfThreshold As Long
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       perfThreshold = GetConfigInt("Performance", "PerformanceThresholdMs", 1000) / 1000
ℹ️ Ligne 316: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If elapsedTime > perfThreshold Then
ℹ️ Ligne 317: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           result.IsPerformanceIssue = True
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           If GetConfigBool("Debug", "VerboseLogging", False) Then
ℹ️ Ligne 319: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               LogMessage "Test lent détecté: " & testName & " (" & Format(elapsedTime, "0.000") & " sec)", "warning"
ℹ️ Ligne 324: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       perfEntry = testName & "|" & Format(elapsedTime, "0.000") & "|" & IIf(result.Success, "Réussi", "Échoué")
ℹ️ Ligne 325: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       m_perfResults.Add perfEntry
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If GetConfigBool("Debug", "VerboseLogging", False) Then
ℹ️ Ligne 329: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           LogMessage "Fin d'exécution du test: " & testName & " - " & IIf(result.Success, "RÉUSSI", "ÉCHEC"), _
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 16 espaces, trouvé: 18 [style.indentation]
                     IIf(result.Success, "info", "error")
ℹ️ Ligne 334: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       m_currentTestName = ""
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set RunTest = result
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 345: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Sub TestTimeoutHandler()
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If m_currentTestName <> "" Then
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           LogMessage "TIMEOUT: Le test '" & m_currentTestName & "' a dépassé le temps maximum d'exécution", "error"
ℹ️ Ligne 356: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Sub InitializeConfig()
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 360: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Set m_configManager = CreateObject("APEX.ConfigManager")
ℹ️ Ligne 361: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 362: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Set m_configManager = Nothing
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 367: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Set m_logger = CreateObject("APEX.Logger")
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 369: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Set m_logger = Nothing
ℹ️ Ligne 370: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 373: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 381: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Function GetConfigString(section As String, key As String, defaultValue As String) As String
ℹ️ Ligne 383: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 385: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Not m_configManager Is Nothing Then
ℹ️ Ligne 392: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 403: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 405: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Function GetConfigInt(section As String, key As String, defaultValue As Long) As Long
ℹ️ Ligne 406: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 407: Le nom de variable 'result' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim result As Long
ℹ️ Ligne 407: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Dim result As Long
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Not m_configManager Is Nothing Then
ℹ️ Ligne 410: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           result = CLng(m_configManager.GetSetting(section, key, CStr(defaultValue)))
ℹ️ Ligne 413: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           result = CLng(GetINISetting(CONFIG_FILE, section, key, CStr(defaultValue)))
ℹ️ Ligne 416: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           result = defaultValue
ℹ️ Ligne 418: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 421: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       GetConfigInt = result
ℹ️ Ligne 422: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 427: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 429: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Private Function GetConfigBool(section As String, key As String, defaultValue As Boolean) As Boolean
ℹ️ Ligne 430: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 431: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 431: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 433: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Not m_configManager Is Nothing Then
ℹ️ Ligne 434: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           result = m_configManager.GetSetting(section, key, IIf(defaultValue, "True", "False"))
ℹ️ Ligne 437: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           result = GetINISetting(CONFIG_FILE, section, key, IIf(defaultValue, "True", "False"))
ℹ️ Ligne 440: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 441: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           GetConfigBool = defaultValue
ℹ️ Ligne 442: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 443: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 447: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 451: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       result = UCase(Trim(result))
ℹ️ Ligne 452: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       GetConfigBool = (result = "TRUE" Or result = "YES" Or result = "1")
ℹ️ Ligne 454: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 462: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Private Sub LogMessage(message As String, logLevel As String)
⚠️ Ligne 462: La fonction 'LogMessage' est trop longue (189 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 464: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 465: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Not m_logger Is Nothing Then
ℹ️ Ligne 468: Indentation incorrecte. Attendu: 20 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogDebug MODULE_NAME, message
ℹ️ Ligne 470: Indentation incorrecte. Attendu: 20 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 472: Indentation incorrecte. Attendu: 20 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogWarning MODULE_NAME, message
ℹ️ Ligne 474: Indentation incorrecte. Attendu: 20 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogError MODULE_NAME, message
ℹ️ Ligne 476: Indentation incorrecte. Attendu: 20 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 480: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Debug.Print message
ℹ️ Ligne 482: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 487: Indentation incorrecte. Attendu: 16 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 489: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Private Sub EnsureReportFolder()
ℹ️ Ligne 490: Le nom de variable 'fso' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim fso As Object
ℹ️ Ligne 490: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim fso As Object
ℹ️ Ligne 491: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Set fso = CreateObject("Scripting.FileSystemObject")
ℹ️ Ligne 493: Le nom de variable 'folderPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim folderPath As String
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim folderPath As String
ℹ️ Ligne 494: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       folderPath = GetConfigString("General", "ReportFolder", REPORT_FOLDER)
ℹ️ Ligne 496: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If Not fso.FolderExists(folderPath) Then
ℹ️ Ligne 497: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           On Error Resume Next
ℹ️ Ligne 498: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           fso.CreateFolder folderPath
ℹ️ Ligne 499: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           If Err.Number <> 0 Then
ℹ️ Ligne 500: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               LogMessage "AVERTISSEMENT: Impossible de créer le dossier de rapports: " & Err.Description, "warning"
ℹ️ Ligne 501: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               Err.Clear
ℹ️ Ligne 503: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           On Error GoTo 0
ℹ️ Ligne 509: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 511: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   Private Sub WriteReportFile(content As String, reportName As String)
ℹ️ Ligne 512: Le nom de variable 'fso' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim fso As Object
ℹ️ Ligne 512: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim fso As Object
ℹ️ Ligne 513: Le nom de variable 'ts' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim ts As Object
ℹ️ Ligne 513: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim ts As Object
ℹ️ Ligne 514: Le nom de variable 'fileName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim fileName As String
ℹ️ Ligne 514: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim fileName As String
ℹ️ Ligne 516: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Set fso = CreateObject("Scripting.FileSystemObject")
ℹ️ Ligne 519: Le nom de variable 'folderPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim folderPath As String
ℹ️ Ligne 519: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim folderPath As String
ℹ️ Ligne 520: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       folderPath = GetConfigString("General", "ReportFolder", REPORT_FOLDER)
ℹ️ Ligne 522: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       fileName = folderPath & "\" & reportName & "_" & Format(Now, "yyyymmdd_hhmmss") & "." & _
ℹ️ Ligne 523: Indentation incorrecte. Attendu: 24 espaces, trouvé: 15 [style.indentation]
                  LCase(GetConfigString("Reporting", "ReportFormat", "TXT"))
ℹ️ Ligne 525: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 526: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Set ts = fso.CreateTextFile(fileName, True)
ℹ️ Ligne 527: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 528: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           LogMessage "ERREUR: Impossible de créer le fichier de rapport: " & Err.Description, "error"
ℹ️ Ligne 529: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 530: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 534: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 538: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       ts.WriteLine "RAPPORT DE TESTS APEX VBA FRAMEWORK"
ℹ️ Ligne 539: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       ts.WriteLine "Date: " & Format(Now, "yyyy-mm-dd hh:mm:ss")
ℹ️ Ligne 540: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       ts.WriteLine "=============================================="
ℹ️ Ligne 541: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       ts.WriteLine ""
ℹ️ Ligne 544: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       ts.Write content
ℹ️ Ligne 547: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       ts.Close
ℹ️ Ligne 548: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogMessage "Rapport de test enregistré: " & fileName, "info"
ℹ️ Ligne 549: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 554: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 556: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Private Function GetSuitesToRun(allSuites As Collection) As Collection
ℹ️ Ligne 557: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Dim result As New Collection
ℹ️ Ligne 560: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       If GetConfigBool("TestSelection", "RunAllTests", True) Then
ℹ️ Ligne 561: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           Set GetSuitesToRun = allSuites
ℹ️ Ligne 562: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 566: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 570: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Dim selectedSuites As String
ℹ️ Ligne 571: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       selectedSuites = GetConfigString("TestSelection", "SelectedSuites", "")
ℹ️ Ligne 573: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       If Trim(selectedSuites) = "" Then
ℹ️ Ligne 575: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Set GetSuitesToRun = allSuites
ℹ️ Ligne 576: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 580: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 584: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim suiteArray() As String
ℹ️ Ligne 585: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 585: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 586: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim suite As clsTestSuite
ℹ️ Ligne 588: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       suiteArray = Split(selectedSuites, ",")
ℹ️ Ligne 590: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       For i = 0 To UBound(suiteArray)
ℹ️ Ligne 591: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           Dim suiteName As String
ℹ️ Ligne 592: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           suiteName = Trim(suiteArray(i))
ℹ️ Ligne 594: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           On Error Resume Next
ℹ️ Ligne 595: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Set suite = allSuites(suiteName)
ℹ️ Ligne 596: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           If Err.Number = 0 Then
ℹ️ Ligne 597: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               result.Add suite, suiteName
ℹ️ Ligne 599: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               LogMessage "Suite de test introuvable: " & suiteName, "warning"
ℹ️ Ligne 600: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               Err.Clear
ℹ️ Ligne 602: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           On Error GoTo 0
ℹ️ Ligne 603: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 605: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       If result.Count = 0 Then
ℹ️ Ligne 606: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           LogMessage "Aucune suite de test valide trouvée dans la sélection. Exécution de toutes les suites.", "warning"
ℹ️ Ligne 607: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Set GetSuitesToRun = allSuites
ℹ️ Ligne 609: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Set GetSuitesToRun = result
ℹ️ Ligne 615: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 617: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   Private Function IsErrorExpected(errNumber As Long, expectedExceptions As String) As Boolean
ℹ️ Ligne 618: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If Trim(expectedExceptions) = "" Then
ℹ️ Ligne 619: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           IsErrorExpected = False
ℹ️ Ligne 620: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 624: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 627: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim expArray() As String
ℹ️ Ligne 628: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 628: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 630: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       expArray = Split(expectedExceptions, ",")
ℹ️ Ligne 632: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       For i = 0 To UBound(expArray)
ℹ️ Ligne 633: Le nom de variable 'expErr' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim expErr As Long
ℹ️ Ligne 633: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           Dim expErr As Long
ℹ️ Ligne 635: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           On Error Resume Next
ℹ️ Ligne 636: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           expErr = CLng(Trim(expArray(i)))
ℹ️ Ligne 637: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           If Err.Number = 0 And expErr = errNumber Then
ℹ️ Ligne 638: Indentation incorrecte. Attendu: 52 espaces, trouvé: 12 [style.indentation]
               IsErrorExpected = True
ℹ️ Ligne 639: Indentation incorrecte. Attendu: 52 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 643: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 645: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 646: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           On Error GoTo 0
ℹ️ Ligne 647: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 649: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       IsErrorExpected = False
ℹ️ Ligne 657: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   Private Sub OutputTopSlowTests(ByVal topCount As Long)
⚠️ Ligne 657: La fonction 'OutputTopSlowTests' est trop longue (143 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 658: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 658: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 659: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim perfArray() As String
ℹ️ Ligne 660: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim parts() As String
ℹ️ Ligne 661: Le nom de variable 'temp' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim temp As String
ℹ️ Ligne 661: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim temp As String
ℹ️ Ligne 662: Le nom de variable 'j' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim j As Long, k As Long
ℹ️ Ligne 662: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim j As Long, k As Long
ℹ️ Ligne 665: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ReDim perfArray(1 To m_perfResults.Count)
ℹ️ Ligne 666: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       For i = 1 To m_perfResults.Count
ℹ️ Ligne 667: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           perfArray(i) = m_perfResults(i)
ℹ️ Ligne 668: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 671: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       For j = 1 To UBound(perfArray) - 1
ℹ️ Ligne 672: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           For k = j + 1 To UBound(perfArray)
ℹ️ Ligne 673: Indentation incorrecte. Attendu: 56 espaces, trouvé: 12 [style.indentation]
               parts = Split(perfArray(j), "|")
ℹ️ Ligne 674: Le nom de variable 'time1' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim time1 As Double
ℹ️ Ligne 674: Indentation incorrecte. Attendu: 56 espaces, trouvé: 12 [style.indentation]
               Dim time1 As Double
ℹ️ Ligne 675: Indentation incorrecte. Attendu: 56 espaces, trouvé: 12 [style.indentation]
               time1 = CDbl(parts(1))
ℹ️ Ligne 677: Indentation incorrecte. Attendu: 56 espaces, trouvé: 12 [style.indentation]
               parts = Split(perfArray(k), "|")
ℹ️ Ligne 678: Le nom de variable 'time2' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim time2 As Double
ℹ️ Ligne 678: Indentation incorrecte. Attendu: 56 espaces, trouvé: 12 [style.indentation]
               Dim time2 As Double
ℹ️ Ligne 679: Indentation incorrecte. Attendu: 56 espaces, trouvé: 12 [style.indentation]
               time2 = CDbl(parts(1))
ℹ️ Ligne 681: Indentation incorrecte. Attendu: 60 espaces, trouvé: 12 [style.indentation]
               If time1 < time2 Then
ℹ️ Ligne 682: Indentation incorrecte. Attendu: 60 espaces, trouvé: 16 [style.indentation]
                   temp = perfArray(j)
ℹ️ Ligne 683: Indentation incorrecte. Attendu: 60 espaces, trouvé: 16 [style.indentation]
                   perfArray(j) = perfArray(k)
ℹ️ Ligne 684: Indentation incorrecte. Attendu: 60 espaces, trouvé: 16 [style.indentation]
                   perfArray(k) = temp
ℹ️ Ligne 686: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           Next k
ℹ️ Ligne 687: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Next j
ℹ️ Ligne 690: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       For i = 1 To IIf(topCount < UBound(perfArray), topCount, UBound(perfArray))
ℹ️ Ligne 691: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           parts = Split(perfArray(i), "|")
ℹ️ Ligne 692: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           LogMessage "  " & i & ". " & parts(0) & " - " & parts(1) & " sec (" & parts(2) & ")", "info"
ℹ️ Ligne 693: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 698: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 700: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Private Function GetTopSlowTestsText(ByVal topCount As Long) As String
ℹ️ Ligne 701: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 701: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 702: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim perfArray() As String
ℹ️ Ligne 703: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim parts() As String
ℹ️ Ligne 704: Le nom de variable 'temp' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim temp As String
ℹ️ Ligne 704: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim temp As String
ℹ️ Ligne 705: Le nom de variable 'j' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim j As Long, k As Long
ℹ️ Ligne 705: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim j As Long, k As Long
ℹ️ Ligne 706: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 706: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 709: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       ReDim perfArray(1 To m_perfResults.Count)
ℹ️ Ligne 710: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       For i = 1 To m_perfResults.Count
ℹ️ Ligne 711: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           perfArray(i) = m_perfResults(i)
ℹ️ Ligne 712: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 715: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       For j = 1 To UBound(perfArray) - 1
ℹ️ Ligne 716: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           For k = j + 1 To UBound(perfArray)
ℹ️ Ligne 717: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               parts = Split(perfArray(j), "|")
ℹ️ Ligne 718: Le nom de variable 'time1' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim time1 As Double
ℹ️ Ligne 718: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               Dim time1 As Double
ℹ️ Ligne 719: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               time1 = CDbl(parts(1))
ℹ️ Ligne 721: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               parts = Split(perfArray(k), "|")
ℹ️ Ligne 722: Le nom de variable 'time2' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim time2 As Double
ℹ️ Ligne 722: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               Dim time2 As Double
ℹ️ Ligne 723: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               time2 = CDbl(parts(1))
ℹ️ Ligne 725: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               If time1 < time2 Then
ℹ️ Ligne 726: Indentation incorrecte. Attendu: 68 espaces, trouvé: 16 [style.indentation]
                   temp = perfArray(j)
ℹ️ Ligne 727: Indentation incorrecte. Attendu: 68 espaces, trouvé: 16 [style.indentation]
                   perfArray(j) = perfArray(k)
ℹ️ Ligne 728: Indentation incorrecte. Attendu: 68 espaces, trouvé: 16 [style.indentation]
                   perfArray(k) = temp
ℹ️ Ligne 730: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           Next k
ℹ️ Ligne 731: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Next j
ℹ️ Ligne 734: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       For i = 1 To IIf(topCount < UBound(perfArray), topCount, UBound(perfArray))
ℹ️ Ligne 735: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           parts = Split(perfArray(i), "|")
ℹ️ Ligne 736: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           result = result & "  " & i & ". " & parts(0) & " - " & parts(1) & " sec (" & parts(2) & ")" & vbCrLf
ℹ️ Ligne 737: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 739: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       GetTopSlowTestsText = result
ℹ️ Ligne 744: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 746: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   Private Sub SendReportByEmail(ByVal reportContent As String)
ℹ️ Ligne 747: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 749: Le nom de variable 'olApp' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim olApp As Object
ℹ️ Ligne 749: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim olApp As Object
ℹ️ Ligne 750: Le nom de variable 'olMail' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim olMail As Object
ℹ️ Ligne 750: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim olMail As Object
ℹ️ Ligne 751: Le nom de variable 'recipients' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim recipients As String
ℹ️ Ligne 751: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim recipients As String
ℹ️ Ligne 752: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim subject As String
ℹ️ Ligne 754: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       recipients = GetConfigString("Email", "EmailRecipients", "")
ℹ️ Ligne 755: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       subject = GetConfigString("Email", "EmailSubject", "Rapport de tests APEX Framework")
ℹ️ Ligne 757: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If Trim(recipients) = "" Then
ℹ️ Ligne 758: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           LogMessage "Pas de destinataires configurés pour l'envoi du rapport par email", "warning"
ℹ️ Ligne 759: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 763: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 767: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set olApp = CreateObject("Outlook.Application")
ℹ️ Ligne 768: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 769: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           LogMessage "Impossible de démarrer Outlook pour l'envoi du rapport: " & Err.Description, "error"
ℹ️ Ligne 770: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 771: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 775: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 779: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Set olMail = olApp.CreateItem(0) ' olMailItem = 0
ℹ️ Ligne 781: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       With olMail
ℹ️ Ligne 782: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           .To = recipients
ℹ️ Ligne 783: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           .Subject = subject & " - " & Format(Now, "yyyy-mm-dd")
ℹ️ Ligne 784: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           .Body = reportContent
ℹ️ Ligne 785: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           .Send
ℹ️ Ligne 788: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 789: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           LogMessage "Erreur lors de l'envoi du rapport par email: " & Err.Description, "error"
ℹ️ Ligne 790: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 792: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           LogMessage "Rapport envoyé par email à: " & recipients, "info"
ℹ️ Ligne 795: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Set olMail = Nothing
ℹ️ Ligne 796: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Set olApp = Nothing
ℹ️ Ligne 798: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 806: La ligne dépasse la longueur maximale recommandée (142/120) [style.line_length]
   Private Function GetINISetting(ByVal filePath As String, ByVal section As String, ByVal key As String, ByVal defaultValue As String) As String
ℹ️ Ligne 806: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Function GetINISetting(ByVal filePath As String, ByVal section As String, ByVal key As String, ByVal defaultValue As String) As String
ℹ️ Ligne 807: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 807: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 808: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       result = Space(255)
ℹ️ Ligne 811: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim length As Long
ℹ️ Ligne 812: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       length = GetPrivateProfileString(section, key, defaultValue, result, Len(result), filePath)
ℹ️ Ligne 814: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If length = 0 Then
ℹ️ Ligne 815: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           GetINISetting = defaultValue
ℹ️ Ligne 817: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           GetINISetting = Left(result, length)
ℹ️ Ligne 822: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   Private Declare PtrSafe'@Description: 
ℹ️ Ligne 822: La variable 'Declare' est déclarée mais semble non utilisée [best_practices.unused_variable]
ℹ️ Ligne 826: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function GetPrivateProfileString Lib "kernel32" Alias "GetPrivateProfileStringA" _
ℹ️ Ligne 827: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       (ByVal lpApplicationName As String, ByVal lpKeyName As Any, ByVal lpDefault As String, _
ℹ️ Ligne 828: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
⚠️ Ligne 831: Le nom de fonction 'Class_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Initialize()
ℹ️ Ligne 831: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Initialize()
ℹ️ Ligne 832: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Set m_suites = New Collection
ℹ️ Ligne 833: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       m_runningTest = False
ℹ️ Ligne 834: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       m_stopTests = False
ℹ️ Ligne 835: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       InitializeConfig
ℹ️ Ligne 840: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 842: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 842: Indentation incorrecte. Attendu: 76 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 843: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Set m_suites = Nothing
ℹ️ Ligne 844: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Set m_perfResults = Nothing
ℹ️ Ligne 845: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Set m_configManager = Nothing
ℹ️ Ligne 846: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Set m_logger = Nothing

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\utils\modTextUtils.bas
-------------------------------------------------------------------
ℹ️ Ligne 19: Le nom de variable 'm_Logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 19: Le nom de variable 'm_Logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 20: Le nom de variable 'm_LastError' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_LastError As String
ℹ️ Ligne 20: Le nom de variable 'm_LastError' ne suit pas la convention camelCase [naming.variable_case]
   Private m_LastError As String
ℹ️ Ligne 27: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize(Optional ByVal logger As Object = Nothing)
ℹ️ Ligne 32: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then
ℹ️ Ligne 43: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function IsNullOrEmpty(ByVal text As Variant) As Boolean
⚠️ Ligne 43: La fonction 'IsNullOrEmpty' est trop longue (239 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 48: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If VarType(text) <> vbString Then
ℹ️ Ligne 60: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si la chaîne est nulle ou vide: " & Err.Description
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       IsNullOrEmpty = True
ℹ️ Ligne 70: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Public Function IsNullOrWhiteSpace(ByVal text As Variant) As Boolean
ℹ️ Ligne 74: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 77: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           IsNullOrWhiteSpace = True
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 83: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 87: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       IsNullOrWhiteSpace = (Len(Trim(text)) = 0)
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 93: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 96: La ligne dépasse la longueur maximale recommandée (130/120) [style.line_length]
   m_LastError = "Erreur lors de la vérification si la chaîne est nulle, vide ou ne contient que des espaces: " & Err.Description
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si la chaîne est nulle, vide ou ne contient que des espaces: " & Err.Description
ℹ️ Ligne 97: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       IsNullOrWhiteSpace = True
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 105: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Public Function IfNullOrEmpty(ByVal value As Variant, ByVal defaultValue As Variant) As Variant
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 109: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(value) Then
ℹ️ Ligne 110: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           IfNullOrEmpty = defaultValue
ℹ️ Ligne 112: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           IfNullOrEmpty = value
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 121: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 122: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du remplacement d'une valeur nulle ou vide: " & Err.Description
ℹ️ Ligne 123: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 124: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       IfNullOrEmpty = defaultValue
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   Public Function SafeLeft(ByVal text As String, ByVal length As Long) As String
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 136: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           SafeLeft = ""
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If length <= 0 Then
ℹ️ Ligne 146: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           SafeLeft = ""
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 151: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If length >= Len(text) Then
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           SafeLeft = text
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       SafeLeft = Left(text, length)
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction de caractères à gauche: " & Err.Description
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       SafeLeft = ""
ℹ️ Ligne 181: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 183: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Public Function SafeRight(ByVal text As String, ByVal length As Long) As String
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           SafeRight = ""
ℹ️ Ligne 189: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 193: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If length <= 0 Then
ℹ️ Ligne 198: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           SafeRight = ""
ℹ️ Ligne 199: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       If length >= Len(text) Then
ℹ️ Ligne 208: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           SafeRight = text
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 213: Indentation incorrecte. Attendu: 84 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       SafeRight = Right(text, length)
ℹ️ Ligne 219: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 84 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 84 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction de caractères à droite: " & Err.Description
ℹ️ Ligne 227: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       SafeRight = ""
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   Public Function SafeMid(ByVal text As String, ByVal start As Long, Optional ByVal length As Long = -1) As String
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           SafeMid = ""
ℹ️ Ligne 241: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 245: Indentation incorrecte. Attendu: 100 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 249: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If start <= 0 Then
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           start = 1
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If start > Len(text) Then
ℹ️ Ligne 255: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           SafeMid = ""
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 264: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If length < 0 Then
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           SafeMid = Mid(text, start)
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           SafeMid = Mid(text, start, length)
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 275: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 277: Indentation incorrecte. Attendu: 104 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction de caractères au milieu: " & Err.Description
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 280: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       SafeMid = ""
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 104 espaces, trouvé: 0 [style.indentation]
   Public Function RemoveAccents(ByVal text As String) As String
⚠️ Ligne 288: La fonction 'RemoveAccents' est trop longue (383 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 290: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 291: Le nom de variable 'char' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim char As String
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim char As String
ℹ️ Ligne 292: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           RemoveAccents = ""
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 302: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       result = ""
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       For i = 1 To Len(text)
ℹ️ Ligne 309: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           char = Mid(text, i, 1)
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "A"
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "a"
ℹ️ Ligne 321: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "E"
ℹ️ Ligne 324: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "e"
ℹ️ Ligne 327: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "I"
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "i"
ℹ️ Ligne 333: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "O"
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "o"
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "U"
ℹ️ Ligne 342: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "u"
ℹ️ Ligne 345: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "C"
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "c"
ℹ️ Ligne 351: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "N"
ℹ️ Ligne 354: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "n"
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "AE"
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "ae"
ℹ️ Ligne 361: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "OE"
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & "oe"
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   result = result & char
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 370: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       RemoveAccents = result
ℹ️ Ligne 372: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 376: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 378: Indentation incorrecte. Attendu: 112 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 379: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la suppression des accents: " & Err.Description
ℹ️ Ligne 380: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 381: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       RemoveAccents = text
ℹ️ Ligne 386: Indentation incorrecte. Attendu: 116 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 388: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   Public Function Contains(ByVal text As String, ByVal subString As String, _
ℹ️ Ligne 389: Indentation incorrecte. Attendu: 116 espaces, trouvé: 25 [style.indentation]
                            Optional ByVal caseSensitive As Boolean = True) As Boolean
ℹ️ Ligne 391: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 393: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Or IsNullOrEmpty(subString) Then
ℹ️ Ligne 394: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           Contains = False
ℹ️ Ligne 395: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 399: Indentation incorrecte. Attendu: 124 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 403: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       If caseSensitive Then
ℹ️ Ligne 404: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           Contains = (InStr(1, text, subString, vbBinaryCompare) > 0)
ℹ️ Ligne 406: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           Contains = (InStr(1, text, subString, vbTextCompare) > 0)
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 413: Indentation incorrecte. Attendu: 124 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 415: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 416: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si la chaîne contient une sous-chaîne: " & Err.Description
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 418: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       Contains = False
ℹ️ Ligne 423: Indentation incorrecte. Attendu: 128 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 425: Indentation incorrecte. Attendu: 128 espaces, trouvé: 0 [style.indentation]
   Public Function StartsWith(ByVal text As String, ByVal prefix As String, _
ℹ️ Ligne 426: Indentation incorrecte. Attendu: 128 espaces, trouvé: 27 [style.indentation]
                              Optional ByVal caseSensitive As Boolean = True) As Boolean
ℹ️ Ligne 428: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 430: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 431: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           StartsWith = False
ℹ️ Ligne 432: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 436: Indentation incorrecte. Attendu: 136 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 439: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(prefix) Then
ℹ️ Ligne 440: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           StartsWith = True
ℹ️ Ligne 441: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 445: Indentation incorrecte. Attendu: 140 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 449: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       If Len(prefix) > Len(text) Then
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           StartsWith = False
ℹ️ Ligne 451: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 455: Indentation incorrecte. Attendu: 144 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 459: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       If caseSensitive Then
ℹ️ Ligne 460: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           StartsWith = (Left(text, Len(prefix)) = prefix)
ℹ️ Ligne 462: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           StartsWith = (StrComp(Left(text, Len(prefix)), prefix, vbTextCompare) = 0)
ℹ️ Ligne 465: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 469: Indentation incorrecte. Attendu: 144 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 471: Indentation incorrecte. Attendu: 144 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 472: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si la chaîne commence par un préfixe: " & Err.Description
ℹ️ Ligne 473: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 474: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       StartsWith = False
ℹ️ Ligne 479: Indentation incorrecte. Attendu: 148 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 481: Indentation incorrecte. Attendu: 148 espaces, trouvé: 0 [style.indentation]
   Public Function EndsWith(ByVal text As String, ByVal suffix As String, _
ℹ️ Ligne 482: Indentation incorrecte. Attendu: 148 espaces, trouvé: 25 [style.indentation]
                            Optional ByVal caseSensitive As Boolean = True) As Boolean
ℹ️ Ligne 484: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 486: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 487: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           EndsWith = False
ℹ️ Ligne 488: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 492: Indentation incorrecte. Attendu: 156 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 495: Indentation incorrecte. Attendu: 156 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(suffix) Then
ℹ️ Ligne 496: Indentation incorrecte. Attendu: 156 espaces, trouvé: 8 [style.indentation]
           EndsWith = True
ℹ️ Ligne 497: Indentation incorrecte. Attendu: 156 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 501: Indentation incorrecte. Attendu: 160 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 505: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       If Len(suffix) > Len(text) Then
ℹ️ Ligne 506: Indentation incorrecte. Attendu: 160 espaces, trouvé: 8 [style.indentation]
           EndsWith = False
ℹ️ Ligne 507: Indentation incorrecte. Attendu: 160 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 511: Indentation incorrecte. Attendu: 164 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 515: Indentation incorrecte. Attendu: 164 espaces, trouvé: 4 [style.indentation]
       If caseSensitive Then
ℹ️ Ligne 516: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           EndsWith = (Right(text, Len(suffix)) = suffix)
ℹ️ Ligne 518: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           EndsWith = (StrComp(Right(text, Len(suffix)), suffix, vbTextCompare) = 0)
ℹ️ Ligne 521: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 525: Indentation incorrecte. Attendu: 164 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 527: Indentation incorrecte. Attendu: 164 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 528: Indentation incorrecte. Attendu: 164 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si la chaîne se termine par un suffixe: " & Err.Description
ℹ️ Ligne 529: Indentation incorrecte. Attendu: 164 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 530: Indentation incorrecte. Attendu: 164 espaces, trouvé: 4 [style.indentation]
       EndsWith = False
ℹ️ Ligne 535: Indentation incorrecte. Attendu: 168 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 537: Indentation incorrecte. Attendu: 168 espaces, trouvé: 0 [style.indentation]
   Public Function Truncate(ByVal text As String, ByVal maxLength As Long, _
ℹ️ Ligne 538: Indentation incorrecte. Attendu: 168 espaces, trouvé: 25 [style.indentation]
                            Optional ByVal ellipsis As String = "...") As String
ℹ️ Ligne 540: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 542: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 543: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           Truncate = ""
ℹ️ Ligne 544: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 548: Indentation incorrecte. Attendu: 176 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 552: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       If Len(text) <= maxLength Then
ℹ️ Ligne 553: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           Truncate = text
ℹ️ Ligne 554: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 558: Indentation incorrecte. Attendu: 180 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 562: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       If maxLength <= Len(ellipsis) Then
ℹ️ Ligne 563: Indentation incorrecte. Attendu: 180 espaces, trouvé: 8 [style.indentation]
           Truncate = Left(text, maxLength)
ℹ️ Ligne 564: Indentation incorrecte. Attendu: 180 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 568: Indentation incorrecte. Attendu: 184 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 572: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       Truncate = Left(text, maxLength - Len(ellipsis)) & ellipsis
ℹ️ Ligne 574: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 578: Indentation incorrecte. Attendu: 184 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 580: Indentation incorrecte. Attendu: 184 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 581: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la troncature de la chaîne: " & Err.Description
ℹ️ Ligne 582: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 583: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Truncate = text
ℹ️ Ligne 588: Indentation incorrecte. Attendu: 188 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 590: Indentation incorrecte. Attendu: 188 espaces, trouvé: 0 [style.indentation]
   Public Function PadLeft(ByVal text As String, ByVal totalWidth As Long, _
ℹ️ Ligne 591: Indentation incorrecte. Attendu: 188 espaces, trouvé: 24 [style.indentation]
                           Optional ByVal paddingChar As String = " ") As String
ℹ️ Ligne 593: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 595: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 596: Indentation incorrecte. Attendu: 192 espaces, trouvé: 8 [style.indentation]
           PadLeft = String(totalWidth, paddingChar)
ℹ️ Ligne 597: Indentation incorrecte. Attendu: 192 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 601: Indentation incorrecte. Attendu: 196 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 605: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       If Len(text) >= totalWidth Then
ℹ️ Ligne 606: Indentation incorrecte. Attendu: 196 espaces, trouvé: 8 [style.indentation]
           PadLeft = text
ℹ️ Ligne 607: Indentation incorrecte. Attendu: 196 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 611: Indentation incorrecte. Attendu: 200 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 615: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       PadLeft = String(totalWidth - Len(text), paddingChar) & text
ℹ️ Ligne 617: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 621: Indentation incorrecte. Attendu: 200 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 623: Indentation incorrecte. Attendu: 200 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 624: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du remplissage à gauche de la chaîne: " & Err.Description
ℹ️ Ligne 625: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 626: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       PadLeft = text
ℹ️ Ligne 631: Indentation incorrecte. Attendu: 204 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 633: Indentation incorrecte. Attendu: 204 espaces, trouvé: 0 [style.indentation]
   Public Function PadRight(ByVal text As String, ByVal totalWidth As Long, _
ℹ️ Ligne 634: Indentation incorrecte. Attendu: 204 espaces, trouvé: 25 [style.indentation]
                            Optional ByVal paddingChar As String = " ") As String
ℹ️ Ligne 636: Indentation incorrecte. Attendu: 204 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 638: Indentation incorrecte. Attendu: 208 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 639: Indentation incorrecte. Attendu: 208 espaces, trouvé: 8 [style.indentation]
           PadRight = String(totalWidth, paddingChar)
ℹ️ Ligne 640: Indentation incorrecte. Attendu: 208 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 644: Indentation incorrecte. Attendu: 212 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 648: Indentation incorrecte. Attendu: 212 espaces, trouvé: 4 [style.indentation]
       If Len(text) >= totalWidth Then
ℹ️ Ligne 649: Indentation incorrecte. Attendu: 212 espaces, trouvé: 8 [style.indentation]
           PadRight = text
ℹ️ Ligne 650: Indentation incorrecte. Attendu: 212 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 654: Indentation incorrecte. Attendu: 216 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 658: Indentation incorrecte. Attendu: 212 espaces, trouvé: 4 [style.indentation]
       PadRight = text & String(totalWidth - Len(text), paddingChar)
ℹ️ Ligne 660: Indentation incorrecte. Attendu: 212 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 664: Indentation incorrecte. Attendu: 216 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 666: Indentation incorrecte. Attendu: 216 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 667: Indentation incorrecte. Attendu: 216 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du remplissage à droite de la chaîne: " & Err.Description
ℹ️ Ligne 668: Indentation incorrecte. Attendu: 216 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 669: Indentation incorrecte. Attendu: 216 espaces, trouvé: 4 [style.indentation]
       PadRight = text
ℹ️ Ligne 677: Indentation incorrecte. Attendu: 216 espaces, trouvé: 0 [style.indentation]
   Public Function ExtractNumbers(ByVal text As String) As String
⚠️ Ligne 677: La fonction 'ExtractNumbers' est trop longue (354 lignes, max recommandé: 100) [complexity.function_length]
⚠️ Ligne 677: La fonction 'ExtractNumbers' a un niveau d'imbrication trop élevé (6, max recommandé: 5) [complexity.nesting_level]
ℹ️ Ligne 679: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 679: Indentation incorrecte. Attendu: 216 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 680: Le nom de variable 'char' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim char As String
ℹ️ Ligne 680: Indentation incorrecte. Attendu: 216 espaces, trouvé: 4 [style.indentation]
       Dim char As String
ℹ️ Ligne 681: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 681: Indentation incorrecte. Attendu: 216 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 683: Indentation incorrecte. Attendu: 216 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 685: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 686: Indentation incorrecte. Attendu: 220 espaces, trouvé: 8 [style.indentation]
           ExtractNumbers = ""
ℹ️ Ligne 687: Indentation incorrecte. Attendu: 220 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 691: Indentation incorrecte. Attendu: 224 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 694: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       result = ""
ℹ️ Ligne 697: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       For i = 1 To Len(text)
ℹ️ Ligne 698: Indentation incorrecte. Attendu: 224 espaces, trouvé: 8 [style.indentation]
           char = Mid(text, i, 1)
ℹ️ Ligne 701: Indentation incorrecte. Attendu: 228 espaces, trouvé: 8 [style.indentation]
           If char >= "0" And char <= "9" Then
ℹ️ Ligne 702: Indentation incorrecte. Attendu: 228 espaces, trouvé: 12 [style.indentation]
               result = result & char
ℹ️ Ligne 704: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 706: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       ExtractNumbers = result
ℹ️ Ligne 708: Indentation incorrecte. Attendu: 220 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 712: Indentation incorrecte. Attendu: 224 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 714: Indentation incorrecte. Attendu: 224 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 715: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction des chiffres: " & Err.Description
ℹ️ Ligne 716: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 717: Indentation incorrecte. Attendu: 224 espaces, trouvé: 4 [style.indentation]
       ExtractNumbers = ""
ℹ️ Ligne 722: Indentation incorrecte. Attendu: 228 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 724: Indentation incorrecte. Attendu: 232 espaces, trouvé: 0 [style.indentation]
   Public Function ExtractLetters(ByVal text As String) As String
ℹ️ Ligne 726: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 726: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 727: Le nom de variable 'char' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim char As String
ℹ️ Ligne 727: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       Dim char As String
ℹ️ Ligne 728: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 728: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 730: Indentation incorrecte. Attendu: 232 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 732: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 733: Indentation incorrecte. Attendu: 236 espaces, trouvé: 8 [style.indentation]
           ExtractLetters = ""
ℹ️ Ligne 734: Indentation incorrecte. Attendu: 236 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 738: Indentation incorrecte. Attendu: 240 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 741: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       result = ""
ℹ️ Ligne 744: Indentation incorrecte. Attendu: 240 espaces, trouvé: 4 [style.indentation]
       For i = 1 To Len(text)
ℹ️ Ligne 745: Indentation incorrecte. Attendu: 240 espaces, trouvé: 8 [style.indentation]
           char = Mid(text, i, 1)
ℹ️ Ligne 748: Indentation incorrecte. Attendu: 244 espaces, trouvé: 8 [style.indentation]
           If (char >= "A" And char <= "Z") Or (char >= "a" And char <= "z") Then
ℹ️ Ligne 749: Indentation incorrecte. Attendu: 244 espaces, trouvé: 12 [style.indentation]
               result = result & char
ℹ️ Ligne 751: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 753: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       ExtractLetters = result
ℹ️ Ligne 755: Indentation incorrecte. Attendu: 236 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 759: Indentation incorrecte. Attendu: 240 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 761: Indentation incorrecte. Attendu: 240 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 762: Indentation incorrecte. Attendu: 240 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'extraction des lettres: " & Err.Description
ℹ️ Ligne 763: Indentation incorrecte. Attendu: 240 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 764: Indentation incorrecte. Attendu: 240 espaces, trouvé: 4 [style.indentation]
       ExtractLetters = ""
ℹ️ Ligne 769: Indentation incorrecte. Attendu: 244 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 771: Indentation incorrecte. Attendu: 248 espaces, trouvé: 0 [style.indentation]
   Public Function IsNumeric2(ByVal text As String, Optional ByVal decimalSeparator As String = ",") As Boolean
ℹ️ Ligne 773: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 773: Indentation incorrecte. Attendu: 248 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 774: Le nom de variable 'char' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim char As String
ℹ️ Ligne 774: Indentation incorrecte. Attendu: 248 espaces, trouvé: 4 [style.indentation]
       Dim char As String
ℹ️ Ligne 775: Le nom de variable 'hasSeparator' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim hasSeparator As Boolean
ℹ️ Ligne 775: Indentation incorrecte. Attendu: 248 espaces, trouvé: 4 [style.indentation]
       Dim hasSeparator As Boolean
ℹ️ Ligne 777: Indentation incorrecte. Attendu: 248 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 779: Indentation incorrecte. Attendu: 252 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 780: Indentation incorrecte. Attendu: 252 espaces, trouvé: 8 [style.indentation]
           IsNumeric2 = False
ℹ️ Ligne 781: Indentation incorrecte. Attendu: 252 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 785: Indentation incorrecte. Attendu: 256 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 789: Indentation incorrecte. Attendu: 256 espaces, trouvé: 4 [style.indentation]
       If Len(Trim(text)) = 0 Then
ℹ️ Ligne 790: Indentation incorrecte. Attendu: 256 espaces, trouvé: 8 [style.indentation]
           IsNumeric2 = False
ℹ️ Ligne 791: Indentation incorrecte. Attendu: 256 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 795: Indentation incorrecte. Attendu: 260 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 799: Indentation incorrecte. Attendu: 260 espaces, trouvé: 4 [style.indentation]
       If Left(text, 1) = "+" Or Left(text, 1) = "-" Then
ℹ️ Ligne 800: Indentation incorrecte. Attendu: 260 espaces, trouvé: 8 [style.indentation]
           text = Mid(text, 2)
ℹ️ Ligne 803: Indentation incorrecte. Attendu: 256 espaces, trouvé: 4 [style.indentation]
       hasSeparator = False
ℹ️ Ligne 806: Indentation incorrecte. Attendu: 260 espaces, trouvé: 4 [style.indentation]
       For i = 1 To Len(text)
ℹ️ Ligne 807: Indentation incorrecte. Attendu: 260 espaces, trouvé: 8 [style.indentation]
           char = Mid(text, i, 1)
ℹ️ Ligne 810: Indentation incorrecte. Attendu: 264 espaces, trouvé: 8 [style.indentation]
           If char >= "0" And char <= "9" Then
ℹ️ Ligne 815: Indentation incorrecte. Attendu: 268 espaces, trouvé: 12 [style.indentation]
               If hasSeparator Then
ℹ️ Ligne 816: Indentation incorrecte. Attendu: 268 espaces, trouvé: 16 [style.indentation]
                   IsNumeric2 = False
ℹ️ Ligne 817: Indentation incorrecte. Attendu: 268 espaces, trouvé: 16 [style.indentation]
                   Exit'@Description: 
ℹ️ Ligne 821: Indentation incorrecte. Attendu: 272 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 824: Indentation incorrecte. Attendu: 268 espaces, trouvé: 12 [style.indentation]
               hasSeparator = True
ℹ️ Ligne 827: Indentation incorrecte. Attendu: 268 espaces, trouvé: 12 [style.indentation]
               IsNumeric2 = False
ℹ️ Ligne 828: Indentation incorrecte. Attendu: 268 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 832: Indentation incorrecte. Attendu: 272 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 834: Indentation incorrecte. Attendu: 264 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 836: Indentation incorrecte. Attendu: 264 espaces, trouvé: 4 [style.indentation]
       IsNumeric2 = True
ℹ️ Ligne 838: Indentation incorrecte. Attendu: 264 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 842: Indentation incorrecte. Attendu: 268 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 844: Indentation incorrecte. Attendu: 268 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 845: Indentation incorrecte. Attendu: 268 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification si la chaîne est un nombre: " & Err.Description
ℹ️ Ligne 846: Indentation incorrecte. Attendu: 268 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 847: Indentation incorrecte. Attendu: 268 espaces, trouvé: 4 [style.indentation]
       IsNumeric2 = False
ℹ️ Ligne 852: Indentation incorrecte. Attendu: 272 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 854: Indentation incorrecte. Attendu: 272 espaces, trouvé: 0 [style.indentation]
   Public Function CountOccurrences(ByVal text As String, ByVal subString As String, _
ℹ️ Ligne 855: Indentation incorrecte. Attendu: 272 espaces, trouvé: 32 [style.indentation]
                                   Optional ByVal caseSensitive As Boolean = True) As Long
ℹ️ Ligne 857: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Dim compareMethod As VbCompareMethod
ℹ️ Ligne 858: Le nom de variable 'pos' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim pos As Long
ℹ️ Ligne 858: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Dim pos As Long
ℹ️ Ligne 859: Le nom de variable 'count' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim count As Long
ℹ️ Ligne 859: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       Dim count As Long
ℹ️ Ligne 861: Indentation incorrecte. Attendu: 272 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 863: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Or IsNullOrEmpty(subString) Then
ℹ️ Ligne 864: Indentation incorrecte. Attendu: 276 espaces, trouvé: 8 [style.indentation]
           CountOccurrences = 0
ℹ️ Ligne 865: Indentation incorrecte. Attendu: 276 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 869: Indentation incorrecte. Attendu: 280 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 873: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       If caseSensitive Then
ℹ️ Ligne 874: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           compareMethod = vbBinaryCompare
ℹ️ Ligne 876: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           compareMethod = vbTextCompare
ℹ️ Ligne 879: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       count = 0
ℹ️ Ligne 880: Indentation incorrecte. Attendu: 276 espaces, trouvé: 4 [style.indentation]
       pos = 1
ℹ️ Ligne 883: Indentation incorrecte. Attendu: 280 espaces, trouvé: 4 [style.indentation]
       Do
ℹ️ Ligne 884: Indentation incorrecte. Attendu: 280 espaces, trouvé: 8 [style.indentation]
           pos = InStr(pos, text, subString, compareMethod)
ℹ️ Ligne 886: Indentation incorrecte. Attendu: 284 espaces, trouvé: 8 [style.indentation]
           If pos = 0 Then
ℹ️ Ligne 887: Indentation incorrecte. Attendu: 288 espaces, trouvé: 12 [style.indentation]
               Exit Do
ℹ️ Ligne 890: Indentation incorrecte. Attendu: 284 espaces, trouvé: 8 [style.indentation]
           count = count + 1
ℹ️ Ligne 891: Indentation incorrecte. Attendu: 284 espaces, trouvé: 8 [style.indentation]
           pos = pos + Len(subString)
ℹ️ Ligne 892: Indentation incorrecte. Attendu: 284 espaces, trouvé: 4 [style.indentation]
       Loop While pos <= Len(text)
ℹ️ Ligne 894: Indentation incorrecte. Attendu: 284 espaces, trouvé: 4 [style.indentation]
       CountOccurrences = count
ℹ️ Ligne 896: Indentation incorrecte. Attendu: 284 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 900: Indentation incorrecte. Attendu: 288 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 902: Indentation incorrecte. Attendu: 288 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 903: Indentation incorrecte. Attendu: 288 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du comptage des occurrences: " & Err.Description
ℹ️ Ligne 904: Indentation incorrecte. Attendu: 288 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 905: Indentation incorrecte. Attendu: 288 espaces, trouvé: 4 [style.indentation]
       CountOccurrences = 0
ℹ️ Ligne 910: Indentation incorrecte. Attendu: 292 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 912: Indentation incorrecte. Attendu: 292 espaces, trouvé: 0 [style.indentation]
   Public Function SplitToArray(ByVal text As String, ByVal delimiter As String, _
ℹ️ Ligne 913: Indentation incorrecte. Attendu: 292 espaces, trouvé: 28 [style.indentation]
                               Optional ByVal caseSensitive As Boolean = True) As Variant
ℹ️ Ligne 915: Indentation incorrecte. Attendu: 292 espaces, trouvé: 4 [style.indentation]
       Dim compareMethod As VbCompareMethod
ℹ️ Ligne 917: Indentation incorrecte. Attendu: 292 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 919: Indentation incorrecte. Attendu: 296 espaces, trouvé: 4 [style.indentation]
       If IsNullOrEmpty(text) Then
ℹ️ Ligne 920: Indentation incorrecte. Attendu: 296 espaces, trouvé: 8 [style.indentation]
           SplitToArray = Array()
ℹ️ Ligne 921: Indentation incorrecte. Attendu: 296 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 925: Indentation incorrecte. Attendu: 300 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 929: Indentation incorrecte. Attendu: 300 espaces, trouvé: 4 [style.indentation]
       If caseSensitive Then
ℹ️ Ligne 930: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           compareMethod = vbBinaryCompare
ℹ️ Ligne 932: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           compareMethod = vbTextCompare
ℹ️ Ligne 936: Indentation incorrecte. Attendu: 300 espaces, trouvé: 4 [style.indentation]
       If caseSensitive Then
ℹ️ Ligne 937: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           SplitToArray = Split(text, delimiter)
ℹ️ Ligne 940: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           Dim result() As String
ℹ️ Ligne 941: Le nom de variable 'tmpText' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim tmpText As String
ℹ️ Ligne 941: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           Dim tmpText As String
ℹ️ Ligne 942: Le nom de variable 'pos' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim pos As Long
ℹ️ Ligne 942: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           Dim pos As Long
ℹ️ Ligne 943: Le nom de variable 'count' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim count As Long
ℹ️ Ligne 943: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           Dim count As Long
ℹ️ Ligne 945: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           tmpText = text
ℹ️ Ligne 946: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           count = 0
ℹ️ Ligne 947: Indentation incorrecte. Attendu: 300 espaces, trouvé: 8 [style.indentation]
           ReDim result(0 To 100)
ℹ️ Ligne 950: Indentation incorrecte. Attendu: 304 espaces, trouvé: 8 [style.indentation]
           Do
ℹ️ Ligne 951: Indentation incorrecte. Attendu: 304 espaces, trouvé: 12 [style.indentation]
               pos = InStr(1, tmpText, delimiter, vbTextCompare)
ℹ️ Ligne 953: Indentation incorrecte. Attendu: 308 espaces, trouvé: 12 [style.indentation]
               If pos = 0 Then
ℹ️ Ligne 955: Indentation incorrecte. Attendu: 312 espaces, trouvé: 16 [style.indentation]
                   If Len(tmpText) > 0 Then
ℹ️ Ligne 956: Indentation incorrecte. Attendu: 316 espaces, trouvé: 20 [style.indentation]
                       If count > UBound(result) Then
ℹ️ Ligne 957: Indentation incorrecte. Attendu: 316 espaces, trouvé: 24 [style.indentation]
                           ReDim Preserve result(0 To count * 2)
ℹ️ Ligne 960: Indentation incorrecte. Attendu: 312 espaces, trouvé: 20 [style.indentation]
                       result(count) = tmpText
ℹ️ Ligne 961: Indentation incorrecte. Attendu: 312 espaces, trouvé: 20 [style.indentation]
                       count = count + 1
ℹ️ Ligne 964: Indentation incorrecte. Attendu: 312 espaces, trouvé: 16 [style.indentation]
                   Exit Do
ℹ️ Ligne 968: Indentation incorrecte. Attendu: 312 espaces, trouvé: 12 [style.indentation]
               If count > UBound(result) Then
ℹ️ Ligne 969: Indentation incorrecte. Attendu: 312 espaces, trouvé: 16 [style.indentation]
                   ReDim Preserve result(0 To count * 2)
ℹ️ Ligne 972: Indentation incorrecte. Attendu: 308 espaces, trouvé: 12 [style.indentation]
               result(count) = Left(tmpText, pos - 1)
ℹ️ Ligne 973: Indentation incorrecte. Attendu: 308 espaces, trouvé: 12 [style.indentation]
               count = count + 1
ℹ️ Ligne 976: Indentation incorrecte. Attendu: 308 espaces, trouvé: 12 [style.indentation]
               tmpText = Mid(tmpText, pos + Len(delimiter))
ℹ️ Ligne 977: Indentation incorrecte. Attendu: 304 espaces, trouvé: 8 [style.indentation]
           Loop
ℹ️ Ligne 980: Indentation incorrecte. Attendu: 308 espaces, trouvé: 8 [style.indentation]
           If count > 0 Then
ℹ️ Ligne 981: Indentation incorrecte. Attendu: 308 espaces, trouvé: 12 [style.indentation]
               ReDim Preserve result(0 To count - 1)
ℹ️ Ligne 982: Indentation incorrecte. Attendu: 308 espaces, trouvé: 12 [style.indentation]
               SplitToArray = result
ℹ️ Ligne 984: Indentation incorrecte. Attendu: 308 espaces, trouvé: 12 [style.indentation]
               SplitToArray = Array()
ℹ️ Ligne 988: Indentation incorrecte. Attendu: 300 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 992: Indentation incorrecte. Attendu: 304 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 994: Indentation incorrecte. Attendu: 304 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 995: Indentation incorrecte. Attendu: 304 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du split de la chaîne: " & Err.Description
ℹ️ Ligne 996: Indentation incorrecte. Attendu: 304 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 997: Indentation incorrecte. Attendu: 304 espaces, trouvé: 4 [style.indentation]
       SplitToArray = Array()
ℹ️ Ligne 1002: Indentation incorrecte. Attendu: 308 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 1004: Indentation incorrecte. Attendu: 312 espaces, trouvé: 0 [style.indentation]
   Public Function JoinArray(ByVal arr As Variant, ByVal delimiter As String) As String
ℹ️ Ligne 1006: Indentation incorrecte. Attendu: 312 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 1009: Indentation incorrecte. Attendu: 316 espaces, trouvé: 4 [style.indentation]
       If Not IsArray(arr) Then
ℹ️ Ligne 1010: Indentation incorrecte. Attendu: 316 espaces, trouvé: 8 [style.indentation]
           JoinArray = ""
ℹ️ Ligne 1011: Indentation incorrecte. Attendu: 316 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 1015: Indentation incorrecte. Attendu: 320 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 1018: Indentation incorrecte. Attendu: 316 espaces, trouvé: 4 [style.indentation]
       JoinArray = Join(arr, delimiter)
ℹ️ Ligne 1020: Indentation incorrecte. Attendu: 316 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 1024: Indentation incorrecte. Attendu: 320 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 1026: Indentation incorrecte. Attendu: 320 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 1027: Indentation incorrecte. Attendu: 320 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du join du tableau: " & Err.Description
ℹ️ Ligne 1028: Indentation incorrecte. Attendu: 320 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 1029: Indentation incorrecte. Attendu: 320 espaces, trouvé: 4 [style.indentation]
       JoinArray = ""
ℹ️ Ligne 1033: Indentation incorrecte. Attendu: 316 espaces, trouvé: 0 [style.indentation]
   Public Property Get LastError() As String
ℹ️ Ligne 1035: Indentation incorrecte. Attendu: 316 espaces, trouvé: 4 [style.indentation]
       LastError = m_LastError
ℹ️ Ligne 1043: Indentation incorrecte. Attendu: 316 espaces, trouvé: 0 [style.indentation]
   Private Sub LogError(ByVal errorMessage As String)
ℹ️ Ligne 1045: Indentation incorrecte. Attendu: 320 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\testing\modTestAssertions.bas
--------------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 24: Le nom de variable 'm_successCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Private m_successCount As Long
ℹ️ Ligne 24: Le nom de variable 'm_successCount' ne suit pas la convention camelCase [naming.variable_case]
   Private m_successCount As Long
ℹ️ Ligne 25: Le nom de variable 'm_failureCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Private m_failureCount As Long
ℹ️ Ligne 25: Le nom de variable 'm_failureCount' ne suit pas la convention camelCase [naming.variable_case]
   Private m_failureCount As Long
ℹ️ Ligne 26: Le nom de variable 'm_logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_logger As Object
ℹ️ Ligne 26: Le nom de variable 'm_logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_logger As Object
ℹ️ Ligne 27: Le nom de variable 'm_configManager' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_configManager As Object
ℹ️ Ligne 27: Le nom de variable 'm_configManager' ne suit pas la convention camelCase [naming.variable_case]
   Private m_configManager As Object
ℹ️ Ligne 28: Le nom de variable 'm_traceAssertions' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Private m_traceAssertions As Boolean
ℹ️ Ligne 28: Le nom de variable 'm_traceAssertions' ne suit pas la convention camelCase [naming.variable_case]
   Private m_traceAssertions As Boolean
ℹ️ Ligne 35: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize()
ℹ️ Ligne 45: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then Set m_configManager = Nothing
ℹ️ Ligne 46: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Err.Clear
ℹ️ Ligne 47: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Not m_configManager Is Nothing Then
ℹ️ Ligne 51: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           m_traceAssertions = (m_configManager.GetSetting("Debug", "TraceAssertions", "True") = "True")
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           m_traceAssertions = True
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertTrue(ByVal condition As Boolean, Optional ByVal message As String = "La condition devrait être True")
⚠️ Ligne 62: La fonction 'AssertTrue' est trop longue (208 lignes, max recommandé: 100) [complexity.function_length]
⚠️ Ligne 62: La fonction 'AssertTrue' a un niveau d'imbrication trop élevé (6, max recommandé: 5) [complexity.nesting_level]
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If condition Then
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertTrue", message
ℹ️ Ligne 66: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertTrue", message
ℹ️ Ligne 67: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertTrue", message
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 75: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertFalse(ByVal condition As Boolean, Optional ByVal message As String = "La condition devrait être False")
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If Not condition Then
ℹ️ Ligne 77: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertFalse", message
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertFalse", message
ℹ️ Ligne 80: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertFalse", message
ℹ️ Ligne 86: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 88: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertEqual(ByVal expected As Variant, ByVal actual As Variant, Optional ByVal message As String = "")
ℹ️ Ligne 89: Le nom de variable 'isEqual' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim isEqual As Boolean
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim isEqual As Boolean
ℹ️ Ligne 90: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim actualType As VbVarType
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim expectedType As VbVarType
ℹ️ Ligne 94: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       actualType = VarType(actual)
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       expectedType = VarType(expected)
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If IsNumeric(expected) And IsNumeric(actual) Then
ℹ️ Ligne 100: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           If actualType = vbDouble Or expectedType = vbDouble Then
ℹ️ Ligne 101: La ligne dépasse la longueur maximale recommandée (141/120) [style.line_length]
   AssertAlmostEqual CDbl(expected), CDbl(actual), PRECISION_DOUBLE, IIf(message = "", "Les valeurs devraient être égales", message)
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 32 espaces, trouvé: 12 [style.indentation]
               AssertAlmostEqual CDbl(expected), CDbl(actual), PRECISION_DOUBLE, IIf(message = "", "Les valeurs devraient être égales", message)
ℹ️ Ligne 102: Indentation incorrecte. Attendu: 32 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               isEqual = (CDbl(expected) = CDbl(actual))
ℹ️ Ligne 112: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           isEqual = (CDate(expected) = CDate(actual))
ℹ️ Ligne 116: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           If expected Is actual Then
ℹ️ Ligne 117: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               isEqual = True
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               isEqual = False
ℹ️ Ligne 123: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           isEqual = (expected = actual)
ℹ️ Ligne 126: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       If isEqual Then
ℹ️ Ligne 127: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertEqual", "Valeurs égales: " & ToString(expected)
ℹ️ Ligne 129: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           errorMsg = "Valeurs différentes - Attendu: " & ToString(expected) & ", Obtenu: " & ToString(actual)
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertEqual", errorMsg
ℹ️ Ligne 134: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertEqual", errorMsg
ℹ️ Ligne 140: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertNotEqual(ByVal expected As Variant, ByVal actual As Variant, Optional ByVal message As String = "")
ℹ️ Ligne 143: Le nom de variable 'isEqual' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim isEqual As Boolean
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim isEqual As Boolean
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim actualType As VbVarType
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim expectedType As VbVarType
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       actualType = VarType(actual)
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       expectedType = VarType(expected)
ℹ️ Ligne 152: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If IsNumeric(expected) And IsNumeric(actual) Then
ℹ️ Ligne 153: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           isEqual = (CDbl(expected) = CDbl(actual))
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           isEqual = (CDate(expected) = CDate(actual))
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           If expected Is actual Then
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               isEqual = True
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               isEqual = False
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           isEqual = (expected = actual)
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If Not isEqual Then
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertNotEqual", "Valeurs différentes comme attendu"
ℹ️ Ligne 173: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           errorMsg = "Les valeurs ne devraient pas être égales: " & ToString(expected)
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 177: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertNotEqual", errorMsg
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertNotEqual", errorMsg
ℹ️ Ligne 184: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 186: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertIsNothing(ByVal obj As Object, Optional ByVal message As String = "L'objet devrait être Nothing")
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If obj Is Nothing Then
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertIsNothing", "L'objet est Nothing"
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertIsNothing", message
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertIsNothing", message
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 199: La ligne dépasse la longueur maximale recommandée (124/120) [style.line_length]
   Public Sub AssertIsNotNothing(ByVal obj As Object, Optional ByVal message As String = "L'objet ne devrait pas être Nothing")
ℹ️ Ligne 199: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertIsNotNothing(ByVal obj As Object, Optional ByVal message As String = "L'objet ne devrait pas être Nothing")
ℹ️ Ligne 200: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If Not obj Is Nothing Then
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertIsNotNothing", "L'objet n'est pas Nothing"
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertIsNotNothing", message
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertIsNotNothing", message
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 212: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertGreaterThan(ByVal value1 As Variant, ByVal value2 As Variant, Optional ByVal message As String = "")
ℹ️ Ligne 213: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If IsNumeric(value1) And IsNumeric(value2) Then
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           If CDbl(value1) > CDbl(value2) Then
ℹ️ Ligne 215: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               OnSuccess "AssertGreaterThan", "La valeur " & ToString(value1) & " est supérieure à " & ToString(value2)
ℹ️ Ligne 217: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               Dim errorMsg As String
ℹ️ Ligne 218: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               errorMsg = "La valeur " & ToString(value1) & " n'est pas supérieure à " & ToString(value2)
ℹ️ Ligne 219: Indentation incorrecte. Attendu: 80 espaces, trouvé: 12 [style.indentation]
               If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 80 espaces, trouvé: 12 [style.indentation]
               OnFailure "AssertGreaterThan", errorMsg
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 80 espaces, trouvé: 12 [style.indentation]
               Err.Raise 9999, "AssertGreaterThan", errorMsg
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertGreaterThan", "Les valeurs comparées doivent être numériques"
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertGreaterThan", "Les valeurs comparées doivent être numériques"
ℹ️ Ligne 232: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 80 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertLessThan(ByVal value1 As Variant, ByVal value2 As Variant, Optional ByVal message As String = "")
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       If IsNumeric(value1) And IsNumeric(value2) Then
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           If CDbl(value1) < CDbl(value2) Then
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 88 espaces, trouvé: 12 [style.indentation]
               OnSuccess "AssertLessThan", "La valeur " & ToString(value1) & " est inférieure à " & ToString(value2)
ℹ️ Ligne 239: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 88 espaces, trouvé: 12 [style.indentation]
               Dim errorMsg As String
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 88 espaces, trouvé: 12 [style.indentation]
               errorMsg = "La valeur " & ToString(value1) & " n'est pas inférieure à " & ToString(value2)
ℹ️ Ligne 241: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               OnFailure "AssertLessThan", errorMsg
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               Err.Raise 9999, "AssertLessThan", errorMsg
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertLessThan", "Les valeurs comparées doivent être numériques"
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertLessThan", "Les valeurs comparées doivent être numériques"
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertAlmostEqual(ByVal expected As Double, ByVal actual As Double, _
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 88 espaces, trouvé: 28 [style.indentation]
                               Optional ByVal tolerance As Double = 0.0001, _
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 88 espaces, trouvé: 28 [style.indentation]
                               Optional ByVal message As String = "")
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       If Abs(expected - actual) <= tolerance Then
ℹ️ Ligne 260: La ligne dépasse la longueur maximale recommandée (138/120) [style.line_length]
   OnSuccess "AssertAlmostEqual", "Les valeurs " & expected & " et " & actual & " sont presque égales (tolérance: " & tolerance & ")"
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertAlmostEqual", "Les valeurs " & expected & " et " & actual & " sont presque égales (tolérance: " & tolerance & ")"
ℹ️ Ligne 262: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 263: La ligne dépasse la longueur maximale recommandée (168/120) [style.line_length]
   errorMsg = "Les valeurs " & expected & " et " & actual & " ne sont pas assez proches (différence: " & Abs(expected - actual) & ", tolérance: " & tolerance & ")"
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           errorMsg = "Les valeurs " & expected & " et " & actual & " ne sont pas assez proches (différence: " & Abs(expected - actual) & ", tolérance: " & tolerance & ")"
ℹ️ Ligne 264: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 266: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertAlmostEqual", errorMsg
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertAlmostEqual", errorMsg
ℹ️ Ligne 276: La ligne dépasse la longueur maximale recommandée (163/120) [style.line_length]
   Public Sub AssertStringContains(ByVal str As String, ByVal subStr As String, Optional ByVal caseSensitive As Boolean = True, Optional ByVal message As String = "")
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertStringContains(ByVal str As String, ByVal subStr As String, Optional ByVal caseSensitive As Boolean = True, Optional ByVal message As String = "")
⚠️ Ligne 276: La fonction 'AssertStringContains' est trop longue (121 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 277: Le nom de variable 'result' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim result As Boolean
ℹ️ Ligne 277: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       Dim result As Boolean
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       If caseSensitive Then
ℹ️ Ligne 280: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           result = (InStr(1, str, subStr, vbBinaryCompare) > 0)
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           result = (InStr(1, str, subStr, vbTextCompare) > 0)
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       If result Then
ℹ️ Ligne 286: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertStringContains", "La chaîne contient '" & subStr & "'"
ℹ️ Ligne 288: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           errorMsg = "La chaîne ne contient pas '" & subStr & "'"
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertStringContains", errorMsg
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertStringContains", errorMsg
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 100 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 301: La ligne dépasse la longueur maximale recommandée (165/120) [style.line_length]
   Public Sub AssertStringStartsWith(ByVal str As String, ByVal prefix As String, Optional ByVal caseSensitive As Boolean = True, Optional ByVal message As String = "")
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 104 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertStringStartsWith(ByVal str As String, ByVal prefix As String, Optional ByVal caseSensitive As Boolean = True, Optional ByVal message As String = "")
ℹ️ Ligne 302: Le nom de variable 'result' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim result As Boolean
ℹ️ Ligne 302: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim result As Boolean
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       If Len(str) < Len(prefix) Then
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           result = False
ℹ️ Ligne 307: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           If caseSensitive Then
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 112 espaces, trouvé: 12 [style.indentation]
               result = (Left(str, Len(prefix)) = prefix)
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 112 espaces, trouvé: 12 [style.indentation]
               result = (StrComp(Left(str, Len(prefix)), prefix, vbTextCompare) = 0)
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       If result Then
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertStringStartsWith", "La chaîne commence par '" & prefix & "'"
ℹ️ Ligne 317: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 317: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           errorMsg = "La chaîne ne commence pas par '" & prefix & "'"
ℹ️ Ligne 319: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 321: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertStringStartsWith", errorMsg
ℹ️ Ligne 322: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertStringStartsWith", errorMsg
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 330: La ligne dépasse la longueur maximale recommandée (163/120) [style.line_length]
   Public Sub AssertStringEndsWith(ByVal str As String, ByVal suffix As String, Optional ByVal caseSensitive As Boolean = True, Optional ByVal message As String = "")
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertStringEndsWith(ByVal str As String, ByVal suffix As String, Optional ByVal caseSensitive As Boolean = True, Optional ByVal message As String = "")
ℹ️ Ligne 331: Le nom de variable 'result' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim result As Boolean
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Dim result As Boolean
ℹ️ Ligne 333: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       If Len(str) < Len(suffix) Then
ℹ️ Ligne 334: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           result = False
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           If caseSensitive Then
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               result = (Right(str, Len(suffix)) = suffix)
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               result = (StrComp(Right(str, Len(suffix)), suffix, vbTextCompare) = 0)
ℹ️ Ligne 343: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       If result Then
ℹ️ Ligne 344: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertStringEndsWith", "La chaîne se termine par '" & suffix & "'"
ℹ️ Ligne 346: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           errorMsg = "La chaîne ne se termine pas par '" & suffix & "'"
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 350: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertStringEndsWith", errorMsg
ℹ️ Ligne 351: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertStringEndsWith", errorMsg
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 124 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 128 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertStringMatches(ByVal str As String, ByVal pattern As String, Optional ByVal message As String = "")
ℹ️ Ligne 360: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 360: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Dim regex As Object
ℹ️ Ligne 361: Le nom de variable 'result' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim result As Boolean
ℹ️ Ligne 361: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Dim result As Boolean
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 364: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 367: La ligne dépasse la longueur maximale recommandée (145/120) [style.line_length]
   OnFailure "AssertStringMatches", "Impossible de créer l'objet RegExp. Vérifiez que Microsoft VBScript Regular Expressions est référencé."
ℹ️ Ligne 367: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertStringMatches", "Impossible de créer l'objet RegExp. Vérifiez que Microsoft VBScript Regular Expressions est référencé."
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertStringMatches", "Impossible de créer l'objet RegExp"
ℹ️ Ligne 369: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 373: Indentation incorrecte. Attendu: 132 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 376: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       With regex
ℹ️ Ligne 377: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           .Global = True
ℹ️ Ligne 378: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           .MultiLine = True
ℹ️ Ligne 379: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           .IgnoreCase = False
ℹ️ Ligne 380: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           .Pattern = pattern
ℹ️ Ligne 383: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       result = regex.Test(str)
ℹ️ Ligne 384: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 386: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       If result Then
ℹ️ Ligne 387: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertStringMatches", "La chaîne correspond au motif '" & pattern & "'"
ℹ️ Ligne 389: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 389: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 390: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           errorMsg = "La chaîne ne correspond pas au motif '" & pattern & "'"
ℹ️ Ligne 391: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 393: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertStringMatches", errorMsg
ℹ️ Ligne 394: Indentation incorrecte. Attendu: 136 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertStringMatches", errorMsg
ℹ️ Ligne 403: La ligne dépasse la longueur maximale recommandée (123/120) [style.line_length]
   Public Sub AssertCollectionContains(ByVal coll As Collection, ByVal item As Variant, Optional ByVal message As String = "")
ℹ️ Ligne 403: Indentation incorrecte. Attendu: 132 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertCollectionContains(ByVal coll As Collection, ByVal item As Variant, Optional ByVal message As String = "")
ℹ️ Ligne 404: Le nom de variable 'found' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim found As Boolean
ℹ️ Ligne 404: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       Dim found As Boolean
ℹ️ Ligne 405: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 405: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 406: Le nom de variable 'itemStr' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim itemStr As String
ℹ️ Ligne 406: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       Dim itemStr As String
ℹ️ Ligne 408: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       found = False
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       itemStr = ToString(item)
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       For i = 1 To coll.Count
ℹ️ Ligne 413: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           If ToString(coll(i)) = itemStr Then
ℹ️ Ligne 414: Indentation incorrecte. Attendu: 140 espaces, trouvé: 12 [style.indentation]
               found = True
ℹ️ Ligne 415: Indentation incorrecte. Attendu: 144 espaces, trouvé: 12 [style.indentation]
               Exit For
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 419: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       If found Then
ℹ️ Ligne 420: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertCollectionContains", "La collection contient l'élément '" & itemStr & "'"
ℹ️ Ligne 422: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 422: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 423: Indentation incorrecte. Attendu: 140 espaces, trouvé: 8 [style.indentation]
           errorMsg = "La collection ne contient pas l'élément '" & itemStr & "'"
ℹ️ Ligne 424: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 426: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertCollectionContains", errorMsg
ℹ️ Ligne 427: Indentation incorrecte. Attendu: 144 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertCollectionContains", errorMsg
ℹ️ Ligne 433: Indentation incorrecte. Attendu: 144 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 435: La ligne dépasse la longueur maximale recommandée (138/120) [style.line_length]
   Public Sub AssertCollectionNotEmpty(ByVal coll As Collection, Optional ByVal message As String = "La collection ne devrait pas être vide")
ℹ️ Ligne 435: Indentation incorrecte. Attendu: 148 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertCollectionNotEmpty(ByVal coll As Collection, Optional ByVal message As String = "La collection ne devrait pas être vide")
ℹ️ Ligne 436: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       If coll.Count > 0 Then
ℹ️ Ligne 437: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertCollectionNotEmpty", "La collection contient " & coll.Count & " élément(s)"
ℹ️ Ligne 439: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertCollectionNotEmpty", message
ℹ️ Ligne 440: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertCollectionNotEmpty", message
ℹ️ Ligne 446: Indentation incorrecte. Attendu: 152 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 448: La ligne dépasse la longueur maximale recommandée (128/120) [style.line_length]
   Public Sub AssertCollectionEmpty(ByVal coll As Collection, Optional ByVal message As String = "La collection devrait être vide")
ℹ️ Ligne 448: Indentation incorrecte. Attendu: 156 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertCollectionEmpty(ByVal coll As Collection, Optional ByVal message As String = "La collection devrait être vide")
ℹ️ Ligne 449: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       If coll.Count = 0 Then
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 160 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertCollectionEmpty", "La collection est vide"
ℹ️ Ligne 452: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 452: Indentation incorrecte. Attendu: 160 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 453: Indentation incorrecte. Attendu: 160 espaces, trouvé: 8 [style.indentation]
           errorMsg = "La collection contient " & coll.Count & " élément(s) alors qu'elle devrait être vide"
ℹ️ Ligne 454: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 456: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertCollectionEmpty", errorMsg
ℹ️ Ligne 457: Indentation incorrecte. Attendu: 164 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertCollectionEmpty", errorMsg
ℹ️ Ligne 463: Indentation incorrecte. Attendu: 164 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 465: La ligne dépasse la longueur maximale recommandée (126/120) [style.line_length]
   Public Sub AssertCollectionCount(ByVal coll As Collection, ByVal expectedCount As Long, Optional ByVal message As String = "")
ℹ️ Ligne 465: Indentation incorrecte. Attendu: 168 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertCollectionCount(ByVal coll As Collection, ByVal expectedCount As Long, Optional ByVal message As String = "")
ℹ️ Ligne 466: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       If coll.Count = expectedCount Then
ℹ️ Ligne 467: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertCollectionCount", "La collection contient " & expectedCount & " élément(s) comme attendu"
ℹ️ Ligne 469: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 469: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 470: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           errorMsg = "La collection contient " & coll.Count & " élément(s) au lieu de " & expectedCount
ℹ️ Ligne 471: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           If message <> "" Then errorMsg = message & " - " & errorMsg
ℹ️ Ligne 473: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertCollectionCount", errorMsg
ℹ️ Ligne 474: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertCollectionCount", errorMsg
ℹ️ Ligne 483: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   Public Function AssertRaises(ByVal expectedErrNumber As Long) As Boolean
ℹ️ Ligne 492: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       If Err.Number = expectedErrNumber Then
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertRaises", "L'erreur " & expectedErrNumber & " s'est bien produite: " & Err.Description
ℹ️ Ligne 494: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           AssertRaises = True
ℹ️ Ligne 496: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 496: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           Dim errorMsg As String
ℹ️ Ligne 497: Indentation incorrecte. Attendu: 180 espaces, trouvé: 8 [style.indentation]
           If Err.Number = 0 Then
ℹ️ Ligne 498: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               errorMsg = "Aucune erreur ne s'est produite alors que l'erreur " & expectedErrNumber & " était attendue"
ℹ️ Ligne 500: La ligne dépasse la longueur maximale recommandée (134/120) [style.line_length]
   errorMsg = "L'erreur " & Err.Number & " s'est produite au lieu de l'erreur " & expectedErrNumber & " - " & Err.Description
ℹ️ Ligne 500: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               errorMsg = "L'erreur " & Err.Number & " s'est produite au lieu de l'erreur " & expectedErrNumber & " - " & Err.Description
ℹ️ Ligne 503: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertRaises", errorMsg
ℹ️ Ligne 504: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           AssertRaises = False
ℹ️ Ligne 507: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Err.Clear
ℹ️ Ligne 515: La ligne dépasse la longueur maximale recommandée (139/120) [style.line_length]
   Public Sub AssertExecutionTime(ByVal procedure As String, Optional ByVal maxTimeMs As Long = 1000, Optional ByVal params As Variant = Null)
ℹ️ Ligne 515: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   Public Sub AssertExecutionTime(ByVal procedure As String, Optional ByVal maxTimeMs As Long = 1000, Optional ByVal params As Variant = Null)
ℹ️ Ligne 516: Le nom de variable 'startTime' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim startTime As Double
ℹ️ Ligne 516: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim startTime As Double
ℹ️ Ligne 517: Le nom de variable 'endTime' de type Double devrait commencer par 'd' [naming.variable_prefix]
   Dim endTime As Double
ℹ️ Ligne 517: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim endTime As Double
ℹ️ Ligne 518: Le nom de variable 'durationMs' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim durationMs As Long
ℹ️ Ligne 518: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim durationMs As Long
ℹ️ Ligne 520: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       startTime = Timer
ℹ️ Ligne 522: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 523: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       If IsNull(params) Then
ℹ️ Ligne 524: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           Application.Run procedure
ℹ️ Ligne 526: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           Application.Run procedure, params
ℹ️ Ligne 529: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 530: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertExecutionTime", "Erreur lors de l'exécution de " & procedure & ": " & Err.Description
ℹ️ Ligne 531: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertExecutionTime", "Erreur lors de l'exécution: " & Err.Description
ℹ️ Ligne 532: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 536: Indentation incorrecte. Attendu: 176 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 538: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 540: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       endTime = Timer
ℹ️ Ligne 541: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       durationMs = (endTime - startTime) * 1000
ℹ️ Ligne 543: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       If durationMs <= maxTimeMs Then
ℹ️ Ligne 544: La ligne dépasse la longueur maximale recommandée (126/120) [style.line_length]
   OnSuccess "AssertExecutionTime", "Exécution de " & procedure & " en " & durationMs & " ms (max: " & maxTimeMs & " ms)"
ℹ️ Ligne 544: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           OnSuccess "AssertExecutionTime", "Exécution de " & procedure & " en " & durationMs & " ms (max: " & maxTimeMs & " ms)"
ℹ️ Ligne 546: La ligne dépasse la longueur maximale recommandée (135/120) [style.line_length]
   OnFailure "AssertExecutionTime", "Exécution de " & procedure & " trop lente: " & durationMs & " ms (max: " & maxTimeMs & " ms)"
ℹ️ Ligne 546: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           OnFailure "AssertExecutionTime", "Exécution de " & procedure & " trop lente: " & durationMs & " ms (max: " & maxTimeMs & " ms)"
ℹ️ Ligne 547: Indentation incorrecte. Attendu: 176 espaces, trouvé: 8 [style.indentation]
           Err.Raise 9999, "AssertExecutionTime", "Exécution trop lente: " & durationMs & " ms"
ℹ️ Ligne 556: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   Public Function GetAssertionCounts() As String
ℹ️ Ligne 557: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       GetAssertionCounts = "Assertions: " & (m_successCount + m_failureCount) & _
ℹ️ Ligne 558: Indentation incorrecte. Attendu: 172 espaces, trouvé: 24 [style.indentation]
                           " (Réussies: " & m_successCount & ", Échouées: " & m_failureCount & ")"
ℹ️ Ligne 563: Indentation incorrecte. Attendu: 176 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 565: Indentation incorrecte. Attendu: 180 espaces, trouvé: 0 [style.indentation]
   Public Sub ResetAssertionCounts()
ℹ️ Ligne 566: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       m_successCount = 0
ℹ️ Ligne 567: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       m_failureCount = 0
ℹ️ Ligne 575: Indentation incorrecte. Attendu: 180 espaces, trouvé: 0 [style.indentation]
   Private Function ToString(ByVal value As Variant) As String
ℹ️ Ligne 576: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 576: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 578: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 582: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               result = "<Null>"
ℹ️ Ligne 584: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               result = "<Empty>"
ℹ️ Ligne 586: Indentation incorrecte. Attendu: 184 espaces, trouvé: 12 [style.indentation]
               If value Is Nothing Then
ℹ️ Ligne 587: Indentation incorrecte. Attendu: 184 espaces, trouvé: 16 [style.indentation]
                   result = "<Nothing>"
ℹ️ Ligne 589: Indentation incorrecte. Attendu: 184 espaces, trouvé: 16 [style.indentation]
                   result = "<Object: " & TypeName(value) & ">"
ℹ️ Ligne 592: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               result = IIf(value, "True", "False")
ℹ️ Ligne 594: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               result = Format(value, "yyyy-mm-dd hh:nn:ss")
ℹ️ Ligne 596: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               result = "<Array>"
ℹ️ Ligne 598: Indentation incorrecte. Attendu: 180 espaces, trouvé: 12 [style.indentation]
               result = CStr(value)
ℹ️ Ligne 601: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 602: Indentation incorrecte. Attendu: 180 espaces, trouvé: 8 [style.indentation]
           result = "<Impossible de convertir: " & TypeName(value) & ">"
ℹ️ Ligne 603: Indentation incorrecte. Attendu: 180 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 606: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 607: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       ToString = result
ℹ️ Ligne 612: Indentation incorrecte. Attendu: 180 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 614: Indentation incorrecte. Attendu: 184 espaces, trouvé: 0 [style.indentation]
   Private Sub OnSuccess(ByVal assertion As String, ByVal message As String)
ℹ️ Ligne 615: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       m_successCount = m_successCount + 1
ℹ️ Ligne 618: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       If m_traceAssertions Then
ℹ️ Ligne 619: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           LogMessage assertion & ": RÉUSSI - " & message, "debug"
ℹ️ Ligne 625: Indentation incorrecte. Attendu: 188 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 627: Indentation incorrecte. Attendu: 192 espaces, trouvé: 0 [style.indentation]
   Private Sub OnFailure(ByVal assertion As String, ByVal message As String)
ℹ️ Ligne 628: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       m_failureCount = m_failureCount + 1
ℹ️ Ligne 631: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       LogMessage assertion & ": ÉCHEC - " & message, "error"
ℹ️ Ligne 636: Indentation incorrecte. Attendu: 196 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 638: Indentation incorrecte. Attendu: 200 espaces, trouvé: 0 [style.indentation]
   Private Sub LogMessage(ByVal message As String, ByVal logLevel As String)
ℹ️ Ligne 640: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 641: Indentation incorrecte. Attendu: 200 espaces, trouvé: 4 [style.indentation]
       If Not m_logger Is Nothing Then
ℹ️ Ligne 644: Indentation incorrecte. Attendu: 204 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogDebug MODULE_NAME, message
ℹ️ Ligne 646: Indentation incorrecte. Attendu: 204 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 648: Indentation incorrecte. Attendu: 204 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogWarning MODULE_NAME, message
ℹ️ Ligne 650: Indentation incorrecte. Attendu: 204 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogError MODULE_NAME, message
ℹ️ Ligne 652: Indentation incorrecte. Attendu: 204 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 656: Indentation incorrecte. Attendu: 200 espaces, trouvé: 8 [style.indentation]
           Debug.Print message
ℹ️ Ligne 658: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\modConfigManager.bas
-----------------------------------------------------------------
ℹ️ Ligne 19: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   #If VBA7 Then
ℹ️ Ligne 24: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetPrivateProfileString Lib "kernel32" Alias "GetPrivateProfileStringA" _
ℹ️ Ligne 25: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpApplicationName As String, ByVal lpKeyName As String, ByVal lpDefault As String, _
ℹ️ Ligne 26: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
ℹ️ Ligne 32: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function WritePrivateProfileString Lib "kernel32" Alias "WritePrivateProfileStringA" _
ℹ️ Ligne 33: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpApplicationName As String, ByVal lpKeyName As String, ByVal lpString As String, _
ℹ️ Ligne 34: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal lpFileName As String) As Long
ℹ️ Ligne 40: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetPrivateProfileSection Lib "kernel32" Alias "GetPrivateProfileSectionA" _
ℹ️ Ligne 41: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, _
ℹ️ Ligne 42: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal lpFileName As String) As Long
ℹ️ Ligne 48: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetPrivateProfileSectionNames Lib "kernel32" Alias "GetPrivateProfileSectionNamesA" _
ℹ️ Ligne 49: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpszReturnBuffer As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetPrivateProfileString Lib "kernel32" Alias "GetPrivateProfileStringA" _
ℹ️ Ligne 56: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpApplicationName As String, ByVal lpKeyName As String, ByVal lpDefault As String, _
ℹ️ Ligne 57: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function WritePrivateProfileString Lib "kernel32" Alias "WritePrivateProfileStringA" _
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpApplicationName As String, ByVal lpKeyName As String, ByVal lpString As String, _
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal lpFileName As String) As Long
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetPrivateProfileSection Lib "kernel32" Alias "GetPrivateProfileSectionA" _
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, _
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal lpFileName As String) As Long
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function GetPrivateProfileSectionNames Lib "kernel32" Alias "GetPrivateProfileSectionNamesA" _
ℹ️ Ligne 80: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (ByVal lpszReturnBuffer As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
ℹ️ Ligne 89: Le nom de variable 'm_DefaultConfigPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_DefaultConfigPath As String
ℹ️ Ligne 89: Le nom de variable 'm_DefaultConfigPath' ne suit pas la convention camelCase [naming.variable_case]
   Private m_DefaultConfigPath As String
ℹ️ Ligne 90: Le nom de variable 'm_Logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 90: Le nom de variable 'm_Logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 91: Le nom de variable 'm_LastError' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_LastError As String
ℹ️ Ligne 91: Le nom de variable 'm_LastError' ne suit pas la convention camelCase [naming.variable_case]
   Private m_LastError As String
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize(Optional ByVal logger As Object = Nothing, Optional ByVal defaultConfigPath As String = "")
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If defaultConfigPath = "" Then
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then
⚠️ Ligne 122: La fonction 'ReadString' est trop longue (281 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 125: Le nom de variable 'buffer' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim buffer As String
ℹ️ Ligne 127: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 140: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Fichier de configuration introuvable: " & filePath
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ReadString = defaultValue
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 154: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If length > 0 Then
ℹ️ Ligne 164: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la lecture de la valeur: " & Err.Description
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       ReadString = defaultValue
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Function ReadInteger(ByVal section As String, ByVal key As String, Optional ByVal defaultValue As Long = 0, _
ℹ️ Ligne 177: Indentation incorrecte. Attendu: 12 espaces, trouvé: 28 [style.indentation]
                               Optional ByVal configPath As String = "") As Long
ℹ️ Ligne 179: Le nom de variable 'value' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim value As String
ℹ️ Ligne 179: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim value As String
ℹ️ Ligne 181: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 184: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       value = ReadString(section, key, CStr(defaultValue), configPath)
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If IsNumeric(value) Then
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           ReadInteger = CLng(value)
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           ReadInteger = defaultValue
ℹ️ Ligne 193: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 16 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 199: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 200: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la lecture de la valeur entière: " & Err.Description
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       ReadInteger = defaultValue
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 209: La ligne dépasse la longueur maximale recommandée (123/120) [style.line_length]
   Public Function ReadBoolean(ByVal section As String, ByVal key As String, Optional ByVal defaultValue As Boolean = False, _
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Public Function ReadBoolean(ByVal section As String, ByVal key As String, Optional ByVal defaultValue As Boolean = False, _
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 20 espaces, trouvé: 28 [style.indentation]
                               Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 212: Le nom de variable 'value' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim value As String
ℹ️ Ligne 212: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim value As String
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       value = ReadString(section, key, IIf(defaultValue, "True", "False"), configPath)
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               ReadBoolean = True
ℹ️ Ligne 224: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               ReadBoolean = False
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               ReadBoolean = defaultValue
ℹ️ Ligne 229: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la lecture de la valeur booléenne: " & Err.Description
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 238: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       ReadBoolean = defaultValue
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 245: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Public Function ReadDouble(ByVal section As String, ByVal key As String, Optional ByVal defaultValue As Double = 0, _
ℹ️ Ligne 246: Indentation incorrecte. Attendu: 28 espaces, trouvé: 27 [style.indentation]
                              Optional ByVal configPath As String = "") As Double
ℹ️ Ligne 248: Le nom de variable 'value' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim value As String
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim value As String
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       value = ReadString(section, key, CStr(defaultValue), configPath)
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       If IsNumeric(value) Then
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           ReadDouble = CDbl(value)
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           ReadDouble = defaultValue
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 266: Indentation incorrecte. Attendu: 32 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la lecture de la valeur double: " & Err.Description
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       ReadDouble = defaultValue
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Public Function ReadSection(ByVal section As String, Optional ByVal configPath As String = "") As Variant
ℹ️ Ligne 280: Le nom de variable 'buffer' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim buffer As String
ℹ️ Ligne 280: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim buffer As String
ℹ️ Ligne 281: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim length As Long
ℹ️ Ligne 282: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 283: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim entries() As String
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If configPath = "" Then
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If Dir(filePath) = "" Then
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Fichier de configuration introuvable: " & filePath
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           ReadSection = Array()
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 307: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       buffer = Space$(MAX_BUFFER_SIZE)
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       length = GetPrivateProfileSection(section, buffer, Len(buffer), filePath)
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If length > 0 Then
ℹ️ Ligne 312: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           buffer = Left$(buffer, length)
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           entries = Split(Replace(buffer, Chr(0), vbLf), vbLf)
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           If entries(UBound(entries)) = "" Then
ℹ️ Ligne 319: Indentation incorrecte. Attendu: 52 espaces, trouvé: 12 [style.indentation]
               ReDim Preserve entries(UBound(entries) - 1)
ℹ️ Ligne 322: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           ReadSection = entries
ℹ️ Ligne 324: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           ReadSection = Array()
ℹ️ Ligne 327: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 333: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 334: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la lecture de la section: " & Err.Description
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ReadSection = Array()
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 343: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Public Function GetSectionNames(Optional ByVal configPath As String = "") As Variant
ℹ️ Ligne 345: Le nom de variable 'buffer' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim buffer As String
ℹ️ Ligne 345: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim buffer As String
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim length As Long
ℹ️ Ligne 347: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim sections() As String
ℹ️ Ligne 350: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 353: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       If configPath = "" Then
ℹ️ Ligne 354: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 356: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 360: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       If Dir(filePath) = "" Then
ℹ️ Ligne 361: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Fichier de configuration introuvable: " & filePath
ℹ️ Ligne 362: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           GetSectionNames = Array()
ℹ️ Ligne 364: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 372: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       buffer = Space$(MAX_BUFFER_SIZE)
ℹ️ Ligne 373: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       length = GetPrivateProfileSectionNames(buffer, Len(buffer), filePath)
ℹ️ Ligne 375: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If length > 0 Then
ℹ️ Ligne 377: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           buffer = Left$(buffer, length)
ℹ️ Ligne 380: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           sections = Split(Replace(buffer, Chr(0), vbLf), vbLf)
ℹ️ Ligne 383: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If sections(UBound(sections)) = "" Then
ℹ️ Ligne 384: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               ReDim Preserve sections(UBound(sections) - 1)
ℹ️ Ligne 387: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           GetSectionNames = sections
ℹ️ Ligne 389: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           GetSectionNames = Array()
ℹ️ Ligne 392: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 396: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 398: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 399: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la récupération des noms de sections: " & Err.Description
ℹ️ Ligne 400: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 401: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       GetSectionNames = Array()
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Public Function WriteString(ByVal section As String, ByVal key As String, ByVal value As String, _
⚠️ Ligne 409: La fonction 'WriteString' est trop longue (156 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 410: Indentation incorrecte. Attendu: 60 espaces, trouvé: 28 [style.indentation]
                               Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 412: Le nom de variable 'result' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim result As Long
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim result As Long
ℹ️ Ligne 413: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 413: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 415: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 418: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If configPath = "" Then
ℹ️ Ligne 419: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 421: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 425: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       CreateConfigDirectory filePath
ℹ️ Ligne 428: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       result = WritePrivateProfileString(section, key, value, filePath)
ℹ️ Ligne 429: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       WriteString = (result <> 0)
ℹ️ Ligne 431: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 435: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 437: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 438: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'écriture de la valeur: " & Err.Description
ℹ️ Ligne 439: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 440: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       WriteString = False
ℹ️ Ligne 445: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 447: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Public Function WriteInteger(ByVal section As String, ByVal key As String, ByVal value As Long, _
ℹ️ Ligne 448: Indentation incorrecte. Attendu: 68 espaces, trouvé: 29 [style.indentation]
                                Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       WriteInteger = WriteString(section, key, CStr(value), configPath)
ℹ️ Ligne 455: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 457: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Public Function WriteBoolean(ByVal section As String, ByVal key As String, ByVal value As Boolean, _
ℹ️ Ligne 458: Indentation incorrecte. Attendu: 72 espaces, trouvé: 29 [style.indentation]
                                Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 460: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       WriteBoolean = WriteString(section, key, IIf(value, "True", "False"), configPath)
ℹ️ Ligne 465: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 467: Indentation incorrecte. Attendu: 76 espaces, trouvé: 0 [style.indentation]
   Public Function WriteDouble(ByVal section As String, ByVal key As String, ByVal value As Double, _
ℹ️ Ligne 468: Indentation incorrecte. Attendu: 76 espaces, trouvé: 28 [style.indentation]
                               Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 470: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       WriteDouble = WriteString(section, key, CStr(value), configPath)
ℹ️ Ligne 475: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 477: Indentation incorrecte. Attendu: 80 espaces, trouvé: 0 [style.indentation]
   Public Function DeleteKey(ByVal section As String, ByVal key As String, _
ℹ️ Ligne 478: Indentation incorrecte. Attendu: 80 espaces, trouvé: 26 [style.indentation]
                             Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 480: Le nom de variable 'result' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim result As Long
ℹ️ Ligne 480: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Dim result As Long
ℹ️ Ligne 481: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 481: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 483: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 486: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       If configPath = "" Then
ℹ️ Ligne 487: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 489: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       If Dir(filePath) = "" Then
ℹ️ Ligne 494: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Fichier de configuration introuvable: " & filePath
ℹ️ Ligne 495: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 496: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           DeleteKey = False
ℹ️ Ligne 497: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 501: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 505: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       result = WritePrivateProfileString(section, key, vbNullString, filePath)
ℹ️ Ligne 506: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       DeleteKey = (result <> 0)
ℹ️ Ligne 508: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 512: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 514: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 515: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la suppression de la clé: " & Err.Description
ℹ️ Ligne 516: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 517: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       DeleteKey = False
ℹ️ Ligne 522: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 524: Indentation incorrecte. Attendu: 96 espaces, trouvé: 0 [style.indentation]
   Public Function DeleteSection(ByVal section As String, Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 526: Le nom de variable 'result' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim result As Long
ℹ️ Ligne 526: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim result As Long
ℹ️ Ligne 527: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 527: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 529: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 532: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If configPath = "" Then
ℹ️ Ligne 533: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 535: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 539: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If Dir(filePath) = "" Then
ℹ️ Ligne 540: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Fichier de configuration introuvable: " & filePath
ℹ️ Ligne 541: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 542: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           DeleteSection = False
ℹ️ Ligne 543: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 547: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 551: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       result = WritePrivateProfileString(section, vbNullString, vbNullString, filePath)
ℹ️ Ligne 552: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       DeleteSection = (result <> 0)
ℹ️ Ligne 554: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 558: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 560: Indentation incorrecte. Attendu: 104 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 561: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la suppression de la section: " & Err.Description
ℹ️ Ligne 562: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 563: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       DeleteSection = False
ℹ️ Ligne 571: Indentation incorrecte. Attendu: 100 espaces, trouvé: 0 [style.indentation]
   Public Function KeyExists(ByVal section As String, ByVal key As String, _
⚠️ Ligne 571: La fonction 'KeyExists' est trop longue (165 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 572: Indentation incorrecte. Attendu: 100 espaces, trouvé: 25 [style.indentation]
                            Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 574: Le nom de variable 'value' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim value As String
ℹ️ Ligne 574: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim value As String
ℹ️ Ligne 575: Le nom de variable 'defaultValue' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim defaultValue As String
ℹ️ Ligne 575: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim defaultValue As String
ℹ️ Ligne 576: Le nom de variable 'buffer' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim buffer As String
ℹ️ Ligne 576: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim buffer As String
ℹ️ Ligne 577: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim length As Long
ℹ️ Ligne 578: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 578: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 580: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 583: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If configPath = "" Then
ℹ️ Ligne 584: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 586: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 590: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If Dir(filePath) = "" Then
ℹ️ Ligne 591: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Fichier de configuration introuvable: " & filePath
ℹ️ Ligne 592: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 593: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           KeyExists = False
ℹ️ Ligne 594: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 598: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 602: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       defaultValue = "@@KEY_NOT_FOUND@@" & Format(Now, "yyyymmddhhnnss") & "@@"
ℹ️ Ligne 605: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       buffer = Space$(MAX_BUFFER_SIZE)
ℹ️ Ligne 606: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       length = GetPrivateProfileString(section, key, defaultValue, buffer, Len(buffer), filePath)
ℹ️ Ligne 608: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       value = Left$(buffer, length)
ℹ️ Ligne 611: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       KeyExists = (value <> defaultValue)
ℹ️ Ligne 613: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 617: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 619: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 620: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification de l'existence de la clé: " & Err.Description
ℹ️ Ligne 621: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 622: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       KeyExists = False
ℹ️ Ligne 627: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 629: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   Public Function SectionExists(ByVal section As String, Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 631: Le nom de variable 'sections' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim sections As Variant
ℹ️ Ligne 631: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Dim sections As Variant
ℹ️ Ligne 632: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 632: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 634: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 637: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       sections = GetSectionNames(configPath)
ℹ️ Ligne 640: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       For i = LBound(sections) To UBound(sections)
ℹ️ Ligne 641: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           If UCase(sections(i)) = UCase(section) Then
ℹ️ Ligne 642: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               SectionExists = True
ℹ️ Ligne 643: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 647: Indentation incorrecte. Attendu: 128 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 649: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 651: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       SectionExists = False
ℹ️ Ligne 653: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 657: Indentation incorrecte. Attendu: 124 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 659: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 660: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification de l'existence de la section: " & Err.Description
ℹ️ Ligne 661: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 662: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       SectionExists = False
ℹ️ Ligne 667: Indentation incorrecte. Attendu: 128 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 669: Indentation incorrecte. Attendu: 132 espaces, trouvé: 0 [style.indentation]
   Public Function CreateConfigFile(ByVal configPath As String) As Boolean
ℹ️ Ligne 671: Le nom de variable 'fileNum' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim fileNum As Integer
ℹ️ Ligne 671: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       Dim fileNum As Integer
ℹ️ Ligne 673: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 676: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       CreateConfigDirectory configPath
ℹ️ Ligne 679: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       fileNum = FreeFile
ℹ️ Ligne 680: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       Open configPath For Output As #fileNum
ℹ️ Ligne 681: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       Close #fileNum
ℹ️ Ligne 683: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       CreateConfigFile = True
ℹ️ Ligne 685: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 689: Indentation incorrecte. Attendu: 140 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 691: Indentation incorrecte. Attendu: 140 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 692: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la création du fichier de configuration: " & Err.Description
ℹ️ Ligne 693: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 694: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       CreateConfigFile = False
ℹ️ Ligne 699: Indentation incorrecte. Attendu: 144 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 701: Indentation incorrecte. Attendu: 148 espaces, trouvé: 0 [style.indentation]
   Public Function ConfigFileExists(Optional ByVal configPath As String = "") As Boolean
ℹ️ Ligne 703: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 703: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 705: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 708: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       If configPath = "" Then
ℹ️ Ligne 709: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           filePath = m_DefaultConfigPath
ℹ️ Ligne 711: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           filePath = configPath
ℹ️ Ligne 714: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       ConfigFileExists = (Dir(filePath) <> "")
ℹ️ Ligne 716: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 720: Indentation incorrecte. Attendu: 152 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 722: Indentation incorrecte. Attendu: 152 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 723: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification de l'existence du fichier: " & Err.Description
ℹ️ Ligne 724: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 725: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       ConfigFileExists = False
ℹ️ Ligne 730: Indentation incorrecte. Attendu: 156 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 732: Indentation incorrecte. Attendu: 156 espaces, trouvé: 0 [style.indentation]
   Public Property Get LastError() As String
ℹ️ Ligne 734: Indentation incorrecte. Attendu: 156 espaces, trouvé: 4 [style.indentation]
       LastError = m_LastError
ℹ️ Ligne 737: Indentation incorrecte. Attendu: 152 espaces, trouvé: 0 [style.indentation]
   Public Property Get DefaultConfigPath() As String
ℹ️ Ligne 739: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       DefaultConfigPath = m_DefaultConfigPath
ℹ️ Ligne 742: Indentation incorrecte. Attendu: 148 espaces, trouvé: 0 [style.indentation]
   Public Property Let DefaultConfigPath(ByVal value As String)
ℹ️ Ligne 744: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       m_DefaultConfigPath = value
ℹ️ Ligne 752: Indentation incorrecte. Attendu: 148 espaces, trouvé: 0 [style.indentation]
   Private Sub CreateConfigDirectory(ByVal filePath As String)
ℹ️ Ligne 754: Le nom de variable 'folderPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim folderPath As String
ℹ️ Ligne 754: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       Dim folderPath As String
ℹ️ Ligne 755: Le nom de variable 'pos' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim pos As Long
ℹ️ Ligne 755: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       Dim pos As Long
ℹ️ Ligne 757: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 760: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       pos = InStrRev(filePath, "\")
ℹ️ Ligne 761: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       If pos > 0 Then
ℹ️ Ligne 762: Indentation incorrecte. Attendu: 148 espaces, trouvé: 8 [style.indentation]
           folderPath = Left$(filePath, pos - 1)
ℹ️ Ligne 765: Indentation incorrecte. Attendu: 152 espaces, trouvé: 8 [style.indentation]
           If folderPath <> "" And Dir(folderPath, vbDirectory) = "" Then
ℹ️ Ligne 766: Indentation incorrecte. Attendu: 152 espaces, trouvé: 12 [style.indentation]
               MkDir folderPath
ℹ️ Ligne 773: Indentation incorrecte. Attendu: 148 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 775: Indentation incorrecte. Attendu: 152 espaces, trouvé: 0 [style.indentation]
   Private Sub LogError(ByVal errorMessage As String)
ℹ️ Ligne 777: Indentation incorrecte. Attendu: 156 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\modReleaseValidator.bas
--------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 51: Le nom de variable 'm_logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_logger As Object
ℹ️ Ligne 51: Le nom de variable 'm_logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_logger As Object
ℹ️ Ligne 52: Le nom de variable 'm_result' ne suit pas la convention camelCase [naming.variable_case]
   Private m_result As ValidationResult
ℹ️ Ligne 53: Le nom de variable 'm_currentDir' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_currentDir As String
ℹ️ Ligne 53: Le nom de variable 'm_currentDir' ne suit pas la convention camelCase [naming.variable_case]
   Private m_currentDir As String
ℹ️ Ligne 54: Le nom de variable 'm_fso' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_fso As Object
ℹ️ Ligne 54: Le nom de variable 'm_fso' ne suit pas la convention camelCase [naming.variable_case]
   Private m_fso As Object
ℹ️ Ligne 61: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Sub Initialize()
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Right(m_currentDir, 1) <> "\" Then m_currentDir = m_currentDir & "\"
ℹ️ Ligne 81: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then Set m_logger = Nothing
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Err.Clear
ℹ️ Ligne 83: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Public Function ValidateRelease(Optional ByVal releasePath As String = "") As Boolean
⚠️ Ligne 91: La fonction 'ValidateRelease' est trop longue (150 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 93: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Initialize
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If releasePath = "" Then releasePath = m_currentDir
ℹ️ Ligne 99: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Right(releasePath, 1) <> "\" Then releasePath = releasePath & "\"
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       LogMessage "Début de la validation de la release dans '" & releasePath & "'", "info"
ℹ️ Ligne 104: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If Not m_fso.FolderExists(releasePath) Then
ℹ️ Ligne 105: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           m_result.Success = False
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           m_result.Message = "Le répertoire de release n'existe pas"
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           m_result.ErrorCount = 1
ℹ️ Ligne 109: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           LogMessage "ERREUR: " & m_result.Message, "error"
ℹ️ Ligne 110: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           ValidateRelease = False
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 119: Le nom de variable 'isValid' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim isValid As Boolean
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim isValid As Boolean
ℹ️ Ligne 121: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       isValid = True
ℹ️ Ligne 122: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       isValid = ValidateEssentialModules(releasePath) And isValid
ℹ️ Ligne 123: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       isValid = ValidateConfigFiles(releasePath) And isValid
ℹ️ Ligne 124: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       isValid = ValidateStructure(releasePath) And isValid
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       isValid = ValidateVersionFile(releasePath) And isValid
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If isValid Then
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           m_result.Message = "La validation a réussi"
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           LogMessage "La validation a réussi", "info"
ℹ️ Ligne 132: La ligne dépasse la longueur maximale recommandée (144/120) [style.line_length]
   m_result.Message = "La validation a échoué avec " & m_result.ErrorCount & " erreur(s) et " & m_result.WarningCount & " avertissement(s)"
ℹ️ Ligne 132: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           m_result.Message = "La validation a échoué avec " & m_result.ErrorCount & " erreur(s) et " & m_result.WarningCount & " avertissement(s)"
ℹ️ Ligne 133: La ligne dépasse la longueur maximale recommandée (145/120) [style.line_length]
   LogMessage "La validation a échoué avec " & m_result.ErrorCount & " erreur(s) et " & m_result.WarningCount & " avertissement(s)", "error"
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           LogMessage "La validation a échoué avec " & m_result.ErrorCount & " erreur(s) et " & m_result.WarningCount & " avertissement(s)", "error"
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_result.Details = GenerateValidationReport()
ℹ️ Ligne 140: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       WriteValidationReport
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       ValidateRelease = isValid
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Public Function GetValidationMessage() As String
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       GetValidationMessage = m_result.Message
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 32 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   Public Function GetValidationDetails() As String
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       GetValidationDetails = m_result.Details
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   Public Function GetMissingFiles() As Variant
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If m_result.MissingFilesCount = 0 Then
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           GetMissingFiles = Array()
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Dim result() As String
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           ReDim result(m_result.MissingFilesCount - 1)
ℹ️ Ligne 173: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Dim i As Long
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           For i = 0 To m_result.MissingFilesCount - 1
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 52 espaces, trouvé: 12 [style.indentation]
               result(i) = m_result.MissingFiles(i)
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Next i
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           GetMissingFiles = result
ℹ️ Ligne 184: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 186: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Public Function GetErrorCount() As Long
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       GetErrorCount = m_result.ErrorCount
ℹ️ Ligne 192: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 194: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Public Function GetWarningCount() As Long
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       GetWarningCount = m_result.WarningCount
ℹ️ Ligne 200: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Public Sub ShowValidationReport()
ℹ️ Ligne 203: Le nom de variable 'title' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim title As String
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim title As String
ℹ️ Ligne 204: Le nom de variable 'message' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim message As String
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim message As String
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim style As VbMsgBoxStyle
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       title = "Validation de la Release APEX"
ℹ️ Ligne 208: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       message = m_result.Message & vbCrLf & vbCrLf
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If m_result.ErrorCount > 0 Or m_result.WarningCount > 0 Then
ℹ️ Ligne 211: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           message = message & "Problèmes détectés:" & vbCrLf
ℹ️ Ligne 213: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           If m_result.MissingFilesCount > 0 Then
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               message = message & "- " & m_result.MissingFilesCount & " fichier(s) requis manquant(s)" & vbCrLf
ℹ️ Ligne 217: Le nom de variable 'maxFiles' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim maxFiles As Long
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               Dim maxFiles As Long
ℹ️ Ligne 218: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               maxFiles = 5 ' Maximum de fichiers à afficher
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               message = message & vbCrLf & "Fichiers manquants:" & vbCrLf
ℹ️ Ligne 222: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               Dim i As Long
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 80 espaces, trouvé: 12 [style.indentation]
               For i = 0 To IIf(m_result.MissingFilesCount > maxFiles, maxFiles - 1, m_result.MissingFilesCount - 1)
ℹ️ Ligne 223: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   For i = 0 To IIf(m_result.MissingFilesCount > maxFiles, maxFiles - 1, m_result.MissingFilesCount - 1)
ℹ️ Ligne 224: Indentation incorrecte. Attendu: 80 espaces, trouvé: 16 [style.indentation]
                   message = message & "  " & m_result.MissingFiles(i) & vbCrLf
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               Next i
ℹ️ Ligne 227: Indentation incorrecte. Attendu: 80 espaces, trouvé: 12 [style.indentation]
               If m_result.MissingFilesCount > maxFiles Then
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 80 espaces, trouvé: 16 [style.indentation]
                   message = message & "  ... et " & (m_result.MissingFilesCount - maxFiles) & " autres fichiers" & vbCrLf
ℹ️ Ligne 232: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           message = message & vbCrLf & "Consultez le fichier '" & VALIDATION_LOG_FILE & "' pour plus de détails."
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           style = IIf(m_result.ErrorCount > 0, vbCritical, vbExclamation)
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           message = message & "Tous les contrôles ont été validés avec succès."
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           style = vbInformation
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       MsgBox message, style, title
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Function ValidateEssentialModules(ByVal basePath As String) As Boolean
⚠️ Ligne 247: La fonction 'ValidateEssentialModules' est trop longue (236 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       LogMessage "Vérification des modules essentiels...", "info"
ℹ️ Ligne 250: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 251: Le nom de variable 'missingCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim missingCount As Long
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim missingCount As Long
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       missingCount = 0
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       ValidateEssentialModules = True
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       For i = LBound(ESSENTIAL_MODULES) To UBound(ESSENTIAL_MODULES)
ℹ️ Ligne 257: Le nom de variable 'modulePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim modulePath As String
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           Dim modulePath As String
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           modulePath = basePath & ESSENTIAL_MODULES(i)
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           modulePath = Replace(modulePath, "/", "\")
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           If Not m_fso.FileExists(modulePath) Then
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               m_result.MissingFilesCount = m_result.MissingFilesCount + 1
ℹ️ Ligne 265: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.MissingFilesCount = m_result.MissingFilesCount + 1
ℹ️ Ligne 266: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               ReDim Preserve m_result.MissingFiles(m_result.MissingFilesCount)
ℹ️ Ligne 266: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   ReDim Preserve m_result.MissingFiles(m_result.MissingFilesCount)
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               m_result.MissingFiles(m_result.MissingFilesCount - 1) = ESSENTIAL_MODULES(i)
ℹ️ Ligne 267: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.MissingFiles(m_result.MissingFilesCount - 1) = ESSENTIAL_MODULES(i)
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               LogMessage "ERREUR: Module essentiel manquant - " & ESSENTIAL_MODULES(i), "error"
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               missingCount = missingCount + 1
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               ValidateEssentialModules = False
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 275: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If missingCount > 0 Then
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           m_result.ErrorCount = m_result.ErrorCount + missingCount
ℹ️ Ligne 276: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.ErrorCount = m_result.ErrorCount + missingCount
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           LogMessage "Tous les modules essentiels sont présents", "info"
ℹ️ Ligne 284: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 286: Indentation incorrecte. Attendu: 76 espaces, trouvé: 0 [style.indentation]
   Private Function ValidateConfigFiles(ByVal basePath As String) As Boolean
ℹ️ Ligne 287: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       LogMessage "Vérification des fichiers de configuration...", "info"
ℹ️ Ligne 289: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 290: Le nom de variable 'missingCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim missingCount As Long
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim missingCount As Long
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       missingCount = 0
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       ValidateConfigFiles = True
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       For i = LBound(ESSENTIAL_CONFIG_FILES) To UBound(ESSENTIAL_CONFIG_FILES)
ℹ️ Ligne 296: Le nom de variable 'configPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim configPath As String
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           Dim configPath As String
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           configPath = basePath & ESSENTIAL_CONFIG_FILES(i)
ℹ️ Ligne 300: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           configPath = Replace(configPath, "/", "\")
ℹ️ Ligne 302: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           If Not m_fso.FileExists(configPath) Then
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               m_result.MissingFilesCount = m_result.MissingFilesCount + 1
ℹ️ Ligne 304: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.MissingFilesCount = m_result.MissingFilesCount + 1
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               ReDim Preserve m_result.MissingFiles(m_result.MissingFilesCount)
ℹ️ Ligne 305: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   ReDim Preserve m_result.MissingFiles(m_result.MissingFilesCount)
ℹ️ Ligne 306: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               m_result.MissingFiles(m_result.MissingFilesCount - 1) = ESSENTIAL_CONFIG_FILES(i)
ℹ️ Ligne 306: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.MissingFiles(m_result.MissingFilesCount - 1) = ESSENTIAL_CONFIG_FILES(i)
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               LogMessage "ERREUR: Fichier de configuration manquant - " & ESSENTIAL_CONFIG_FILES(i), "error"
ℹ️ Ligne 309: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               missingCount = missingCount + 1
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               ValidateConfigFiles = False
ℹ️ Ligne 312: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       If missingCount > 0 Then
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           m_result.ErrorCount = m_result.ErrorCount + missingCount
ℹ️ Ligne 315: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.ErrorCount = m_result.ErrorCount + missingCount
ℹ️ Ligne 317: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           LogMessage "Tous les fichiers de configuration sont présents", "info"
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 325: Indentation incorrecte. Attendu: 84 espaces, trouvé: 0 [style.indentation]
   Private Function ValidateStructure(ByVal basePath As String) As Boolean
ℹ️ Ligne 326: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       LogMessage "Vérification de la structure du framework...", "info"
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       ValidateStructure = True
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Dim mainDirs() As String
ℹ️ Ligne 332: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       mainDirs = Array("src", "config", "docs")
ℹ️ Ligne 334: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 334: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       For i = LBound(mainDirs) To UBound(mainDirs)
ℹ️ Ligne 336: Le nom de variable 'dirPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim dirPath As String
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           Dim dirPath As String
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           dirPath = basePath & mainDirs(i)
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           If Not m_fso.FolderExists(dirPath) Then
ℹ️ Ligne 340: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               LogMessage "ERREUR: Répertoire principal manquant - " & mainDirs(i), "error"
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 341: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 342: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               ValidateStructure = False
ℹ️ Ligne 344: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       If m_fso.FolderExists(basePath & "src") Then
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           Dim srcDirs() As String
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           srcDirs = Array("core", "utils", "architecture", "xml", "recette")
ℹ️ Ligne 351: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           For i = LBound(srcDirs) To UBound(srcDirs)
ℹ️ Ligne 352: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               Dim srcSubDir As String
ℹ️ Ligne 353: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               srcSubDir = basePath & "src\" & srcDirs(i)
ℹ️ Ligne 355: Indentation incorrecte. Attendu: 96 espaces, trouvé: 12 [style.indentation]
               If Not m_fso.FolderExists(srcSubDir) Then
ℹ️ Ligne 356: Indentation incorrecte. Attendu: 96 espaces, trouvé: 16 [style.indentation]
                   LogMessage "AVERTISSEMENT: Sous-répertoire src manquant - " & srcDirs(i), "warning"
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 96 espaces, trouvé: 16 [style.indentation]
                   m_result.WarningCount = m_result.WarningCount + 1
ℹ️ Ligne 357: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.WarningCount = m_result.WarningCount + 1
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           Next i
ℹ️ Ligne 363: Le nom de variable 'moduleCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim moduleCount As Long
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Dim moduleCount As Long
ℹ️ Ligne 364: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       moduleCount = CountFilesWithExtension(basePath & "src", "bas") + CountFilesWithExtension(basePath & "src", "cls")
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       If moduleCount < MIN_MODULE_COUNT Then
ℹ️ Ligne 367: La ligne dépasse la longueur maximale recommandée (138/120) [style.line_length]
   LogMessage "ERREUR: Nombre insuffisant de modules (" & moduleCount & " trouvés, minimum " & MIN_MODULE_COUNT & " requis)", "error"
ℹ️ Ligne 367: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           LogMessage "ERREUR: Nombre insuffisant de modules (" & moduleCount & " trouvés, minimum " & MIN_MODULE_COUNT & " requis)", "error"
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 368: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 369: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           ValidateStructure = False
ℹ️ Ligne 371: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           LogMessage "Nombre de modules suffisant: " & moduleCount, "info"
ℹ️ Ligne 374: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       If ValidateStructure Then
ℹ️ Ligne 375: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           LogMessage "La structure du framework est valide", "info"
ℹ️ Ligne 381: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 383: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   Private Function ValidateVersionFile(ByVal basePath As String) As Boolean
ℹ️ Ligne 384: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       LogMessage "Vérification du fichier de version...", "info"
ℹ️ Ligne 386: Le nom de variable 'versionFile' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim versionFile As String
ℹ️ Ligne 386: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       Dim versionFile As String
ℹ️ Ligne 387: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       versionFile = basePath & "VERSION.txt"
ℹ️ Ligne 390: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       If Not m_fso.FileExists(versionFile) Then
ℹ️ Ligne 391: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           LogMessage "ERREUR: Fichier VERSION.txt manquant", "error"
ℹ️ Ligne 392: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 392: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 395: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           m_result.MissingFilesCount = m_result.MissingFilesCount + 1
ℹ️ Ligne 395: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.MissingFilesCount = m_result.MissingFilesCount + 1
ℹ️ Ligne 396: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           ReDim Preserve m_result.MissingFiles(m_result.MissingFilesCount)
ℹ️ Ligne 396: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   ReDim Preserve m_result.MissingFiles(m_result.MissingFilesCount)
ℹ️ Ligne 397: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           m_result.MissingFiles(m_result.MissingFilesCount - 1) = "VERSION.txt"
ℹ️ Ligne 397: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.MissingFiles(m_result.MissingFilesCount - 1) = "VERSION.txt"
ℹ️ Ligne 399: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           ValidateVersionFile = False
ℹ️ Ligne 400: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 404: Indentation incorrecte. Attendu: 100 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 408: Le nom de variable 'ts' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim ts As Object
ℹ️ Ligne 408: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim ts As Object
ℹ️ Ligne 409: Le nom de variable 'content' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim content As String
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim content As String
ℹ️ Ligne 410: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim lines() As String
ℹ️ Ligne 411: Le nom de variable 'versionFound' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim versionFound As Boolean
ℹ️ Ligne 411: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim versionFound As Boolean
ℹ️ Ligne 412: Le nom de variable 'dateFound' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim dateFound As Boolean
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim dateFound As Boolean
ℹ️ Ligne 413: Le nom de variable 'versionValue' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim versionValue As String
ℹ️ Ligne 413: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim versionValue As String
ℹ️ Ligne 415: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Set ts = m_fso.OpenTextFile(versionFile, 1) ' ForReading = 1
ℹ️ Ligne 416: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       content = ts.ReadAll
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       ts.Close
ℹ️ Ligne 419: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       lines = Split(content, vbCrLf)
ℹ️ Ligne 420: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       versionFound = False
ℹ️ Ligne 421: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       dateFound = False
ℹ️ Ligne 424: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 424: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 425: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       For i = 0 To UBound(lines)
ℹ️ Ligne 426: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           If Left(Trim(lines(i)), 8) = "Version:" Then
ℹ️ Ligne 427: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               versionFound = True
ℹ️ Ligne 428: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               versionValue = Trim(Mid(lines(i), 9))
ℹ️ Ligne 430: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               dateFound = True
ℹ️ Ligne 432: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 435: Le nom de variable 'isValid' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim isValid As Boolean
ℹ️ Ligne 435: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim isValid As Boolean
ℹ️ Ligne 436: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       isValid = True
ℹ️ Ligne 438: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If Not versionFound Then
ℹ️ Ligne 439: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           LogMessage "ERREUR: Information de version manquante dans VERSION.txt", "error"
ℹ️ Ligne 440: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 440: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 441: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           isValid = False
ℹ️ Ligne 444: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If Not dateFound Then
ℹ️ Ligne 445: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           LogMessage "AVERTISSEMENT: Date de création manquante dans VERSION.txt", "warning"
ℹ️ Ligne 446: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           m_result.WarningCount = m_result.WarningCount + 1
ℹ️ Ligne 446: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.WarningCount = m_result.WarningCount + 1
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If versionFound And Len(versionValue) > 0 Then
ℹ️ Ligne 452: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 452: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           Dim regex As Object
ℹ️ Ligne 453: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 455: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           With regex
ℹ️ Ligne 456: Indentation incorrecte. Attendu: 100 espaces, trouvé: 12 [style.indentation]
               .Global = False
ℹ️ Ligne 457: Indentation incorrecte. Attendu: 100 espaces, trouvé: 12 [style.indentation]
               .MultiLine = False
ℹ️ Ligne 458: Indentation incorrecte. Attendu: 100 espaces, trouvé: 12 [style.indentation]
               .IgnoreCase = True
ℹ️ Ligne 459: Indentation incorrecte. Attendu: 100 espaces, trouvé: 12 [style.indentation]
               .Pattern = "^\d+\.\d+\.\d+(?:\-[a-zA-Z0-9\.]+)?$"
ℹ️ Ligne 462: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           If Not regex.Test(versionValue) Then
ℹ️ Ligne 463: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               LogMessage "ERREUR: Format de version invalide dans VERSION.txt: " & versionValue, "error"
ℹ️ Ligne 464: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 464: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.ErrorCount = m_result.ErrorCount + 1
ℹ️ Ligne 465: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               isValid = False
ℹ️ Ligne 467: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               LogMessage "Version valide trouvée: " & versionValue, "info"
ℹ️ Ligne 471: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           If modVersionInfo.FRAMEWORK_VERSION <> versionValue Then
ℹ️ Ligne 472: La ligne dépasse la longueur maximale recommandée (162/120) [style.line_length]
   LogMessage "AVERTISSEMENT: Incohérence de version - VERSION.txt: " & versionValue & ", modVersionInfo: " & modVersionInfo.FRAMEWORK_VERSION, "warning"
ℹ️ Ligne 472: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               LogMessage "AVERTISSEMENT: Incohérence de version - VERSION.txt: " & versionValue & ", modVersionInfo: " & modVersionInfo.FRAMEWORK_VERSION, "warning"
ℹ️ Ligne 473: Indentation incorrecte. Attendu: 104 espaces, trouvé: 12 [style.indentation]
               m_result.WarningCount = m_result.WarningCount + 1
ℹ️ Ligne 473: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.WarningCount = m_result.WarningCount + 1
ℹ️ Ligne 477: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       ValidateVersionFile = isValid
ℹ️ Ligne 479: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If isValid Then
ℹ️ Ligne 480: Indentation incorrecte. Attendu: 100 espaces, trouvé: 8 [style.indentation]
           LogMessage "La validation du fichier de version est réussie", "info"
ℹ️ Ligne 489: Indentation incorrecte. Attendu: 96 espaces, trouvé: 0 [style.indentation]
   Private Function CountFilesWithExtension(ByVal folderPath As String, ByVal extension As String) As Long
⚠️ Ligne 489: La fonction 'CountFilesWithExtension' est trop longue (126 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 490: Le nom de variable 'count' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim count As Long
ℹ️ Ligne 490: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim count As Long
ℹ️ Ligne 491: Le nom de variable 'folder' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim folder As Object
ℹ️ Ligne 491: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim folder As Object
ℹ️ Ligne 492: Le nom de variable 'file' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim file As Object
ℹ️ Ligne 492: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim file As Object
ℹ️ Ligne 493: Le nom de variable 'subfolder' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim subfolder As Object
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Dim subfolder As Object
ℹ️ Ligne 495: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       count = 0
ℹ️ Ligne 498: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If Left(extension, 1) = "." Then extension = Mid(extension, 2)
ℹ️ Ligne 501: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If Not m_fso.FolderExists(folderPath) Then
ℹ️ Ligne 502: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           CountFilesWithExtension = 0
ℹ️ Ligne 503: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 507: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 510: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Set folder = m_fso.GetFolder(folderPath)
ℹ️ Ligne 513: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       For Each file In folder.Files
ℹ️ Ligne 514: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           If LCase(m_fso.GetExtensionName(file.Name)) = LCase(extension) Then
ℹ️ Ligne 515: Indentation incorrecte. Attendu: 112 espaces, trouvé: 12 [style.indentation]
               count = count + 1
ℹ️ Ligne 517: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Next file
ℹ️ Ligne 520: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       For Each subfolder In folder.SubFolders
ℹ️ Ligne 521: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           count = count + CountFilesWithExtension(subfolder.Path, extension)
ℹ️ Ligne 522: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Next subfolder
ℹ️ Ligne 524: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       CountFilesWithExtension = count
ℹ️ Ligne 529: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 531: Indentation incorrecte. Attendu: 112 espaces, trouvé: 0 [style.indentation]
   Private Sub LogMessage(ByVal message As String, ByVal logLevel As String)
ℹ️ Ligne 533: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       m_result.Details = m_result.Details & Now & " - " & message & vbCrLf
ℹ️ Ligne 533: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_result.Details = m_result.Details & Now & " - " & message & vbCrLf
ℹ️ Ligne 536: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 537: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       If Not m_logger Is Nothing Then
ℹ️ Ligne 540: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogDebug MODULE_NAME, message
ℹ️ Ligne 542: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 544: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogWarning MODULE_NAME, message
ℹ️ Ligne 546: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogError MODULE_NAME, message
ℹ️ Ligne 548: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 552: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           Debug.Print Now & " - " & logLevel & " - " & message
ℹ️ Ligne 554: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 559: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 561: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   Private Function GenerateValidationReport() As String
ℹ️ Ligne 562: Le nom de variable 'report' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim report As String
ℹ️ Ligne 562: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Dim report As String
ℹ️ Ligne 564: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = "RAPPORT DE VALIDATION DU FRAMEWORK APEX" & vbCrLf
ℹ️ Ligne 565: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & "----------------------------------------" & vbCrLf
ℹ️ Ligne 566: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & "Date: " & Format(Now, "yyyy-mm-dd hh:mm:ss") & vbCrLf
ℹ️ Ligne 567: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & "Version du framework: " & modVersionInfo.FRAMEWORK_VERSION & vbCrLf & vbCrLf
ℹ️ Ligne 569: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & "RÉSULTAT: " & IIf(m_result.Success, "SUCCÈS", "ÉCHEC") & vbCrLf
ℹ️ Ligne 570: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & "- Erreurs: " & m_result.ErrorCount & vbCrLf
ℹ️ Ligne 571: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & "- Avertissements: " & m_result.WarningCount & vbCrLf
ℹ️ Ligne 574: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       If m_result.MissingFilesCount > 0 Then
ℹ️ Ligne 575: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           report = report & vbCrLf & "FICHIERS MANQUANTS:" & vbCrLf
ℹ️ Ligne 577: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 577: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           Dim i As Long
ℹ️ Ligne 578: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           For i = 0 To m_result.MissingFilesCount - 1
ℹ️ Ligne 579: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               report = report & "- " & m_result.MissingFiles(i) & vbCrLf
ℹ️ Ligne 580: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           Next i
ℹ️ Ligne 583: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & vbCrLf & "DÉTAILS:" & vbCrLf
ℹ️ Ligne 584: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       report = report & m_result.Details
ℹ️ Ligne 586: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       GenerateValidationReport = report
ℹ️ Ligne 591: Indentation incorrecte. Attendu: 120 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 593: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   Private Sub WriteValidationReport()
ℹ️ Ligne 594: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 597: Le nom de variable 'logsFolder' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim logsFolder As String
ℹ️ Ligne 597: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Dim logsFolder As String
ℹ️ Ligne 598: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       logsFolder = m_currentDir & "logs"
ℹ️ Ligne 600: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       If Not m_fso.FolderExists(logsFolder) Then
ℹ️ Ligne 601: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           m_fso.CreateFolder logsFolder
ℹ️ Ligne 605: Le nom de variable 'ts' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim ts As Object
ℹ️ Ligne 605: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Dim ts As Object
ℹ️ Ligne 606: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Set ts = m_fso.CreateTextFile(m_currentDir & VALIDATION_LOG_FILE, True)
ℹ️ Ligne 608: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       If Err.Number = 0 Then
ℹ️ Ligne 609: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           ts.Write m_result.Details
ℹ️ Ligne 610: Indentation incorrecte. Attendu: 124 espaces, trouvé: 8 [style.indentation]
           ts.Close
ℹ️ Ligne 613: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\utils\modDateUtils.bas
-------------------------------------------------------------------
ℹ️ Ligne 19: Le nom de variable 'm_Logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 19: Le nom de variable 'm_Logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 20: Le nom de variable 'm_LastError' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_LastError As String
ℹ️ Ligne 20: Le nom de variable 'm_LastError' ne suit pas la convention camelCase [naming.variable_case]
   Private m_LastError As String
ℹ️ Ligne 33: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize(Optional ByVal logger As Object = Nothing)
ℹ️ Ligne 38: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then
ℹ️ Ligne 49: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function FormatDate(ByVal dateValue As Date, Optional ByVal format As String = DATE_FORMAT_FR) As String
ℹ️ Ligne 59: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 61: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du formatage de la date: " & Err.Description
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       FormatDate = ""
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Public Function GetISODate(ByVal dateValue As Date) As String
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       GetISODate = FormatDate(dateValue, DATE_FORMAT_ISO)
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 80: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   Public Function GetSQLDate(ByVal dateValue As Date) As String
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       GetSQLDate = FormatDate(dateValue, DATE_FORMAT_SQL)
ℹ️ Ligne 87: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Public Function GetLocalizedDate(ByVal dateValue As Date, Optional ByVal locale As String = "FR") As String
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               GetLocalizedDate = FormatDate(dateValue, DATE_FORMAT_FR)
ℹ️ Ligne 97: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               GetLocalizedDate = FormatDate(dateValue, DATE_FORMAT_US)
ℹ️ Ligne 99: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               GetLocalizedDate = FormatDate(dateValue, DATE_FORMAT_ISO)
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               GetLocalizedDate = FormatDate(dateValue, DATE_FORMAT_FR)
ℹ️ Ligne 104: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 110: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du formatage de la date localisée: " & Err.Description
ℹ️ Ligne 112: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 113: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       GetLocalizedDate = ""
ℹ️ Ligne 121: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   Public Function ParseDate(ByVal dateString As String, Optional ByVal format As String = "") As Date
⚠️ Ligne 121: La fonction 'ParseDate' est trop longue (144 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 123: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 126: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       If format = "" Then
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           If InStr(dateString, "-") > 0 Then
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               If Len(dateString) > 10 Then
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   format = DATE_FORMAT_SQL
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   format = DATE_FORMAT_ISO
ℹ️ Ligne 138: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               Dim parts() As String
ℹ️ Ligne 139: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               parts = Split(dateString, "/")
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               If UBound(parts) >= 2 Then
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 52 espaces, trouvé: 16 [style.indentation]
                   If Len(parts(0)) = 2 And Val(parts(0)) <= 31 Then
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       format = DATE_FORMAT_FR
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       format = DATE_FORMAT_US
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       format = DATE_FORMAT_FR ' Par défaut
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   format = DATE_FORMAT_FR ' Par défaut
ℹ️ Ligne 154: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               ParseDate = CDate(dateString)
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 159: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               Dim isoparts() As String
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               isoparts = Split(dateString, "-")
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               If UBound(isoparts) >= 2 Then
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   ParseDate = DateSerial(Val(isoparts(0)), Val(isoparts(1)), Val(isoparts(2)))
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   ParseDate = CDate(dateString)
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               Dim sqldateparts() As String
ℹ️ Ligne 179: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               sqldateparts = Split(dateString, " ")
ℹ️ Ligne 181: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               If UBound(sqldateparts) >= 1 Then
ℹ️ Ligne 183: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   Dim sqldateisoparts() As String
ℹ️ Ligne 184: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   sqldateisoparts = Split(sqldateparts(0), "-")
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   Dim sqltimeparts() As String
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   sqltimeparts = Split(sqldateparts(1), ":")
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 52 espaces, trouvé: 16 [style.indentation]
                   If UBound(sqldateisoparts) >= 2 And UBound(sqltimeparts) >= 2 Then
ℹ️ Ligne 191: La ligne dépasse la longueur maximale recommandée (121/120) [style.line_length]
   ParseDate = DateSerial(Val(sqldateisoparts(0)), Val(sqldateisoparts(1)), Val(sqldateisoparts(2))) + _
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       ParseDate = DateSerial(Val(sqldateisoparts(0)), Val(sqldateisoparts(1)), Val(sqldateisoparts(2))) + _
ℹ️ Ligne 192: Indentation incorrecte. Attendu: 52 espaces, trouvé: 31 [style.indentation]
                                  TimeSerial(Val(sqltimeparts(0)), Val(sqltimeparts(1)), Val(sqltimeparts(2)))
ℹ️ Ligne 194: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       ParseDate = CDate(dateString)
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   ParseDate = CDate(dateString)
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               Dim frparts() As String
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               frparts = Split(dateString, "/")
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               If UBound(frparts) >= 2 Then
ℹ️ Ligne 206: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   ParseDate = DateSerial(Val(frparts(2)), Val(frparts(1)), Val(frparts(0)))
ℹ️ Ligne 208: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   ParseDate = CDate(dateString)
ℹ️ Ligne 213: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               Dim usparts() As String
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               usparts = Split(dateString, "/")
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               If UBound(usparts) >= 2 Then
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   ParseDate = DateSerial(Val(usparts(2)), Val(usparts(0)), Val(usparts(1)))
ℹ️ Ligne 219: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   ParseDate = CDate(dateString)
ℹ️ Ligne 224: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               ParseDate = CDate(dateString)
ℹ️ Ligne 227: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 231: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la conversion de la chaîne en date: " & Err.Description
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       ParseDate = DateSerial(1900, 1, 1)
ℹ️ Ligne 242: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Public Function IsValidDate(ByVal dateString As String, Optional ByVal format As String = "") As Boolean
ℹ️ Ligne 246: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim testDate As Date
ℹ️ Ligne 249: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       testDate = ParseDate(dateString, format)
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       IsValidDate = (Year(testDate) >= 1900 And Year(testDate) <= 2100)
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la validation de la date: " & Err.Description
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       IsValidDate = False
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Public Function AddWorkDays(ByVal startDate As Date, ByVal workDays As Long) As Date
⚠️ Ligne 271: La fonction 'AddWorkDays' est trop longue (294 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim currentDate As Date
ℹ️ Ligne 274: Le nom de variable 'remainingDays' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim remainingDays As Long
ℹ️ Ligne 274: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim remainingDays As Long
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       currentDate = startDate
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       remainingDays = workDays
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       If remainingDays = 0 Then
ℹ️ Ligne 283: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           AddWorkDays = startDate
ℹ️ Ligne 284: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Do While remainingDays <> 0
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If remainingDays > 0 Then
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               currentDate = currentDate + 1
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               remainingDays = remainingDays - 1
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               currentDate = currentDate - 1
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               remainingDays = remainingDays + 1
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If Weekday(currentDate) = vbSaturday Or Weekday(currentDate) = vbSunday Then
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 72 espaces, trouvé: 12 [style.indentation]
               If remainingDays > 0 Then
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   remainingDays = remainingDays + 1
ℹ️ Ligne 307: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   remainingDays = remainingDays - 1
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Loop
ℹ️ Ligne 312: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       AddWorkDays = currentDate
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 320: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 321: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'ajout des jours ouvrés: " & Err.Description
ℹ️ Ligne 322: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       AddWorkDays = startDate
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Public Function GetWorkDaysBetween(ByVal startDate As Date, ByVal endDate As Date) As Long
ℹ️ Ligne 332: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Dim currentDate As Date
ℹ️ Ligne 333: Le nom de variable 'workDays' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim workDays As Long
ℹ️ Ligne 333: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Dim workDays As Long
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 338: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If startDate > endDate Then
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Dim tempDate As Date
ℹ️ Ligne 340: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           tempDate = startDate
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           startDate = endDate
ℹ️ Ligne 342: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           endDate = tempDate
ℹ️ Ligne 345: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       workDays = 0
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       currentDate = startDate
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Do While currentDate <= endDate
ℹ️ Ligne 350: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           If Weekday(currentDate) <> vbSaturday And Weekday(currentDate) <> vbSunday Then
ℹ️ Ligne 351: Indentation incorrecte. Attendu: 80 espaces, trouvé: 12 [style.indentation]
               workDays = workDays + 1
ℹ️ Ligne 354: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           currentDate = currentDate + 1
ℹ️ Ligne 355: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Loop
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       GetWorkDaysBetween = workDays
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 365: Indentation incorrecte. Attendu: 76 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul des jours ouvrés: " & Err.Description
ℹ️ Ligne 367: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       GetWorkDaysBetween = 0
ℹ️ Ligne 373: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 375: Indentation incorrecte. Attendu: 84 espaces, trouvé: 0 [style.indentation]
   Public Function GetQuarter(ByVal dateValue As Date) As Integer
ℹ️ Ligne 377: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 379: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       GetQuarter = Int((Month(dateValue) - 1) / 3) + 1
ℹ️ Ligne 381: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 385: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 387: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 388: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul du trimestre: " & Err.Description
ℹ️ Ligne 389: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 390: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       GetQuarter = 0
ℹ️ Ligne 395: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 397: Indentation incorrecte. Attendu: 96 espaces, trouvé: 0 [style.indentation]
   Public Function GetFirstDayOfMonth(ByVal dateValue As Date) As Date
ℹ️ Ligne 399: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 401: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       GetFirstDayOfMonth = DateSerial(Year(dateValue), Month(dateValue), 1)
ℹ️ Ligne 403: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 407: Indentation incorrecte. Attendu: 100 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 100 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 410: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul du premier jour du mois: " & Err.Description
ℹ️ Ligne 411: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       GetFirstDayOfMonth = dateValue
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 419: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   Public Function GetLastDayOfMonth(ByVal dateValue As Date) As Date
ℹ️ Ligne 421: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 423: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       GetLastDayOfMonth = DateSerial(Year(dateValue), Month(dateValue) + 1, 0)
ℹ️ Ligne 425: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 429: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 431: Indentation incorrecte. Attendu: 112 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 432: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul du dernier jour du mois: " & Err.Description
ℹ️ Ligne 433: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 434: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       GetLastDayOfMonth = dateValue
ℹ️ Ligne 439: Indentation incorrecte. Attendu: 116 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 441: Indentation incorrecte. Attendu: 120 espaces, trouvé: 0 [style.indentation]
   Public Function GetFirstDayOfQuarter(ByVal dateValue As Date) As Date
ℹ️ Ligne 443: Le nom de variable 'quarter' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim quarter As Integer
ℹ️ Ligne 443: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Dim quarter As Integer
ℹ️ Ligne 445: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 447: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       quarter = GetQuarter(dateValue)
ℹ️ Ligne 448: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       GetFirstDayOfQuarter = DateSerial(Year(dateValue), (quarter - 1) * 3 + 1, 1)
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 454: Indentation incorrecte. Attendu: 124 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 456: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 457: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul du premier jour du trimestre: " & Err.Description
ℹ️ Ligne 458: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 459: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       GetFirstDayOfQuarter = dateValue
ℹ️ Ligne 464: Indentation incorrecte. Attendu: 128 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 466: Indentation incorrecte. Attendu: 132 espaces, trouvé: 0 [style.indentation]
   Public Function GetLastDayOfQuarter(ByVal dateValue As Date) As Date
ℹ️ Ligne 468: Le nom de variable 'quarter' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim quarter As Integer
ℹ️ Ligne 468: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       Dim quarter As Integer
ℹ️ Ligne 470: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 472: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       quarter = GetQuarter(dateValue)
ℹ️ Ligne 473: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       GetLastDayOfQuarter = DateSerial(Year(dateValue), quarter * 3 + 1, 0)
ℹ️ Ligne 475: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 479: Indentation incorrecte. Attendu: 136 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 481: Indentation incorrecte. Attendu: 136 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 482: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul du dernier jour du trimestre: " & Err.Description
ℹ️ Ligne 483: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 484: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       GetLastDayOfQuarter = dateValue
ℹ️ Ligne 489: Indentation incorrecte. Attendu: 140 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 491: Indentation incorrecte. Attendu: 144 espaces, trouvé: 0 [style.indentation]
   Public Function GetFirstDayOfYear(ByVal dateValue As Date) As Date
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 495: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       GetFirstDayOfYear = DateSerial(Year(dateValue), 1, 1)
ℹ️ Ligne 497: Indentation incorrecte. Attendu: 144 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 501: Indentation incorrecte. Attendu: 148 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 503: Indentation incorrecte. Attendu: 148 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 504: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul du premier jour de l'année: " & Err.Description
ℹ️ Ligne 505: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 506: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       GetFirstDayOfYear = dateValue
ℹ️ Ligne 511: Indentation incorrecte. Attendu: 152 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 513: Indentation incorrecte. Attendu: 156 espaces, trouvé: 0 [style.indentation]
   Public Function GetLastDayOfYear(ByVal dateValue As Date) As Date
ℹ️ Ligne 515: Indentation incorrecte. Attendu: 156 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 517: Indentation incorrecte. Attendu: 156 espaces, trouvé: 4 [style.indentation]
       GetLastDayOfYear = DateSerial(Year(dateValue), 12, 31)
ℹ️ Ligne 519: Indentation incorrecte. Attendu: 156 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 523: Indentation incorrecte. Attendu: 160 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 525: Indentation incorrecte. Attendu: 160 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 526: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul du dernier jour de l'année: " & Err.Description
ℹ️ Ligne 527: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 528: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       GetLastDayOfYear = dateValue
ℹ️ Ligne 533: Indentation incorrecte. Attendu: 164 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 535: Indentation incorrecte. Attendu: 168 espaces, trouvé: 0 [style.indentation]
   Public Function GetAge(ByVal birthDate As Date, Optional ByVal referenceDate As Date = 0) As Integer
ℹ️ Ligne 537: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 540: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       If referenceDate = 0 Then referenceDate = Date
ℹ️ Ligne 543: Le nom de variable 'age' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim age As Integer
ℹ️ Ligne 543: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim age As Integer
ℹ️ Ligne 544: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       age = Year(referenceDate) - Year(birthDate)
ℹ️ Ligne 547: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       If Month(referenceDate) < Month(birthDate) Or _
ℹ️ Ligne 548: Indentation incorrecte. Attendu: 172 espaces, trouvé: 7 [style.indentation]
          (Month(referenceDate) = Month(birthDate) And Day(referenceDate) < Day(birthDate)) Then
ℹ️ Ligne 549: Indentation incorrecte. Attendu: 172 espaces, trouvé: 8 [style.indentation]
           age = age - 1
ℹ️ Ligne 552: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       GetAge = age
ℹ️ Ligne 554: Indentation incorrecte. Attendu: 168 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 558: Indentation incorrecte. Attendu: 172 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 560: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 561: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du calcul de l'âge: " & Err.Description
ℹ️ Ligne 562: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 563: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       GetAge = 0
ℹ️ Ligne 571: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   Public Function SecondsToTime(ByVal seconds As Long) As String
ℹ️ Ligne 573: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 575: Le nom de variable 'hours' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim hours As Long
ℹ️ Ligne 575: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim hours As Long
ℹ️ Ligne 576: Le nom de variable 'minutes' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim minutes As Long
ℹ️ Ligne 576: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim minutes As Long
ℹ️ Ligne 577: Le nom de variable 'remainingSeconds' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim remainingSeconds As Long
ℹ️ Ligne 577: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Dim remainingSeconds As Long
ℹ️ Ligne 579: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       hours = seconds \ 3600
ℹ️ Ligne 580: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       minutes = (seconds Mod 3600) \ 60
ℹ️ Ligne 581: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       remainingSeconds = seconds Mod 60
ℹ️ Ligne 583: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       SecondsToTime = Format(hours, "00") & ":" & Format(minutes, "00") & ":" & Format(remainingSeconds, "00")
ℹ️ Ligne 585: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 589: Indentation incorrecte. Attendu: 176 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 591: Indentation incorrecte. Attendu: 176 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 592: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la conversion des secondes en temps: " & Err.Description
ℹ️ Ligne 593: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 594: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       SecondsToTime = "00:00:00"
ℹ️ Ligne 599: Indentation incorrecte. Attendu: 180 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 601: Indentation incorrecte. Attendu: 184 espaces, trouvé: 0 [style.indentation]
   Public Function TimeToSeconds(ByVal timeString As String) As Long
ℹ️ Ligne 603: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 605: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Dim timeParts() As String
ℹ️ Ligne 606: Le nom de variable 'hours' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim hours As Long
ℹ️ Ligne 606: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Dim hours As Long
ℹ️ Ligne 607: Le nom de variable 'minutes' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim minutes As Long
ℹ️ Ligne 607: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Dim minutes As Long
ℹ️ Ligne 608: Le nom de variable 'seconds' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim seconds As Long
ℹ️ Ligne 608: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Dim seconds As Long
ℹ️ Ligne 611: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       timeParts = Split(timeString, ":")
ℹ️ Ligne 614: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       If UBound(timeParts) >= 2 Then
ℹ️ Ligne 615: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           hours = Val(timeParts(0))
ℹ️ Ligne 616: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           minutes = Val(timeParts(1))
ℹ️ Ligne 617: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           seconds = Val(timeParts(2))
ℹ️ Ligne 619: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           TimeToSeconds = hours * 3600 + minutes * 60 + seconds
ℹ️ Ligne 621: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           minutes = Val(timeParts(0))
ℹ️ Ligne 622: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           seconds = Val(timeParts(1))
ℹ️ Ligne 624: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           TimeToSeconds = minutes * 60 + seconds
ℹ️ Ligne 626: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           seconds = Val(timeParts(0))
ℹ️ Ligne 628: Indentation incorrecte. Attendu: 188 espaces, trouvé: 8 [style.indentation]
           TimeToSeconds = seconds
ℹ️ Ligne 631: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 635: Indentation incorrecte. Attendu: 188 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 637: Indentation incorrecte. Attendu: 188 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 638: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la conversion du temps en secondes: " & Err.Description
ℹ️ Ligne 639: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 640: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       TimeToSeconds = 0
ℹ️ Ligne 644: Indentation incorrecte. Attendu: 184 espaces, trouvé: 0 [style.indentation]
   Public Property Get LastError() As String
ℹ️ Ligne 646: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       LastError = m_LastError
ℹ️ Ligne 654: Indentation incorrecte. Attendu: 184 espaces, trouvé: 0 [style.indentation]
   Private Sub LogError(ByVal errorMessage As String)
ℹ️ Ligne 656: Indentation incorrecte. Attendu: 188 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\testing\clsTestSuite.cls
---------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 28: La variable 'Const' est déclarée mais semble non utilisée [best_practices.unused_variable]
ℹ️ Ligne 45: Le nom de variable 'm_Name' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_Name As String
ℹ️ Ligne 45: Le nom de variable 'm_Name' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Name As String
ℹ️ Ligne 46: Le nom de variable 'm_Description' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_Description As String
ℹ️ Ligne 46: Le nom de variable 'm_Description' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Description As String
ℹ️ Ligne 47: Le nom de variable 'm_Author' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_Author As String
ℹ️ Ligne 47: Le nom de variable 'm_Author' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Author As String
ℹ️ Ligne 49: Le nom de variable 'm_TestCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Private m_TestCount As Long
ℹ️ Ligne 49: Le nom de variable 'm_TestCount' ne suit pas la convention camelCase [naming.variable_case]
   Private m_TestCount As Long
ℹ️ Ligne 50: Le nom de variable 'm_Results' de type Collection devrait commencer par 'col' [naming.variable_prefix]
   Private m_Results As Collection
ℹ️ Ligne 50: Le nom de variable 'm_Results' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Results As Collection
ℹ️ Ligne 51: Le nom de variable 'm_PassedCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Private m_PassedCount As Long
ℹ️ Ligne 51: Le nom de variable 'm_PassedCount' ne suit pas la convention camelCase [naming.variable_case]
   Private m_PassedCount As Long
ℹ️ Ligne 53: Le nom de variable 'm_FailedCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Private m_FailedCount As Long
ℹ️ Ligne 53: Le nom de variable 'm_FailedCount' ne suit pas la convention camelCase [naming.variable_case]
   Private m_FailedCount As Long
ℹ️ Ligne 54: Le nom de variable 'm_SetupProcedure' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_SetupProcedure As String
ℹ️ Ligne 54: Le nom de variable 'm_SetupProcedure' ne suit pas la convention camelCase [naming.variable_case]
   Private m_SetupProcedure As String
ℹ️ Ligne 55: Le nom de variable 'm_TeardownProcedure' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_TeardownProcedure As String
ℹ️ Ligne 55: Le nom de variable 'm_TeardownProcedure' ne suit pas la convention camelCase [naming.variable_case]
   Private m_TeardownProcedure As String
ℹ️ Ligne 56: Le nom de variable 'm_SetupSuiteProcedure' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_SetupSuiteProcedure As String
ℹ️ Ligne 56: Le nom de variable 'm_SetupSuiteProcedure' ne suit pas la convention camelCase [naming.variable_case]
   Private m_SetupSuiteProcedure As String
ℹ️ Ligne 57: Le nom de variable 'm_TeardownSuiteProcedure' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_TeardownSuiteProcedure As String
ℹ️ Ligne 57: Le nom de variable 'm_TeardownSuiteProcedure' ne suit pas la convention camelCase [naming.variable_case]
   Private m_TeardownSuiteProcedure As String
ℹ️ Ligne 58: Le nom de variable 'm_Category' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_Category As String
ℹ️ Ligne 58: Le nom de variable 'm_Category' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Category As String
ℹ️ Ligne 59: Le nom de variable 'm_ConfigManager' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_ConfigManager As Object
ℹ️ Ligne 59: Le nom de variable 'm_ConfigManager' ne suit pas la convention camelCase [naming.variable_case]
   Private m_ConfigManager As Object
⚠️ Ligne 62: Le nom de fonction 'Class_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Initialize()
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Initialize()
ℹ️ Ligne 74: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 76: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 77: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set m_Results = Nothing
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set m_ConfigManager = Nothing
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Public Property Get Name() As String
ℹ️ Ligne 83: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Name = m_Name
ℹ️ Ligne 86: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Property Let Name(ByVal value As String)
ℹ️ Ligne 86: La fonction 'Name' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let Name(ByVal value As String)
ℹ️ Ligne 90: La fonction 'Description' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get Description() As String
ℹ️ Ligne 94: La fonction 'Description' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let Description(ByVal value As String)
ℹ️ Ligne 98: La fonction 'Author' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get Author() As String
ℹ️ Ligne 102: La fonction 'Author' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let Author(ByVal value As String)
ℹ️ Ligne 106: La fonction 'Category' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get Category() As String
ℹ️ Ligne 110: La fonction 'Category' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let Category(ByVal value As String)
ℹ️ Ligne 114: La fonction 'TestCount' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get TestCount() As Long
ℹ️ Ligne 118: La fonction 'PassedCount' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get PassedCount() As Long
ℹ️ Ligne 122: La fonction 'FailedCount' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get FailedCount() As Long
ℹ️ Ligne 126: La fonction 'SkippedCount' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get SkippedCount() As Long
ℹ️ Ligne 130: La fonction 'Results' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get Results() As Collection
ℹ️ Ligne 134: La fonction 'SetupProcedure' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let SetupProcedure(ByVal value As String)
ℹ️ Ligne 138: La fonction 'TeardownProcedure' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let TeardownProcedure(ByVal value As String)
ℹ️ Ligne 142: La fonction 'SetupSuiteProcedure' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let SetupSuiteProcedure(ByVal value As String)
ℹ️ Ligne 146: La fonction 'TeardownSuiteProcedure' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let TeardownSuiteProcedure(ByVal value As String)
⚠️ Ligne 155: La fonction 'AddTest' est trop longue (279 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub AddTestEx(ByVal testName As String, ByVal testProc As String, _
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal moduleName As String = "", _
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal description As String = "", _
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal tags As String = "", _
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal priority As Long = 1, _
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal disabled As Boolean = False, _
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal dependencies As String = "", _
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal timeout As Long = 0, _
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 4 espaces, trouvé: 20 [style.indentation]
                       Optional ByVal expectedExceptions As String = "")
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If m_TestCount > 0 Then
ℹ️ Ligne 177: La variable 'Preserve' est déclarée mais semble non utilisée [best_practices.unused_variable]
ℹ️ Ligne 182: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .TestName = testName
ℹ️ Ligne 183: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .ProcedureName = testProc
ℹ️ Ligne 184: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .ModuleName = moduleName
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Description = description
ℹ️ Ligne 186: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Tags = tags
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Priority = priority
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Disabled = disabled
ℹ️ Ligne 189: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Dependencies = dependencies
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Timeout = IIf(timeout = 0, GetDefaultTimeout(), timeout)
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .ExpectedExceptions = expectedExceptions
ℹ️ Ligne 200: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Sub RunAllTests(Optional ByVal stopOnFailure As Boolean = False)
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If m_TestCount = 0 Then Exit'@Description: 
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 209: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 210: Le nom de variable 'result' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim result As Object ' clsTestResult
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim result As Object ' clsTestResult
ℹ️ Ligne 211: Le nom de variable 'logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim logger As Object
ℹ️ Ligne 211: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim logger As Object
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_PassedCount = 0
ℹ️ Ligne 215: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_FailedCount = 0
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_SkippedCount = 0
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Set m_Results = New Collection
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Set logger = CreateObject("APEX.Logger")
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then Set logger = Nothing
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If m_SetupSuiteProcedure <> "" Then
ℹ️ Ligne 227: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           If logger Is Nothing Then
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               Debug.Print "  Exécution du setup de la suite: " & m_SetupSuiteProcedure
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               logger.LogInfo CLASS_NAME, "Exécution du setup de la suite: " & m_SetupSuiteProcedure
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           Application.Run m_SetupSuiteProcedure
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       SortTestsByPriority
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       For i = 0 To m_TestCount - 1
ℹ️ Ligne 241: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           With m_Tests(i)
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               If .Disabled Then
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 32 espaces, trouvé: 16 [style.indentation]
                   If logger Is Nothing Then
ℹ️ Ligne 245: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       Debug.Print "  Test ignoré (désactivé): " & .TestName
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       logger.LogInfo CLASS_NAME, "Test ignoré (désactivé): " & .TestName
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   m_SkippedCount = m_SkippedCount + 1
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   Set result = New clsTestResult
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   result.TestName = .TestName
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   result.Skipped = True
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   result.Success = True ' Un test ignoré n'est pas considéré comme un échec
ℹ️ Ligne 255: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   m_Results.Add result
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   GoTo NextTest
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               If Not CheckDependencies(.Dependencies) Then
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 32 espaces, trouvé: 16 [style.indentation]
                   If logger Is Nothing Then
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       Debug.Print "  Test ignoré (dépendances non satisfaites): " & .TestName
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       logger.LogInfo CLASS_NAME, "Test ignoré (dépendances non satisfaites): " & .TestName
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   m_SkippedCount = m_SkippedCount + 1
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   Set result = New clsTestResult
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   result.TestName = .TestName
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   result.Skipped = True
ℹ️ Ligne 272: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   result.SkipReason = "Dépendances non satisfaites"
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   result.Success = True ' Un test ignoré n'est pas considéré comme un échec
ℹ️ Ligne 274: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   m_Results.Add result
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   GoTo NextTest
ℹ️ Ligne 280: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               If m_SetupProcedure <> "" Then
ℹ️ Ligne 281: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   Application.Run m_SetupProcedure
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               If logger Is Nothing Then
ℹ️ Ligne 286: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   Debug.Print "  Exécution du test: " & .TestName
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   logger.LogInfo CLASS_NAME, "Exécution du test: " & .TestName
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               Set result = modTestRunner.RunTest(.TestName, .ProcedureName, .ModuleName, .Timeout, .ExpectedExceptions)
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               If m_TeardownProcedure <> "" Then
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   Application.Run m_TeardownProcedure
ℹ️ Ligne 300: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               m_Results.Add result
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 28 espaces, trouvé: 12 [style.indentation]
               If result.Success Then
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   m_PassedCount = m_PassedCount + 1
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 32 espaces, trouvé: 16 [style.indentation]
                   If logger Is Nothing Then
ℹ️ Ligne 306: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       Debug.Print "    RÉUSSI en " & Format(result.ExecutionTime, "0.000") & " sec"
ℹ️ Ligne 308: La ligne dépasse la longueur maximale recommandée (132/120) [style.line_length]
   logger.LogInfo CLASS_NAME, "Test RÉUSSI: " & .TestName & " en " & Format(result.ExecutionTime, "0.000") & " sec"
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       logger.LogInfo CLASS_NAME, "Test RÉUSSI: " & .TestName & " en " & Format(result.ExecutionTime, "0.000") & " sec"
ℹ️ Ligne 311: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   m_FailedCount = m_FailedCount + 1
ℹ️ Ligne 312: Indentation incorrecte. Attendu: 32 espaces, trouvé: 16 [style.indentation]
                   If logger Is Nothing Then
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       Debug.Print "    ÉCHEC en " & Format(result.ExecutionTime, "0.000") & " sec: " & result.ErrorMessage
ℹ️ Ligne 313: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   Debug.Print "    ÉCHEC en " & Format(result.ExecutionTime, "0.000") & " sec: " & result.ErrorMessage
ℹ️ Ligne 315: La ligne dépasse la longueur maximale recommandée (156/120) [style.line_length]
   logger.LogError CLASS_NAME, "Test ÉCHEC: " & .TestName & " en " & Format(result.ExecutionTime, "0.000") & " sec: " & result.ErrorMessage
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 32 espaces, trouvé: 20 [style.indentation]
                       logger.LogError CLASS_NAME, "Test ÉCHEC: " & .TestName & " en " & Format(result.ExecutionTime, "0.000") & " sec: " & result.ErrorMessage
ℹ️ Ligne 315: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   logger.LogError CLASS_NAME, "Test ÉCHEC: " & .TestName & " en " & Format(result.ExecutionTime, "0.000") & " sec: " & result.ErrorMessage
ℹ️ Ligne 319: Indentation incorrecte. Attendu: 32 espaces, trouvé: 16 [style.indentation]
                   If stopOnFailure Then Exit For
ℹ️ Ligne 322: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   NextTest:
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 326: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If m_TeardownSuiteProcedure <> "" Then
ℹ️ Ligne 327: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           If logger Is Nothing Then
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 32 espaces, trouvé: 12 [style.indentation]
               Debug.Print "  Exécution du teardown de la suite: " & m_TeardownSuiteProcedure
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 32 espaces, trouvé: 12 [style.indentation]
               logger.LogInfo CLASS_NAME, "Exécution du teardown de la suite: " & m_TeardownSuiteProcedure
ℹ️ Ligne 333: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           Application.Run m_TeardownSuiteProcedure
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Public Function GetFailureDetails() As String
ℹ️ Ligne 342: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 342: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 343: Le nom de variable 'testResult' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim testResult As Object ' clsTestResult
ℹ️ Ligne 343: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Dim testResult As Object ' clsTestResult
ℹ️ Ligne 344: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 344: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       i = 0
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       For Each testResult In m_Results
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           If Not testResult.Success And Not testResult.Skipped Then
ℹ️ Ligne 348: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   If Not testResult.Success And Not testResult.Skipped Then
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 40 espaces, trouvé: 12 [style.indentation]
               i = i + 1
ℹ️ Ligne 350: Indentation incorrecte. Attendu: 40 espaces, trouvé: 12 [style.indentation]
               result = result & i & ". " & testResult.TestName & vbCrLf & _
ℹ️ Ligne 351: Indentation incorrecte. Attendu: 40 espaces, trouvé: 21 [style.indentation]
                        "   Source: " & testResult.ErrorSource & vbCrLf & _
ℹ️ Ligne 352: Indentation incorrecte. Attendu: 40 espaces, trouvé: 21 [style.indentation]
                        "   Message: " & testResult.ErrorMessage & vbCrLf & vbCrLf
ℹ️ Ligne 354: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Next testResult
ℹ️ Ligne 356: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       GetFailureDetails = result
ℹ️ Ligne 361: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Public Function GetTestInfo(ByVal testIndex As Long) As Variant
ℹ️ Ligne 364: Le nom de variable 'result' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim result As Object
ℹ️ Ligne 364: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim result As Object
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If testIndex < 0 Or testIndex >= m_TestCount Then
ℹ️ Ligne 367: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           GetTestInfo = Null
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 372: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 375: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       Set result = CreateObject("Scripting.Dictionary")
ℹ️ Ligne 376: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       With m_Tests(testIndex)
ℹ️ Ligne 377: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "TestName", .TestName
ℹ️ Ligne 378: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "ProcedureName", .ProcedureName
ℹ️ Ligne 379: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "ModuleName", .ModuleName
ℹ️ Ligne 380: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "Description", .Description
ℹ️ Ligne 381: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "Tags", .Tags
ℹ️ Ligne 382: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "Priority", .Priority
ℹ️ Ligne 383: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "Disabled", .Disabled
ℹ️ Ligne 384: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "Dependencies", .Dependencies
ℹ️ Ligne 385: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "Timeout", .Timeout
ℹ️ Ligne 386: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           result.Add "ExpectedExceptions", .ExpectedExceptions
ℹ️ Ligne 389: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       GetTestInfo = result
ℹ️ Ligne 394: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 396: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Public Function GetDetailedReport() As String
ℹ️ Ligne 397: Le nom de variable 'report' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim report As String
ℹ️ Ligne 397: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim report As String
ℹ️ Ligne 398: Le nom de variable 'testResult' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim testResult As Object ' clsTestResult
ℹ️ Ligne 398: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim testResult As Object ' clsTestResult
ℹ️ Ligne 399: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 399: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 401: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       report = "RAPPORT DÉTAILLÉ DE LA SUITE: " & m_Name & vbCrLf & _
ℹ️ Ligne 402: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "Description: " & m_Description & vbCrLf & _
ℹ️ Ligne 403: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "Auteur: " & m_Author & vbCrLf & _
ℹ️ Ligne 404: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "Catégorie: " & m_Category & vbCrLf & _
ℹ️ Ligne 405: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "Date d'exécution: " & Format(Now, "yyyy-mm-dd hh:mm:ss") & vbCrLf & vbCrLf & _
ℹ️ Ligne 406: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "RÉSUMÉ:" & vbCrLf & _
ℹ️ Ligne 407: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "  Tests: " & m_TestCount & vbCrLf & _
ℹ️ Ligne 408: La ligne dépasse la longueur maximale recommandée (146/120) [style.line_length]
   "  Réussis: " & m_PassedCount & " (" & Format(IIf(m_TestCount > 0, m_PassedCount / m_TestCount * 100, 0), "0.00") & "%)" & vbCrLf & _
ℹ️ Ligne 408: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "  Réussis: " & m_PassedCount & " (" & Format(IIf(m_TestCount > 0, m_PassedCount / m_TestCount * 100, 0), "0.00") & "%)" & vbCrLf & _
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "  Échoués: " & m_FailedCount & vbCrLf & _
ℹ️ Ligne 410: Indentation incorrecte. Attendu: 52 espaces, trouvé: 13 [style.indentation]
                "  Ignorés: " & m_SkippedCount & vbCrLf & vbCrLf
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       report = report & "DÉTAILS DES TESTS:" & vbCrLf
ℹ️ Ligne 414: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       i = 0
ℹ️ Ligne 415: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       For Each testResult In m_Results
ℹ️ Ligne 416: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           i = i + 1
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           report = report & i & ". " & testResult.TestName & ": "
ℹ️ Ligne 419: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           If testResult.Skipped Then
ℹ️ Ligne 420: La ligne dépasse la longueur maximale recommandée (122/120) [style.line_length]
   report = report & "IGNORÉ" & IIf(testResult.SkipReason <> "", " (" & testResult.SkipReason & ")", "") & vbCrLf
ℹ️ Ligne 420: Indentation incorrecte. Attendu: 60 espaces, trouvé: 12 [style.indentation]
               report = report & "IGNORÉ" & IIf(testResult.SkipReason <> "", " (" & testResult.SkipReason & ")", "") & vbCrLf
ℹ️ Ligne 420: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   report = report & "IGNORÉ" & IIf(testResult.SkipReason <> "", " (" & testResult.SkipReason & ")", "") & vbCrLf
ℹ️ Ligne 422: Indentation incorrecte. Attendu: 60 espaces, trouvé: 12 [style.indentation]
               report = report & "RÉUSSI en " & Format(testResult.ExecutionTime, "0.000") & " sec" & vbCrLf
ℹ️ Ligne 424: Indentation incorrecte. Attendu: 60 espaces, trouvé: 12 [style.indentation]
               report = report & "ÉCHEC en " & Format(testResult.ExecutionTime, "0.000") & " sec" & vbCrLf & _
ℹ️ Ligne 425: Indentation incorrecte. Attendu: 60 espaces, trouvé: 21 [style.indentation]
                        "   Source: " & testResult.ErrorSource & vbCrLf & _
ℹ️ Ligne 426: Indentation incorrecte. Attendu: 60 espaces, trouvé: 21 [style.indentation]
                        "   Message: " & testResult.ErrorMessage & vbCrLf
ℹ️ Ligne 429: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           report = report & vbCrLf
ℹ️ Ligne 430: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Next testResult
ℹ️ Ligne 432: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       GetDetailedReport = report
ℹ️ Ligne 440: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Private Function GetDefaultTimeout() As Long
ℹ️ Ligne 441: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 444: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If m_ConfigManager Is Nothing Then
ℹ️ Ligne 446: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           Set m_ConfigManager = CreateObject("APEX.ConfigManager")
ℹ️ Ligne 447: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           If Err.Number <> 0 Then Set m_ConfigManager = Nothing
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If Not m_ConfigManager Is Nothing Then
ℹ️ Ligne 451: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           GetDefaultTimeout = m_ConfigManager.GetSetting("General", "TimeoutSeconds", 30) * 1000
ℹ️ Ligne 453: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           GetDefaultTimeout = 30000 ' 30 secondes par défaut
ℹ️ Ligne 456: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 461: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 463: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Private Sub SortTestsByPriority()
ℹ️ Ligne 464: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long, j As Long
ℹ️ Ligne 464: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim i As Long, j As Long
ℹ️ Ligne 465: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim tempTest As TestInfo
ℹ️ Ligne 468: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       For i = 0 To m_TestCount - 2
ℹ️ Ligne 469: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           For j = i + 1 To m_TestCount - 1
ℹ️ Ligne 470: Indentation incorrecte. Attendu: 72 espaces, trouvé: 12 [style.indentation]
               If m_Tests(i).Priority > m_Tests(j).Priority Then
ℹ️ Ligne 471: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   tempTest = m_Tests(i)
ℹ️ Ligne 472: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   m_Tests(i) = m_Tests(j)
ℹ️ Ligne 473: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   m_Tests(j) = tempTest
ℹ️ Ligne 475: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           Next j
ℹ️ Ligne 476: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 481: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 483: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Function CheckDependencies(ByVal dependencies As String) As Boolean
ℹ️ Ligne 484: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If Trim(dependencies) = "" Then
ℹ️ Ligne 485: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           CheckDependencies = True
ℹ️ Ligne 486: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 490: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Dim depArray() As String
ℹ️ Ligne 494: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 494: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 496: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       depArray = Split(dependencies, ",")
ℹ️ Ligne 498: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       For i = 0 To UBound(depArray)
ℹ️ Ligne 499: Le nom de variable 'depName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim depName As String
ℹ️ Ligne 499: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Dim depName As String
ℹ️ Ligne 500: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           depName = Trim(depArray(i))
ℹ️ Ligne 503: Le nom de variable 'found' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim found As Boolean
ℹ️ Ligne 503: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Dim found As Boolean
ℹ️ Ligne 504: Le nom de variable 'testPassed' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim testPassed As Boolean
ℹ️ Ligne 504: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Dim testPassed As Boolean
ℹ️ Ligne 505: Le nom de variable 'testResult' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim testResult As Object ' clsTestResult
ℹ️ Ligne 505: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Dim testResult As Object ' clsTestResult
ℹ️ Ligne 507: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           found = False
ℹ️ Ligne 508: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           testPassed = False
ℹ️ Ligne 510: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           For Each testResult In m_Results
ℹ️ Ligne 511: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               If testResult.TestName = depName Then
ℹ️ Ligne 512: Indentation incorrecte. Attendu: 84 espaces, trouvé: 16 [style.indentation]
                   found = True
ℹ️ Ligne 513: Indentation incorrecte. Attendu: 84 espaces, trouvé: 16 [style.indentation]
                   testPassed = testResult.Success And Not testResult.Skipped
ℹ️ Ligne 513: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   testPassed = testResult.Success And Not testResult.Skipped
ℹ️ Ligne 514: Indentation incorrecte. Attendu: 88 espaces, trouvé: 16 [style.indentation]
                   Exit For
ℹ️ Ligne 516: Indentation incorrecte. Attendu: 80 espaces, trouvé: 8 [style.indentation]
           Next testResult
ℹ️ Ligne 519: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           If Not found Or Not testPassed Then
ℹ️ Ligne 520: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               CheckDependencies = False
ℹ️ Ligne 521: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 525: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 527: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 529: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       CheckDependencies = True

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\clsLogger.cls
----------------------------------------------------------
ℹ️ Ligne 60: Le nom de variable 'm_Config' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Config As LoggerConfig
ℹ️ Ligne 62: Le nom de variable 'm_BufferCount' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Private m_BufferCount As Long
ℹ️ Ligne 62: Le nom de variable 'm_BufferCount' ne suit pas la convention camelCase [naming.variable_case]
   Private m_BufferCount As Long
ℹ️ Ligne 63: Le nom de variable 'm_FileNum' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Private m_FileNum As Integer
ℹ️ Ligne 63: Le nom de variable 'm_FileNum' ne suit pas la convention camelCase [naming.variable_case]
   Private m_FileNum As Integer
ℹ️ Ligne 64: Le nom de variable 'm_LastError' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_LastError As String
ℹ️ Ligne 64: Le nom de variable 'm_LastError' ne suit pas la convention camelCase [naming.variable_case]
   Private m_LastError As String
ℹ️ Ligne 65: Le nom de variable 'm_IsInitialized' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Private m_IsInitialized As Boolean
ℹ️ Ligne 65: Le nom de variable 'm_IsInitialized' ne suit pas la convention camelCase [naming.variable_case]
   Private m_IsInitialized As Boolean
ℹ️ Ligne 67: Le nom de variable 'm_CustomCallback' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_CustomCallback As Object
ℹ️ Ligne 67: Le nom de variable 'm_CustomCallback' ne suit pas la convention camelCase [naming.variable_case]
   Private m_CustomCallback As Object
⚠️ Ligne 70: Le nom de fonction 'Class_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Initialize()
ℹ️ Ligne 70: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Initialize()
ℹ️ Ligne 75: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Enabled = True
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .MinLevel = lvlInfo
ℹ️ Ligne 77: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .Destinations = destConsole
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .LogFilePath = "logs\"
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .LogFileName = "application_log.txt"
ℹ️ Ligne 80: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .LogFileMaxSize = 5242880 ' 5 Mo
ℹ️ Ligne 81: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .IncludeTimestamp = True
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .IncludeLevel = True
ℹ️ Ligne 83: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .IncludeSource = True
ℹ️ Ligne 84: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .IncludeLineNumber = False
ℹ️ Ligne 85: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .AutoFlush = True
ℹ️ Ligne 86: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .MaxBufferSize = 100
ℹ️ Ligne 87: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .WorksheetName = "Logs"
ℹ️ Ligne 88: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .WorkbookName = ""
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .ConnectionString = ""
ℹ️ Ligne 90: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .RotationEnabled = True
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .RotationInterval = 7 ' Rotation hebdomadaire
ℹ️ Ligne 92: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           .AsyncEnabled = False
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 109: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 109: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If m_BufferCount > 0 Then
ℹ️ Ligne 113: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           FlushBuffer
ℹ️ Ligne 117: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If m_FileNum <> 0 Then
ℹ️ Ligne 118: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Close #m_FileNum
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           m_FileNum = 0
ℹ️ Ligne 124: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Public Property Get Enabled() As Boolean
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Enabled = m_Config.Enabled
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Property Let Enabled(ByVal value As Boolean)
ℹ️ Ligne 128: La fonction 'Enabled' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let Enabled(ByVal value As Boolean)
ℹ️ Ligne 132: La fonction 'MinLevel' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get MinLevel() As LogLevel
ℹ️ Ligne 136: La fonction 'MinLevel' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let MinLevel(ByVal value As LogLevel)
ℹ️ Ligne 140: La fonction 'Destinations' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get Destinations() As Long
ℹ️ Ligne 144: La fonction 'Destinations' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let Destinations(ByVal value As Long)
ℹ️ Ligne 148: La fonction 'LogFilePath' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get LogFilePath() As String
ℹ️ Ligne 152: La fonction 'LogFilePath' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let LogFilePath(ByVal value As String)
ℹ️ Ligne 156: La fonction 'LogFileName' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get LogFileName() As String
ℹ️ Ligne 160: La fonction 'LogFileName' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let LogFileName(ByVal value As String)
ℹ️ Ligne 164: La fonction 'AutoFlush' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get AutoFlush() As Boolean
ℹ️ Ligne 168: La fonction 'AutoFlush' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Let AutoFlush(ByVal value As Boolean)
ℹ️ Ligne 172: La fonction 'LastError' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Get LastError() As String
ℹ️ Ligne 176: La fonction 'CustomCallback' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Public Property Set CustomCallback(ByVal value As Object)
ℹ️ Ligne 185: La ligne dépasse la longueur maximale recommandée (121/120) [style.line_length]
   Public Sub LogDebug(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub LogDebug(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
⚠️ Ligne 185: La fonction 'LogDebug' est trop longue (171 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 192: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 194: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Sub LogInfo(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 196: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       LogMessage message, lvlInfo, source, lineNumber
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 16 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 203: La ligne dépasse la longueur maximale recommandée (123/120) [style.line_length]
   Public Sub LogWarning(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Public Sub LogWarning(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       LogMessage message, lvlWarning, source, lineNumber
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 212: La ligne dépasse la longueur maximale recommandée (121/120) [style.line_length]
   Public Sub LogError(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 212: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Public Sub LogError(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       LogMessage message, lvlError, source, lineNumber
ℹ️ Ligne 219: Indentation incorrecte. Attendu: 32 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 221: La ligne dépasse la longueur maximale recommandée (121/120) [style.line_length]
   Public Sub LogFatal(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   Public Sub LogFatal(ByVal message As String, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       LogMessage message, lvlFatal, source, lineNumber
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 230: La ligne dépasse la longueur maximale recommandée (148/120) [style.line_length]
   Public Sub LogMessage(ByVal message As String, ByVal level As LogLevel, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   Public Sub LogMessage(ByVal message As String, ByVal level As LogLevel, Optional ByVal source As String = "", Optional ByVal lineNumber As Long = 0)
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If Not m_Config.Enabled Or level < m_Config.MinLevel Then
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 243: Le nom de variable 'formattedMessage' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim formattedMessage As String
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim formattedMessage As String
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       formattedMessage = FormatLogMessage(message, level, source, lineNumber)
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       m_BufferCount = m_BufferCount + 1
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       m_Buffer(m_BufferCount) = formattedMessage
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If m_Config.AutoFlush Or m_BufferCount >= m_Config.MaxBufferSize Then
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           FlushBuffer
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Public Sub FlushBuffer()
ℹ️ Ligne 262: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       If m_BufferCount = 0 Then Exit Sub
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       For i = 1 To m_BufferCount
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If (m_Config.Destinations And destConsole) = destConsole Then
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               LogToConsole m_Buffer(i)
ℹ️ Ligne 275: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If (m_Config.Destinations And destFile) = destFile Then
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               LogToFile m_Buffer(i)
ℹ️ Ligne 280: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If (m_Config.Destinations And destSheet) = destSheet Then
ℹ️ Ligne 281: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               LogToSheet m_Buffer(i)
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If (m_Config.Destinations And destDatabase) = destDatabase Then
ℹ️ Ligne 286: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               LogToDatabase m_Buffer(i)
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If (m_Config.Destinations And destCustom) = destCustom Then
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               LogToCustom m_Buffer(i)
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           If (m_Config.Destinations And destEventLog) = destEventLog Then
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 68 espaces, trouvé: 12 [style.indentation]
               LogToEventLog m_Buffer(i)
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       m_BufferCount = 0
ℹ️ Ligne 306: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Public Sub ClearBuffer()
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       m_BufferCount = 0
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 317: Indentation incorrecte. Attendu: 76 espaces, trouvé: 0 [style.indentation]
   Public Function LoadConfigFromFile(ByVal filePath As String) As Boolean
ℹ️ Ligne 319: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 322: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       LoadConfigFromFile = True
ℹ️ Ligne 324: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 80 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du chargement de la configuration: " & Err.Description
ℹ️ Ligne 332: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       LoadConfigFromFile = False
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 84 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   Public Function SaveConfigToFile(ByVal filePath As String) As Boolean
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 344: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       SaveConfigToFile = True
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 350: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 352: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 353: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la sauvegarde de la configuration: " & Err.Description
ℹ️ Ligne 354: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       SaveConfigToFile = False
ℹ️ Ligne 362: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   Private Sub InitializeLogLevelNames()
⚠️ Ligne 362: La fonction 'InitializeLogLevelNames' est trop longue (239 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 364: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       m_LogLevelNames(lvlDebug) = "DEBUG"
ℹ️ Ligne 365: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       m_LogLevelNames(lvlInfo) = "INFO"
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       m_LogLevelNames(lvlWarning) = "WARNING"
ℹ️ Ligne 367: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       m_LogLevelNames(lvlError) = "ERROR"
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       m_LogLevelNames(lvlFatal) = "FATAL"
ℹ️ Ligne 373: Indentation incorrecte. Attendu: 96 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 375: La ligne dépasse la longueur maximale recommandée (143/120) [style.line_length]
   Private Function FormatLogMessage(ByVal message As String, ByVal level As LogLevel, ByVal source As String, ByVal lineNumber As Long) As String
ℹ️ Ligne 375: Indentation incorrecte. Attendu: 100 espaces, trouvé: 0 [style.indentation]
   Private Function FormatLogMessage(ByVal message As String, ByVal level As LogLevel, ByVal source As String, ByVal lineNumber As Long) As String
ℹ️ Ligne 377: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 377: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 380: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If m_Config.IncludeTimestamp Then
ℹ️ Ligne 381: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           result = Format(Now, "yyyy-mm-dd hh:nn:ss") & " | "
ℹ️ Ligne 385: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If m_Config.IncludeLevel Then
ℹ️ Ligne 386: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           result = result & m_LogLevelNames(level) & " | "
ℹ️ Ligne 390: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If m_Config.IncludeSource And source <> "" Then
ℹ️ Ligne 391: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           result = result & source & " | "
ℹ️ Ligne 395: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If m_Config.IncludeLineNumber And lineNumber <> 0 Then
ℹ️ Ligne 396: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           result = result & "Line " & lineNumber & " | "
ℹ️ Ligne 400: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       result = result & message
ℹ️ Ligne 402: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       FormatLogMessage = result
ℹ️ Ligne 407: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   Private Sub LogToConsole(ByVal message As String)
ℹ️ Ligne 411: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Debug.Print message
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 419: Indentation incorrecte. Attendu: 112 espaces, trouvé: 0 [style.indentation]
   Private Sub LogToFile(ByVal message As String)
ℹ️ Ligne 421: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 423: Le nom de variable 'filePath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim filePath As String
ℹ️ Ligne 423: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       Dim filePath As String
ℹ️ Ligne 426: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       If m_Config.LogFilePath <> "" Then
ℹ️ Ligne 427: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           On Error Resume Next
ℹ️ Ligne 428: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           MkDir m_Config.LogFilePath
ℹ️ Ligne 429: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           On Error GoTo ErrorHandler
ℹ️ Ligne 433: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       filePath = m_Config.LogFilePath & m_Config.LogFileName
ℹ️ Ligne 433: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   filePath = m_Config.LogFilePath & m_Config.LogFileName
ℹ️ Ligne 436: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       If m_Config.RotationEnabled Then
ℹ️ Ligne 437: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           CheckRotation filePath
ℹ️ Ligne 441: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       If m_FileNum = 0 Then
ℹ️ Ligne 442: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           m_FileNum = FreeFile
ℹ️ Ligne 443: Indentation incorrecte. Attendu: 116 espaces, trouvé: 8 [style.indentation]
           Open filePath For Append As #m_FileNum
ℹ️ Ligne 447: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       Print #m_FileNum, message
ℹ️ Ligne 449: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 453: Indentation incorrecte. Attendu: 116 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 455: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 456: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur d'écriture dans le fichier de log: " & Err.Description
ℹ️ Ligne 461: Indentation incorrecte. Attendu: 120 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 463: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   Private Sub LogToSheet(ByVal message As String)
ℹ️ Ligne 465: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 469: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 473: Indentation incorrecte. Attendu: 128 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 475: Indentation incorrecte. Attendu: 128 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 476: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur d'écriture dans la feuille de log: " & Err.Description
ℹ️ Ligne 481: Indentation incorrecte. Attendu: 132 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 483: Indentation incorrecte. Attendu: 136 espaces, trouvé: 0 [style.indentation]
   Private Sub LogToDatabase(ByVal message As String)
ℹ️ Ligne 485: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 489: Indentation incorrecte. Attendu: 136 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 493: Indentation incorrecte. Attendu: 140 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 495: Indentation incorrecte. Attendu: 140 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 496: Indentation incorrecte. Attendu: 140 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur d'écriture dans la base de données: " & Err.Description
ℹ️ Ligne 501: Indentation incorrecte. Attendu: 144 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 503: Indentation incorrecte. Attendu: 148 espaces, trouvé: 0 [style.indentation]
   Private Sub LogToCustom(ByVal message As String)
ℹ️ Ligne 505: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 507: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       If Not m_CustomCallback Is Nothing Then
ℹ️ Ligne 513: Indentation incorrecte. Attendu: 148 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 517: Indentation incorrecte. Attendu: 152 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 519: Indentation incorrecte. Attendu: 152 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 520: Indentation incorrecte. Attendu: 152 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'appel du gestionnaire personnalisé: " & Err.Description
ℹ️ Ligne 525: Indentation incorrecte. Attendu: 156 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 527: Indentation incorrecte. Attendu: 160 espaces, trouvé: 0 [style.indentation]
   Private Sub LogToEventLog(ByVal message As String)
ℹ️ Ligne 529: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 533: Indentation incorrecte. Attendu: 160 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 537: Indentation incorrecte. Attendu: 164 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 539: Indentation incorrecte. Attendu: 164 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 540: Indentation incorrecte. Attendu: 164 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur d'écriture dans le journal d'événements: " & Err.Description
ℹ️ Ligne 545: Indentation incorrecte. Attendu: 168 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 547: Indentation incorrecte. Attendu: 172 espaces, trouvé: 0 [style.indentation]
   Private Sub CheckRotation(ByVal filePath As String)
ℹ️ Ligne 549: Indentation incorrecte. Attendu: 172 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 551: Indentation incorrecte. Attendu: 176 espaces, trouvé: 4 [style.indentation]
       If Not m_Config.RotationEnabled Then Exit Sub
ℹ️ Ligne 554: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       If Dir(filePath) = "" Then Exit Sub
ℹ️ Ligne 557: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       If FileLen(filePath) >= m_Config.LogFileMaxSize Then
ℹ️ Ligne 558: Indentation incorrecte. Attendu: 184 espaces, trouvé: 8 [style.indentation]
           RotateLogFile filePath
ℹ️ Ligne 561: Indentation incorrecte. Attendu: 180 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 565: Indentation incorrecte. Attendu: 184 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 567: Indentation incorrecte. Attendu: 184 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 568: Indentation incorrecte. Attendu: 184 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la vérification de rotation: " & Err.Description
ℹ️ Ligne 573: Indentation incorrecte. Attendu: 188 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 575: Indentation incorrecte. Attendu: 192 espaces, trouvé: 0 [style.indentation]
   Private Sub RotateLogFile(ByVal filePath As String)
ℹ️ Ligne 577: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 580: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       If m_FileNum <> 0 Then
ℹ️ Ligne 581: Indentation incorrecte. Attendu: 196 espaces, trouvé: 8 [style.indentation]
           Close #m_FileNum
ℹ️ Ligne 582: Indentation incorrecte. Attendu: 196 espaces, trouvé: 8 [style.indentation]
           m_FileNum = 0
ℹ️ Ligne 586: Le nom de variable 'newPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim newPath As String
ℹ️ Ligne 586: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       Dim newPath As String
ℹ️ Ligne 587: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       newPath = Left$(filePath, InStrRev(filePath, ".") - 1) & "_" & _
ℹ️ Ligne 588: Indentation incorrecte. Attendu: 192 espaces, trouvé: 14 [style.indentation]
                 Format(Now, "yyyymmdd_hhnnss") & ".txt"
ℹ️ Ligne 590: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       Name filePath As newPath
ℹ️ Ligne 592: Indentation incorrecte. Attendu: 192 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 596: Indentation incorrecte. Attendu: 196 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 598: Indentation incorrecte. Attendu: 196 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 599: Indentation incorrecte. Attendu: 196 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de la rotation du fichier: " & Err.Description

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\modSecurityDPAPI.bas
-----------------------------------------------------------------
ℹ️ Ligne 19: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   #If VBA7 Then
ℹ️ Ligne 25: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function CryptProtectData Lib "crypt32.dll" (pDataIn As DATA_BLOB, _
ℹ️ Ligne 26: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal szDataDescr As LongPtr, pOptionalEntropy As DATA_BLOB, _
ℹ️ Ligne 27: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal pvReserved As LongPtr, pPromptStruct As Any, _
ℹ️ Ligne 28: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal dwFlags As Long, pDataOut As DATA_BLOB) As Long
ℹ️ Ligne 34: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function CryptUnprotectData Lib "crypt32.dll" (pDataIn As DATA_BLOB, _
ℹ️ Ligne 35: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal ppszDataDescr As LongPtr, pOptionalEntropy As DATA_BLOB, _
ℹ️ Ligne 36: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal pvReserved As LongPtr, pPromptStruct As Any, _
ℹ️ Ligne 37: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal dwFlags As Long, pDataOut As DATA_BLOB) As Long
ℹ️ Ligne 43: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" _
ℹ️ Ligne 44: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           (Destination As Any, Source As Any, ByVal Length As LongPtr)
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Function LocalAlloc Lib "kernel32" (ByVal uFlags As Long, _
ℹ️ Ligne 51: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ByVal uBytes As LongPtr) As LongPtr
ℹ️ Ligne 57: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function LocalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
ℹ️ Ligne 60: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Private Declare'@Description: 
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function CryptProtectData Lib "crypt32.dll" (pDataIn As DATA_BLOB, _
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Private Declare'@Description: 
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function CryptUnprotectData Lib "crypt32.dll" (pDataIn As DATA_BLOB, _
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Private Declare'@Description: 
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" _
ℹ️ Ligne 85: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Private Declare'@Description: 
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function LocalAlloc Lib "kernel32" (ByVal uFlags As Long, _
ℹ️ Ligne 92: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Private Declare'@Description: 
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function LocalFree Lib "kernel32" (ByVal hMem As Long) As Long
ℹ️ Ligne 100: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Const CRYPTPROTECT_UI_FORBIDDEN As Long = &H1
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Const CRYPTPROTECT_LOCAL_MACHINE As Long = &H4
ℹ️ Ligne 102: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Const LMEM_FIXED As Long = &H0
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Const LMEM_ZEROINIT As Long = &H40
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Type DATA_BLOB
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       cbData As Long
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       #If VBA7 Then
ℹ️ Ligne 109: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           pbData As LongPtr
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           pbData As Long
ℹ️ Ligne 116: Le nom de variable 'm_Logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 116: Le nom de variable 'm_Logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 116: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private m_Logger As Object ' ILoggerBase
ℹ️ Ligne 117: Le nom de variable 'm_Entropy' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_Entropy As String ' Salt optionnel pour renforcer le chiffrement
ℹ️ Ligne 117: Le nom de variable 'm_Entropy' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Entropy As String ' Salt optionnel pour renforcer le chiffrement
ℹ️ Ligne 117: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private m_Entropy As String ' Salt optionnel pour renforcer le chiffrement
ℹ️ Ligne 118: Le nom de variable 'm_LastError' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_LastError As String ' Dernière erreur
ℹ️ Ligne 118: Le nom de variable 'm_LastError' ne suit pas la convention camelCase [naming.variable_case]
   Private m_LastError As String ' Dernière erreur
ℹ️ Ligne 118: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private m_LastError As String ' Dernière erreur
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize(Optional ByVal logger As Object = Nothing, Optional ByVal entropy As String = "")
ℹ️ Ligne 127: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set m_Logger = logger
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       m_Entropy = entropy
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       m_LastError = ""
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Function EncryptString(ByVal plainText As String) As Byte()
⚠️ Ligne 142: La fonction 'EncryptString' est trop longue (163 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 146: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim dataIn As DATA_BLOB
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim dataOut As DATA_BLOB
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim dataEntropy As DATA_BLOB
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim bytesIn() As Byte
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim bytesOut() As Byte
ℹ️ Ligne 151: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim bytesEntropy() As Byte
ℹ️ Ligne 152: Le nom de variable 'result' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim result As Long
ℹ️ Ligne 152: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim result As Long
ℹ️ Ligne 154: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       bytesIn = StringToBytes(plainText)
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       dataIn = CreateBlob(bytesIn)
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If m_Entropy <> "" Then
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           bytesEntropy = StringToBytes(m_Entropy)
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           dataEntropy = CreateBlob(bytesEntropy)
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       result = CryptProtectData(dataIn, 0, dataEntropy, 0, ByVal 0, CRYPTPROTECT_UI_FORBIDDEN, dataOut)
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If result = 0 Then
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Échec du chiffrement par DPAPI"
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           EncryptString = vbNullString
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           GoTo Cleanup
ℹ️ Ligne 177: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       ReDim bytesOut(0 To dataOut.cbData - 1)
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       CopyMemory bytesOut(0), ByVal dataOut.pbData, dataOut.cbData
ℹ️ Ligne 181: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       EncryptString = bytesOut
ℹ️ Ligne 183: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Cleanup:
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       LocalFree dataOut.pbData
ℹ️ Ligne 186: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       LocalFree dataIn.pbData
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If m_Entropy <> "" Then LocalFree dataEntropy.pbData
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 192: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 194: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du chiffrement: " & Err.Description
ℹ️ Ligne 196: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       EncryptString = vbNullString
ℹ️ Ligne 198: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Resume Cleanup
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Public Function DecryptString(ByVal encryptedBytes() As Byte) As String
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim dataIn As DATA_BLOB
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim dataOut As DATA_BLOB
ℹ️ Ligne 211: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim dataEntropy As DATA_BLOB
ℹ️ Ligne 212: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim bytesOut() As Byte
ℹ️ Ligne 213: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim bytesEntropy() As Byte
ℹ️ Ligne 214: Le nom de variable 'result' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim result As Long
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim result As Long
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 219: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       dataIn = CreateBlob(encryptedBytes)
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       If m_Entropy <> "" Then
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           bytesEntropy = StringToBytes(m_Entropy)
ℹ️ Ligne 224: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           dataEntropy = CreateBlob(bytesEntropy)
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       result = CryptUnprotectData(dataIn, 0, dataEntropy, 0, ByVal 0, CRYPTPROTECT_UI_FORBIDDEN, dataOut)
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       If result = 0 Then
ℹ️ Ligne 231: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           m_LastError = "Échec du déchiffrement par DPAPI"
ℹ️ Ligne 232: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           LogError m_LastError
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           DecryptString = vbNullString
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           GoTo Cleanup
ℹ️ Ligne 238: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       ReDim bytesOut(0 To dataOut.cbData - 1)
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       CopyMemory bytesOut(0), ByVal dataOut.pbData, dataOut.cbData
ℹ️ Ligne 242: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       DecryptString = BytesToString(bytesOut)
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Cleanup:
ℹ️ Ligne 246: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       LocalFree dataOut.pbData
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       LocalFree dataIn.pbData
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       If m_Entropy <> "" Then LocalFree dataEntropy.pbData
ℹ️ Ligne 249: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 255: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du déchiffrement: " & Err.Description
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       DecryptString = vbNullString
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Resume Cleanup
ℹ️ Ligne 264: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 266: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   Public Function EncryptStringToBase64(ByVal plainText As String) As String
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       Dim encryptedBytes() As Byte
ℹ️ Ligne 272: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       encryptedBytes = EncryptString(plainText)
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If Not IsArrayEmpty(encryptedBytes) Then
ℹ️ Ligne 274: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           EncryptStringToBase64 = BytesToBase64(encryptedBytes)
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           EncryptStringToBase64 = ""
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 284: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Public Function DecryptStringFromBase64(ByVal base64Text As String) As String
ℹ️ Ligne 287: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim encryptedBytes() As Byte
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       encryptedBytes = Base64ToBytes(base64Text)
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If Not IsArrayEmpty(encryptedBytes) Then
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           DecryptStringFromBase64 = DecryptString(encryptedBytes)
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           DecryptStringFromBase64 = ""
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Public Property Get LastError() As String
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       LastError = m_LastError
ℹ️ Ligne 311: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Private Function CreateBlob(ByRef bytes() As Byte) As DATA_BLOB
⚠️ Ligne 311: La fonction 'CreateBlob' est trop longue (153 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim blob As DATA_BLOB
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       blob.cbData = UBound(bytes) - LBound(bytes) + 1
ℹ️ Ligne 316: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       blob.pbData = LocalAlloc(LMEM_FIXED Or LMEM_ZEROINIT, blob.cbData)
ℹ️ Ligne 317: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       CopyMemory ByVal blob.pbData, bytes(LBound(bytes)), blob.cbData
ℹ️ Ligne 319: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       CreateBlob = blob
ℹ️ Ligne 324: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 326: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   Private Function StringToBytes(ByVal text As String) As Byte()
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Dim bytes() As Byte
ℹ️ Ligne 329: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       bytes = text
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       StringToBytes = bytes
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Private Function BytesToString(ByRef bytes() As Byte) As String
ℹ️ Ligne 339: Le nom de variable 'result' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim result As String
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Dim result As String
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If IsArrayEmpty(bytes) Then
ℹ️ Ligne 342: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           BytesToString = ""
ℹ️ Ligne 343: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 351: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       result = Space$(UBound(bytes) - LBound(bytes) + 1)
ℹ️ Ligne 352: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       CopyMemory ByVal StrPtr(result), bytes(LBound(bytes)), Len(result)
ℹ️ Ligne 354: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       BytesToString = result
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 361: Indentation incorrecte. Attendu: 84 espaces, trouvé: 0 [style.indentation]
   Private Function BytesToBase64(ByRef bytes() As Byte) As String
ℹ️ Ligne 363: Le nom de variable 'xmlDoc' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim xmlDoc As Object
ℹ️ Ligne 363: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Dim xmlDoc As Object
ℹ️ Ligne 364: Le nom de variable 'xmlNode' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim xmlNode As Object
ℹ️ Ligne 364: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       Dim xmlNode As Object
ℹ️ Ligne 366: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 368: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       If IsArrayEmpty(bytes) Then
ℹ️ Ligne 369: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           BytesToBase64 = ""
ℹ️ Ligne 370: Indentation incorrecte. Attendu: 88 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 374: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 378: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       Set xmlDoc = CreateObject("MSXML2.DOMDocument")
ℹ️ Ligne 379: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       Set xmlNode = xmlDoc.createElement("base64")
ℹ️ Ligne 381: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       xmlNode.DataType = "bin.base64"
ℹ️ Ligne 382: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       xmlNode.nodeTypedValue = bytes
ℹ️ Ligne 383: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       BytesToBase64 = xmlNode.Text
ℹ️ Ligne 385: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 389: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 391: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 392: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors de l'encodage Base64: " & Err.Description
ℹ️ Ligne 393: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 394: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       BytesToBase64 = ""
ℹ️ Ligne 399: Indentation incorrecte. Attendu: 96 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 401: Indentation incorrecte. Attendu: 100 espaces, trouvé: 0 [style.indentation]
   Private Function Base64ToBytes(ByVal base64Text As String) As Byte()
ℹ️ Ligne 403: Le nom de variable 'xmlDoc' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim xmlDoc As Object
ℹ️ Ligne 403: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim xmlDoc As Object
ℹ️ Ligne 404: Le nom de variable 'xmlNode' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim xmlNode As Object
ℹ️ Ligne 404: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim xmlNode As Object
ℹ️ Ligne 405: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       Dim bytes() As Byte
ℹ️ Ligne 407: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       On Error GoTo ErrorHandler
ℹ️ Ligne 409: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       If Trim(base64Text) = "" Then
ℹ️ Ligne 410: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           ReDim bytes(0 To 0)
ℹ️ Ligne 411: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           bytes(0) = 0
ℹ️ Ligne 412: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           Base64ToBytes = bytes
ℹ️ Ligne 413: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 417: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 421: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Set xmlDoc = CreateObject("MSXML2.DOMDocument")
ℹ️ Ligne 422: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Set xmlNode = xmlDoc.createElement("base64")
ℹ️ Ligne 424: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       xmlNode.DataType = "bin.base64"
ℹ️ Ligne 425: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       xmlNode.Text = base64Text
ℹ️ Ligne 426: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Base64ToBytes = xmlNode.nodeTypedValue
ℹ️ Ligne 428: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 432: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 434: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 435: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       m_LastError = "Erreur lors du décodage Base64: " & Err.Description
ℹ️ Ligne 436: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       LogError m_LastError
ℹ️ Ligne 437: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       ReDim bytes(0 To 0)
ℹ️ Ligne 438: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       bytes(0) = 0
ℹ️ Ligne 439: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       Base64ToBytes = bytes
ℹ️ Ligne 444: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 446: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   Private Function IsArrayEmpty(ByRef arr As Variant) As Boolean
ℹ️ Ligne 448: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 449: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       IsArrayEmpty = (UBound(arr) < LBound(arr))
ℹ️ Ligne 450: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 455: Indentation incorrecte. Attendu: 116 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 457: Indentation incorrecte. Attendu: 120 espaces, trouvé: 0 [style.indentation]
   Private Sub LogError(ByVal errorMessage As String)
ℹ️ Ligne 459: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       If Not m_Logger Is Nothing Then

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\modVersionInfo.bas
---------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 37: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function GetFrameworkVersion() As String
⚠️ Ligne 37: La fonction 'GetFrameworkVersion' est trop longue (340 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 43: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 45: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Function GetFrameworkVersionFull() As String
ℹ️ Ligne 46: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       GetFrameworkVersionFull = FRAMEWORK_NAME & " v" & FRAMEWORK_VERSION & " (Build " & FRAMEWORK_BUILD & ")"
ℹ️ Ligne 51: Indentation incorrecte. Attendu: 16 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Public Function GetFrameworkVersionInfo() As String
ℹ️ Ligne 54: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       GetFrameworkVersionInfo = "Nom: " & FRAMEWORK_NAME & vbCrLf & _
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 20 espaces, trouvé: 30 [style.indentation]
                                 "Version: " & FRAMEWORK_VERSION & vbCrLf & _
ℹ️ Ligne 56: Indentation incorrecte. Attendu: 20 espaces, trouvé: 30 [style.indentation]
                                 "Build: " & FRAMEWORK_BUILD & vbCrLf & _
ℹ️ Ligne 57: Indentation incorrecte. Attendu: 20 espaces, trouvé: 30 [style.indentation]
                                 "Date de sortie: " & FRAMEWORK_RELEASE_DATE & vbCrLf & _
ℹ️ Ligne 58: Indentation incorrecte. Attendu: 20 espaces, trouvé: 30 [style.indentation]
                                 "Compatibilité: " & FRAMEWORK_COMPATIBILITY & vbCrLf & _
ℹ️ Ligne 59: Indentation incorrecte. Attendu: 20 espaces, trouvé: 30 [style.indentation]
                                 "Copyright: " & FRAMEWORK_COPYRIGHT
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 66: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Public Function IsPreRelease() As Boolean
ℹ️ Ligne 68: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 68: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim regex As Object
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       With regex
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           .Global = False
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           .MultiLine = False
ℹ️ Ligne 74: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           .IgnoreCase = True
ℹ️ Ligne 75: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           .Pattern = VERSION_REGEX_PATTERN
ℹ️ Ligne 78: Le nom de variable 'matches' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim matches As Object
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Dim matches As Object
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Set matches = regex.Execute(FRAMEWORK_VERSION)
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       If matches.Count > 0 Then
ℹ️ Ligne 83: Le nom de variable 'match' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim match As Object
ℹ️ Ligne 83: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           Dim match As Object
ℹ️ Ligne 84: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           Set match = matches(0)
ℹ️ Ligne 87: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           If match.SubMatches.Count >= 4 Then
ℹ️ Ligne 88: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               IsPreRelease = (match.SubMatches(3) <> "")
ℹ️ Ligne 90: Indentation incorrecte. Attendu: 36 espaces, trouvé: 12 [style.indentation]
               IsPreRelease = False
ℹ️ Ligne 93: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           IsPreRelease = False
ℹ️ Ligne 99: Indentation incorrecte. Attendu: 32 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   Public Function CompareVersions(ByVal version1 As String, ByVal version2 As String) As Long
ℹ️ Ligne 107: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Dim regex As Object
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 110: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       With regex
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           .Global = False
ℹ️ Ligne 112: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           .MultiLine = False
ℹ️ Ligne 113: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           .IgnoreCase = True
ℹ️ Ligne 114: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           .Pattern = VERSION_REGEX_PATTERN
ℹ️ Ligne 118: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       If Not regex.Test(version1) Or Not regex.Test(version2) Then
ℹ️ Ligne 118: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   If Not regex.Test(version1) Or Not regex.Test(version2) Then
ℹ️ Ligne 120: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           CompareVersions = 0
ℹ️ Ligne 121: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 129: Le nom de variable 'matches1' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim matches1 As Object
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim matches1 As Object
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Set matches1 = regex.Execute(version1)
ℹ️ Ligne 131: Le nom de variable 'major1' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim major1 As Long, minor1 As Long, patch1 As Long
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim major1 As Long, minor1 As Long, patch1 As Long
ℹ️ Ligne 132: Le nom de variable 'preType1' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim preType1 As String, preNum1 As Long
ℹ️ Ligne 132: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim preType1 As String, preNum1 As Long
ℹ️ Ligne 134: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       With matches1(0)
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           major1 = CLng(.SubMatches(0))
ℹ️ Ligne 136: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           minor1 = CLng(.SubMatches(1))
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           patch1 = CLng(.SubMatches(2))
ℹ️ Ligne 139: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           If .SubMatches.Count >= 5 And .SubMatches(3) <> "" Then
ℹ️ Ligne 140: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preType1 = .SubMatches(3)
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preNum1 = CLng(.SubMatches(4))
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preType1 = ""
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preNum1 = 0
ℹ️ Ligne 149: Le nom de variable 'matches2' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim matches2 As Object
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim matches2 As Object
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Set matches2 = regex.Execute(version2)
ℹ️ Ligne 151: Le nom de variable 'major2' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim major2 As Long, minor2 As Long, patch2 As Long
ℹ️ Ligne 151: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim major2 As Long, minor2 As Long, patch2 As Long
ℹ️ Ligne 152: Le nom de variable 'preType2' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim preType2 As String, preNum2 As Long
ℹ️ Ligne 152: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim preType2 As String, preNum2 As Long
ℹ️ Ligne 154: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       With matches2(0)
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           major2 = CLng(.SubMatches(0))
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           minor2 = CLng(.SubMatches(1))
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           patch2 = CLng(.SubMatches(2))
ℹ️ Ligne 159: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           If .SubMatches.Count >= 5 And .SubMatches(3) <> "" Then
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preType2 = .SubMatches(3)
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preNum2 = CLng(.SubMatches(4))
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preType2 = ""
ℹ️ Ligne 164: Indentation incorrecte. Attendu: 44 espaces, trouvé: 12 [style.indentation]
               preNum2 = 0
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If major1 <> major2 Then
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           CompareVersions = IIf(major1 > major2, 1, -1)
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           CompareVersions = IIf(minor1 > minor2, 1, -1)
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           CompareVersions = IIf(patch1 > patch2, 1, -1)
ℹ️ Ligne 177: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           If preType1 = "" Then
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               CompareVersions = 1
ℹ️ Ligne 180: Indentation incorrecte. Attendu: 48 espaces, trouvé: 12 [style.indentation]
               CompareVersions = -1
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       CompareVersions = -1
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       CompareVersions = IIf(preType2 = "alpha", 1, -1)
ℹ️ Ligne 189: Indentation incorrecte. Attendu: 52 espaces, trouvé: 20 [style.indentation]
                       CompareVersions = 1
ℹ️ Ligne 193: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           CompareVersions = IIf(preNum1 > preNum2, 1, -1)
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           CompareVersions = 0 ' Versions identiques
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   Public Function GetMajorVersion() As Long
ℹ️ Ligne 204: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim regex As Object
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       With regex
ℹ️ Ligne 208: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .Global = False
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .MultiLine = False
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .IgnoreCase = True
ℹ️ Ligne 211: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .Pattern = VERSION_REGEX_PATTERN
ℹ️ Ligne 214: Le nom de variable 'matches' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim matches As Object
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim matches As Object
ℹ️ Ligne 215: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Set matches = regex.Execute(FRAMEWORK_VERSION)
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If matches.Count > 0 Then
ℹ️ Ligne 218: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           GetMajorVersion = CLng(matches(0).SubMatches(0))
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           GetMajorVersion = 0
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Public Function GetMinorVersion() As Long
ℹ️ Ligne 229: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 229: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim regex As Object
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 232: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       With regex
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           .Global = False
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           .MultiLine = False
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           .IgnoreCase = True
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           .Pattern = VERSION_REGEX_PATTERN
ℹ️ Ligne 239: Le nom de variable 'matches' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim matches As Object
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim matches As Object
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Set matches = regex.Execute(FRAMEWORK_VERSION)
ℹ️ Ligne 242: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       If matches.Count > 0 Then
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           GetMinorVersion = CLng(matches(0).SubMatches(1))
ℹ️ Ligne 245: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           GetMinorVersion = 0
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   Public Function GetPatchVersion() As Long
ℹ️ Ligne 254: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Dim regex As Object
ℹ️ Ligne 255: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       With regex
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           .Global = False
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           .MultiLine = False
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           .IgnoreCase = True
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           .Pattern = VERSION_REGEX_PATTERN
ℹ️ Ligne 264: Le nom de variable 'matches' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim matches As Object
ℹ️ Ligne 264: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Dim matches As Object
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set matches = regex.Execute(FRAMEWORK_VERSION)
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       If matches.Count > 0 Then
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           GetPatchVersion = CLng(matches(0).SubMatches(2))
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           GetPatchVersion = 0
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Public Function ReadVersionFromFile(Optional ByVal filePath As String = "") As String
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If filePath = "" Then filePath = VERSION_FILE
ℹ️ Ligne 285: Le nom de variable 'fso' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim fso As Object
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Dim fso As Object
ℹ️ Ligne 286: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Set fso = CreateObject("Scripting.FileSystemObject")
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If Not fso.FileExists(filePath) Then
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           ReadVersionFromFile = ""
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 298: Le nom de variable 'ts' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim ts As Object
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim ts As Object
ℹ️ Ligne 299: Le nom de variable 'content' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim content As String
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim content As String
ℹ️ Ligne 300: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim lines() As String
ℹ️ Ligne 301: Le nom de variable 'i' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim i As Long
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim i As Long
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Set ts = fso.OpenTextFile(filePath, 1) ' ForReading = 1
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       content = ts.ReadAll
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       ts.Close
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       lines = Split(content, vbCrLf)
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       For i = 0 To UBound(lines)
ℹ️ Ligne 312: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           If Left(Trim(lines(i)), 8) = "Version:" Then
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               ReadVersionFromFile = Trim(Mid(lines(i), 9))
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 84 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 320: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       ReadVersionFromFile = ""
ℹ️ Ligne 324: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 329: Indentation incorrecte. Attendu: 84 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   Public Function GetVersionLabel() As String
ℹ️ Ligne 333: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       If IsPreRelease() Then
ℹ️ Ligne 334: Le nom de variable 'regex' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim regex As Object
ℹ️ Ligne 334: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           Dim regex As Object
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           Set regex = CreateObject("VBScript.RegExp")
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           With regex
ℹ️ Ligne 338: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               .Global = False
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               .MultiLine = False
ℹ️ Ligne 340: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               .IgnoreCase = True
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 92 espaces, trouvé: 12 [style.indentation]
               .Pattern = VERSION_REGEX_PATTERN
ℹ️ Ligne 344: Le nom de variable 'matches' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim matches As Object
ℹ️ Ligne 344: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           Dim matches As Object
ℹ️ Ligne 345: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           Set matches = regex.Execute(FRAMEWORK_VERSION)
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 96 espaces, trouvé: 8 [style.indentation]
           If matches.Count > 0 Then
ℹ️ Ligne 348: Le nom de variable 'preType' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim preType As String
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 96 espaces, trouvé: 12 [style.indentation]
               Dim preType As String
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 96 espaces, trouvé: 12 [style.indentation]
               preType = matches(0).SubMatches(3)
ℹ️ Ligne 353: Indentation incorrecte. Attendu: 100 espaces, trouvé: 20 [style.indentation]
                       GetVersionLabel = "Alpha"
ℹ️ Ligne 355: Indentation incorrecte. Attendu: 100 espaces, trouvé: 20 [style.indentation]
                       GetVersionLabel = "Bêta"
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 100 espaces, trouvé: 20 [style.indentation]
                       GetVersionLabel = "Release Candidate"
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 100 espaces, trouvé: 20 [style.indentation]
                       GetVersionLabel = "Pré-version"
ℹ️ Ligne 362: Indentation incorrecte. Attendu: 96 espaces, trouvé: 12 [style.indentation]
               GetVersionLabel = "Pré-version"
ℹ️ Ligne 365: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           GetVersionLabel = "Version stable"
ℹ️ Ligne 371: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 373: Indentation incorrecte. Attendu: 96 espaces, trouvé: 0 [style.indentation]
   Public Function ShowVersionDialog()
ℹ️ Ligne 375: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       MsgBox GetFrameworkVersionInfo(), vbInformation, FRAMEWORK_NAME & " - Informations de version"

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\clsPluginManager.cls
-----------------------------------------------------------------
ℹ️ Ligne 18: Le nom de variable 'm_Plugins' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_Plugins As Object ' Scripting.Dictionary
ℹ️ Ligne 18: Le nom de variable 'm_Plugins' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Plugins As Object ' Scripting.Dictionary
ℹ️ Ligne 19: Le nom de variable 'm_Logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Logger As ILoggerBase
ℹ️ Ligne 20: Le nom de variable 'm_IsInitialized' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Private m_IsInitialized As Boolean
ℹ️ Ligne 20: Le nom de variable 'm_IsInitialized' ne suit pas la convention camelCase [naming.variable_case]
   Private m_IsInitialized As Boolean
ℹ️ Ligne 21: Le nom de variable 'm_EventSubscriptions' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_EventSubscriptions As Object ' Scripting.Dictionary - stocke les abonnements d'événements
ℹ️ Ligne 21: Le nom de variable 'm_EventSubscriptions' ne suit pas la convention camelCase [naming.variable_case]
   Private m_EventSubscriptions As Object ' Scripting.Dictionary - stocke les abonnements d'événements
⚠️ Ligne 24: Le nom de fonction 'Class_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Initialize()
ℹ️ Ligne 24: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Initialize()
ℹ️ Ligne 32: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 34: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize(Optional ByVal logger As ILoggerBase = Nothing)
ℹ️ Ligne 35: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If m_IsInitialized Then Exit'@Description: 
ℹ️ Ligne 39: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 40: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Set m_Logger = logger
ℹ️ Ligne 41: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       LogIfAble "Initialize", LogLevelInfo, "Plugin Manager initialized", "PLUGIN"
ℹ️ Ligne 42: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       m_IsInitialized = True
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Public Function RegisterPlugin(plugin As IPlugin, Optional ByVal pluginId As String = "") As String
⚠️ Ligne 50: La fonction 'RegisterPlugin' est trop longue (112 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 51: Le nom de variable 'pluginIdToUse' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim pluginIdToUse As String
ℹ️ Ligne 51: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim pluginIdToUse As String
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Then Initialize
ℹ️ Ligne 56: La ligne dépasse la longueur maximale recommandée (127/120) [style.line_length]
   If pluginId = "" Then pluginIdToUse = plugin.PluginName & "_" & Format(Now, "yyyymmddhhnnss") Else pluginIdToUse = pluginId
ℹ️ Ligne 59: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If m_Plugins.Exists(pluginIdToUse) Then
ℹ️ Ligne 60: La ligne dépasse la longueur maximale recommandée (127/120) [style.line_length]
   LogIfAble "RegisterPlugin", LogLevelWarning, "Plugin ID '" & pluginIdToUse & "' already exists. Overwriting.", "PLUGIN"
ℹ️ Ligne 60: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           LogIfAble "RegisterPlugin", LogLevelWarning, "Plugin ID '" & pluginIdToUse & "' already exists. Overwriting.", "PLUGIN"
ℹ️ Ligne 61: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           UnregisterPlugin pluginIdToUse
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 66: Le nom de variable 'initSuccess' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim initSuccess As Boolean
ℹ️ Ligne 66: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Dim initSuccess As Boolean
ℹ️ Ligne 67: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       initSuccess = plugin.Initialize
ℹ️ Ligne 68: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 69: La ligne dépasse la longueur maximale recommandée (138/120) [style.line_length]
   LogIfAble "RegisterPlugin", LogLevelError, "Failed to initialize plugin '" & plugin.PluginName & "': " & Err.Description, "PLUGIN"
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           LogIfAble "RegisterPlugin", LogLevelError, "Failed to initialize plugin '" & plugin.PluginName & "': " & Err.Description, "PLUGIN"
ℹ️ Ligne 70: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           Set plugin = Nothing
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           RegisterPlugin = ""
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 81: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       m_Plugins.Add pluginIdToUse, plugin
ℹ️ Ligne 82: La ligne dépasse la longueur maximale recommandée (159/120) [style.line_length]
   LogIfAble "RegisterPlugin", LogLevelInfo, "Plugin '" & plugin.PluginName & "' v" & plugin.PluginVersion & " registered with ID: " & pluginIdToUse, "PLUGIN"
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       LogIfAble "RegisterPlugin", LogLevelInfo, "Plugin '" & plugin.PluginName & "' v" & plugin.PluginVersion & " registered with ID: " & pluginIdToUse, "PLUGIN"
ℹ️ Ligne 82: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   LogIfAble "RegisterPlugin", LogLevelInfo, "Plugin '" & plugin.PluginName & "' v" & plugin.PluginVersion & " registered with ID: " & pluginIdToUse, "PLUGIN"
ℹ️ Ligne 84: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       RegisterPlugin = pluginIdToUse
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Public Function GetPlugin(ByVal pluginId As String) As IPlugin
ℹ️ Ligne 92: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Or Not m_Plugins.Exists(pluginId) Then
ℹ️ Ligne 93: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           Set GetPlugin = Nothing
ℹ️ Ligne 94: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Set GetPlugin = m_Plugins(pluginId)
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 44 espaces, trouvé: 0 [style.indentation]
   Public Function UnregisterPlugin(ByVal pluginId As String) As Boolean
ℹ️ Ligne 109: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Or Not m_Plugins.Exists(pluginId) Then
ℹ️ Ligne 110: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           UnregisterPlugin = False
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 118: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim plugin As IPlugin
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Set plugin = m_Plugins(pluginId)
ℹ️ Ligne 122: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       RemovePluginSubscriptions pluginId
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 126: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       plugin.Terminate
ℹ️ Ligne 127: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 128: La ligne dépasse la longueur maximale recommandée (137/120) [style.line_length]
   LogIfAble "UnregisterPlugin", LogLevelWarning, "Error during plugin '" & pluginId & "' termination: " & Err.Description, "PLUGIN"
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           LogIfAble "UnregisterPlugin", LogLevelWarning, "Error during plugin '" & pluginId & "' termination: " & Err.Description, "PLUGIN"
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       m_Plugins.Remove pluginId
ℹ️ Ligne 134: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       LogIfAble "UnregisterPlugin", LogLevelInfo, "Plugin '" & pluginId & "' unregistered", "PLUGIN"
ℹ️ Ligne 136: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       UnregisterPlugin = True
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Public Function GetAllPlugins() As Collection
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim result As New Collection
ℹ️ Ligne 145: Le nom de variable 'key' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim key As Variant
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim key As Variant
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Then
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Set GetAllPlugins = result
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 153: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       For Each key In m_Plugins.Keys
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           result.Add m_Plugins(key), CStr(key)
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Next key
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Set GetAllPlugins = result
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Public Sub SubscribeToEvent(ByVal pluginId As String, ByVal eventName As String)
⚠️ Ligne 168: La fonction 'SubscribeToEvent' est trop longue (148 lignes, max recommandé: 100) [complexity.function_length]
⚠️ Ligne 168: La fonction 'SubscribeToEvent' a un niveau d'imbrication trop élevé (7, max recommandé: 5) [complexity.nesting_level]
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Or Not m_Plugins.Exists(pluginId) Then Exit'@Description: 
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 175: Le nom de variable 'eventKey' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim eventKey As String
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Dim eventKey As String
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       eventKey = UCase$(eventName)
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       If Not m_EventSubscriptions.Exists(eventKey) Then
ℹ️ Ligne 179: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           m_EventSubscriptions.Add eventKey, CreateObject("Scripting.Dictionary")
ℹ️ Ligne 182: Le nom de variable 'eventSubscribers' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 182: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 183: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set eventSubscribers = m_EventSubscriptions(eventKey)
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       If Not eventSubscribers.Exists(pluginId) Then
ℹ️ Ligne 186: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           eventSubscribers.Add pluginId, True
ℹ️ Ligne 187: La ligne dépasse la longueur maximale recommandée (130/120) [style.line_length]
   LogIfAble "SubscribeToEvent", LogLevelDebug, "Plugin '" & pluginId & "' subscribed to event '" & eventName & "'", "PLUGIN"
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           LogIfAble "SubscribeToEvent", LogLevelDebug, "Plugin '" & pluginId & "' subscribed to event '" & eventName & "'", "PLUGIN"
ℹ️ Ligne 193: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Public Sub UnsubscribeFromEvent(ByVal pluginId As String, ByVal eventName As String)
ℹ️ Ligne 196: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Then Exit'@Description: 
ℹ️ Ligne 200: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 202: Le nom de variable 'eventKey' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim eventKey As String
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Dim eventKey As String
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       eventKey = UCase$(eventName)
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       If Not m_EventSubscriptions.Exists(eventKey) Then Exit'@Description: 
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 211: Le nom de variable 'eventSubscribers' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 211: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 212: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       Set eventSubscribers = m_EventSubscriptions(eventKey)
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       If eventSubscribers.Exists(pluginId) Then
ℹ️ Ligne 215: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           eventSubscribers.Remove pluginId
ℹ️ Ligne 216: La ligne dépasse la longueur maximale recommandée (138/120) [style.line_length]
   LogIfAble "UnsubscribeFromEvent", LogLevelDebug, "Plugin '" & pluginId & "' unsubscribed from event '" & eventName & "'", "PLUGIN"
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           LogIfAble "UnsubscribeFromEvent", LogLevelDebug, "Plugin '" & pluginId & "' unsubscribed from event '" & eventName & "'", "PLUGIN"
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       If eventSubscribers.Count = 0 Then
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           m_EventSubscriptions.Remove eventKey
ℹ️ Ligne 227: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 229: Indentation incorrecte. Attendu: 96 espaces, trouvé: 0 [style.indentation]
   Private Sub RemovePluginSubscriptions(ByVal pluginId As String)
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Then Exit'@Description: 
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 236: Le nom de variable 'eventKey' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim eventKey As Variant
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim eventKey As Variant
ℹ️ Ligne 237: Le nom de variable 'eventSubscribers' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 238: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim keysToRemove As New Collection
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       For Each eventKey In m_EventSubscriptions.Keys
ℹ️ Ligne 241: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           Set eventSubscribers = m_EventSubscriptions(eventKey)
ℹ️ Ligne 242: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           If eventSubscribers.Exists(pluginId) Then
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 112 espaces, trouvé: 12 [style.indentation]
               eventSubscribers.Remove pluginId
ℹ️ Ligne 244: La ligne dépasse la longueur maximale recommandée (146/120) [style.line_length]
   LogIfAble "RemovePluginSubscriptions", LogLevelDebug, "Plugin '" & pluginId & "' unsubscribed from event '" & eventKey & "'", "PLUGIN"
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 112 espaces, trouvé: 12 [style.indentation]
               LogIfAble "RemovePluginSubscriptions", LogLevelDebug, "Plugin '" & pluginId & "' unsubscribed from event '" & eventKey & "'", "PLUGIN"
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 116 espaces, trouvé: 12 [style.indentation]
               If eventSubscribers.Count = 0 Then
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 116 espaces, trouvé: 16 [style.indentation]
                   keysToRemove.Add eventKey
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Next eventKey
ℹ️ Ligne 254: Le nom de variable 'key' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim key As Variant
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Dim key As Variant
ℹ️ Ligne 255: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       For Each key In keysToRemove
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 108 espaces, trouvé: 8 [style.indentation]
           m_EventSubscriptions.Remove key
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       Next key
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 264: Indentation incorrecte. Attendu: 112 espaces, trouvé: 0 [style.indentation]
   Public Function TriggerEvent(ByVal eventName As String, Optional ByVal eventData As Variant) As Collection
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       Dim results As New Collection
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       If Not m_IsInitialized Then
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 116 espaces, trouvé: 8 [style.indentation]
           Set TriggerEvent = results
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 116 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 120 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 276: Le nom de variable 'eventKey' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim eventKey As String
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Dim eventKey As String
ℹ️ Ligne 277: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       eventKey = UCase$(eventName)
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       If Not m_EventSubscriptions.Exists(eventKey) Then
ℹ️ Ligne 280: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           LogIfAble "TriggerEvent", LogLevelDebug, "Event '" & eventName & "' triggered but no subscribers", "PLUGIN"
ℹ️ Ligne 281: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           Set TriggerEvent = results
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 120 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 286: Indentation incorrecte. Attendu: 124 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 289: Le nom de variable 'eventSubscribers' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Dim eventSubscribers As Object ' Dictionary
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Set eventSubscribers = m_EventSubscriptions(eventKey)
ℹ️ Ligne 292: Le nom de variable 'pluginId' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim pluginId As Variant
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Dim pluginId As Variant
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Dim plugin As IPlugin
ℹ️ Ligne 294: Le nom de variable 'result' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim result As Variant
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       Dim result As Variant
ℹ️ Ligne 296: La ligne dépasse la longueur maximale recommandée (140/120) [style.line_length]
   LogIfAble "TriggerEvent", LogLevelDebug, "Event '" & eventName & "' triggered with " & eventSubscribers.Count & " subscribers", "PLUGIN"
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       LogIfAble "TriggerEvent", LogLevelDebug, "Event '" & eventName & "' triggered with " & eventSubscribers.Count & " subscribers", "PLUGIN"
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       For Each pluginId In eventSubscribers.Keys
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 128 espaces, trouvé: 8 [style.indentation]
           If m_Plugins.Exists(pluginId) Then
ℹ️ Ligne 300: Indentation incorrecte. Attendu: 128 espaces, trouvé: 12 [style.indentation]
               Set plugin = m_Plugins(pluginId)
ℹ️ Ligne 302: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               On Error Resume Next
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               result = plugin.HandleEvent(eventName, eventData)
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 128 espaces, trouvé: 12 [style.indentation]
               If Err.Number <> 0 Then
ℹ️ Ligne 305: La ligne dépasse la longueur maximale recommandée (136/120) [style.line_length]
   LogIfAble "TriggerEvent", LogLevelWarning, "Plugin '" & pluginId & "' event handler error: " & Err.Description, "PLUGIN"
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 128 espaces, trouvé: 16 [style.indentation]
                   LogIfAble "TriggerEvent", LogLevelWarning, "Plugin '" & pluginId & "' event handler error: " & Err.Description, "PLUGIN"
ℹ️ Ligne 306: Indentation incorrecte. Attendu: 128 espaces, trouvé: 16 [style.indentation]
                   result = Null
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               On Error GoTo 0
ℹ️ Ligne 310: Indentation incorrecte. Attendu: 124 espaces, trouvé: 12 [style.indentation]
               results.Add result, CStr(pluginId)
ℹ️ Ligne 312: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Next pluginId
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Set TriggerEvent = results
ℹ️ Ligne 322: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   Public Sub SetLogger(ByVal logger As ILoggerBase)
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Set m_Logger = logger
ℹ️ Ligne 328: Indentation incorrecte. Attendu: 120 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 330: La ligne dépasse la longueur maximale recommandée (127/120) [style.line_length]
   Private Sub LogIfAble(ByVal sourceMethod As String, ByVal level As LogLevelEnum, ByVal msg As String, ByVal category As String)
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   Private Sub LogIfAble(ByVal sourceMethod As String, ByVal level As LogLevelEnum, ByVal msg As String, ByVal category As String)
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       If m_Logger Is Nothing Then Exit'@Description: 
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 132 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 338: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       m_Logger.LogMessage msg, level, category, "clsPluginManager." & sourceMethod
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
⚠️ Ligne 343: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 343: Indentation incorrecte. Attendu: 128 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 344: Le nom de variable 'pluginId' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim pluginId As Variant
ℹ️ Ligne 344: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Dim pluginId As Variant
ℹ️ Ligne 347: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       For Each pluginId In m_Plugins.Keys
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 132 espaces, trouvé: 8 [style.indentation]
           UnregisterPlugin CStr(pluginId)
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Next pluginId
ℹ️ Ligne 351: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Set m_Plugins = Nothing
ℹ️ Ligne 352: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Set m_EventSubscriptions = Nothing
ℹ️ Ligne 353: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Set m_Logger = Nothing
ℹ️ Ligne 355: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       m_IsInitialized = False

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\clsSheetLogger.cls
---------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 31: Le nom de variable 'm_MinLogLevel' ne suit pas la convention camelCase [naming.variable_case]
   Private m_MinLogLevel As LogLevelEnum
ℹ️ Ligne 32: Le nom de variable 'm_LogSheetName' de type String devrait commencer par 's' [naming.variable_prefix]
   Private m_LogSheetName As String
ℹ️ Ligne 32: Le nom de variable 'm_LogSheetName' ne suit pas la convention camelCase [naming.variable_case]
   Private m_LogSheetName As String
ℹ️ Ligne 33: Le nom de variable 'm_TargetWorkbook' de type Workbook devrait commencer par 'wb' [naming.variable_prefix]
   Private m_TargetWorkbook As Workbook
ℹ️ Ligne 33: Le nom de variable 'm_TargetWorkbook' ne suit pas la convention camelCase [naming.variable_case]
   Private m_TargetWorkbook As Workbook
ℹ️ Ligne 34: Le nom de variable 'm_CurrentRow' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Private m_CurrentRow As Long
ℹ️ Ligne 34: Le nom de variable 'm_CurrentRow' ne suit pas la convention camelCase [naming.variable_case]
   Private m_CurrentRow As Long
ℹ️ Ligne 35: Le nom de variable 'm_Initialized' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Private m_Initialized As Boolean
ℹ️ Ligne 35: Le nom de variable 'm_Initialized' ne suit pas la convention camelCase [naming.variable_case]
   Private m_Initialized As Boolean
⚠️ Ligne 38: Le nom de fonction 'Class_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Initialize()
ℹ️ Ligne 38: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Initialize()
⚠️ Ligne 50: Le nom de fonction 'ILoggerBase_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_Initialize(Optional ByVal minLevel As LogLevelEnum = LogLevelInfo, _
⚠️ Ligne 50: La fonction 'ILoggerBase_Initialize' a trop de paramètres (9/7) [complexity.too_many_params]
   Private Sub ILoggerBase_Initialize(Optional ByVal minLevel As LogLevelEnum = LogLevelInfo, _
⚠️ Ligne 50: La fonction 'ILoggerBase_Initialize' est trop longue (159 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           Set m_TargetWorkbook = ActiveWorkbook
ℹ️ Ligne 67: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           Set m_TargetWorkbook = targetWorkbook
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           CreateLogSheet
ℹ️ Ligne 83: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 85: Le nom de fonction 'ILoggerBase_SetLogger' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_SetLogger(ByVal loggerInstance As ILoggerBase)
ℹ️ Ligne 85: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_SetLogger(ByVal loggerInstance As ILoggerBase)
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 93: Le nom de fonction 'ILoggerBase_LogMessage' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogMessage(ByVal msg As String, _
ℹ️ Ligne 93: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogMessage(ByVal msg As String, _
ℹ️ Ligne 94: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 97: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "", _
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toConsole As Boolean = True, _
ℹ️ Ligne 99: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toSheet As Boolean = False, _
ℹ️ Ligne 100: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toFile As Boolean = True)
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If level < m_MinLogLevel Or Not m_Initialized Then Exit Sub
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If toSheet Then
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           WriteToSheet msg, level, category, source, user
ℹ️ Ligne 113: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 115: Le nom de fonction 'ILoggerBase_LogConsole' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogConsole(ByVal msg As String, _
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogConsole(ByVal msg As String, _
ℹ️ Ligne 116: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 117: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 118: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "")
ℹ️ Ligne 126: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 128: Le nom de fonction 'ILoggerBase_LogSheet' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogSheet(ByVal msg As String, _
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogSheet(ByVal msg As String, _
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 132: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "")
ℹ️ Ligne 134: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If Not m_Initialized Or level < m_MinLogLevel Then Exit'@Description: 
ℹ️ Ligne 138: Indentation incorrecte. Attendu: 32 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 139: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       WriteToSheet msg, level, category, source, user
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 146: Le nom de fonction 'ILoggerBase_LogFile' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogFile(ByVal msg As String, _
ℹ️ Ligne 146: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogFile(ByVal msg As String, _
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "")
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 159: Le nom de fonction 'ILoggerBase_LogError' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogError(ByVal errObject As ErrObject, _
ℹ️ Ligne 159: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogError(ByVal errObject As ErrObject, _
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelError, _
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Optional ByVal sourceRoutine As String = "", _
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "ERROR", _
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "", _
ℹ️ Ligne 164: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toConsole As Boolean = True, _
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toSheet As Boolean = True, _
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toFile As Boolean = True)
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If Not m_Initialized Or level < m_MinLogLevel Then Exit Sub
ℹ️ Ligne 171: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       Dim errorMsg As String
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       errorMsg = "Error #" & errObject.Number & ": " & errObject.Description
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If sourceRoutine <> "" Then
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           errorMsg = errorMsg & " in " & sourceRoutine
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If toSheet Then
ℹ️ Ligne 179: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           WriteToSheet errorMsg, level, category, sourceRoutine, user
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 48 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 187: Le nom de fonction 'ILoggerBase_FlushLogs' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_FlushLogs()
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_FlushLogs()
ℹ️ Ligne 189: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       m_TargetWorkbook.Save
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 196: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 198: Le nom de fonction 'ILoggerBase_GenerateCrashReport' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_GenerateCrashReport(Optional ByVal crashFilePath As String = "")
ℹ️ Ligne 198: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_GenerateCrashReport(Optional ByVal crashFilePath As String = "")
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 206: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Private Property Get ILoggerBase_MinLogLevel() As LogLevelEnum
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       ILoggerBase_MinLogLevel = m_MinLogLevel
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Private Property Get ILoggerBase_IsInitialized() As Boolean
ℹ️ Ligne 210: La fonction 'ILoggerBase_IsInitialized' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get ILoggerBase_IsInitialized() As Boolean
ℹ️ Ligne 211: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       ILoggerBase_IsInitialized = m_Initialized
ℹ️ Ligne 219: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Private Sub WriteToSheet(ByVal msg As String, ByVal level As LogLevelEnum, _
⚠️ Ligne 219: La fonction 'WriteToSheet' est trop longue (162 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 52 espaces, trouvé: 24 [style.indentation]
                           ByVal category As String, ByVal source As String, _
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 52 espaces, trouvé: 24 [style.indentation]
                           ByVal user As String)
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If m_CurrentRow > MAX_LOG_ROWS Then
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           RotateLogSheet
ℹ️ Ligne 229: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim ws As Worksheet
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Set ws = m_TargetWorkbook.Sheets(m_LogSheetName)
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ws.Cells(m_CurrentRow, 1).Value = Now
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ws.Cells(m_CurrentRow, 2).Value = GetLevelName(level)
ℹ️ Ligne 235: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ws.Cells(m_CurrentRow, 3).Value = category
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ws.Cells(m_CurrentRow, 4).Value = source
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ws.Cells(m_CurrentRow, 5).Value = user
ℹ️ Ligne 238: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ws.Cells(m_CurrentRow, 6).Value = msg
ℹ️ Ligne 241: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       FormatLogRow m_CurrentRow, level
ℹ️ Ligne 244: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       m_CurrentRow = m_CurrentRow + 1
ℹ️ Ligne 246: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Private Sub CreateLogSheet()
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim ws As Worksheet
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Set ws = m_TargetWorkbook.Worksheets.Add(After:=m_TargetWorkbook.Sheets(m_TargetWorkbook.Sheets.Count))
ℹ️ Ligne 258: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   Set ws = m_TargetWorkbook.Worksheets.Add(After:=m_TargetWorkbook.Sheets(m_TargetWorkbook.Sheets.Count))
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Name = m_LogSheetName
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Cells(1, 1).Value = "Horodatage"
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Cells(1, 2).Value = "Niveau"
ℹ️ Ligne 264: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Cells(1, 3).Value = "Catégorie"
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Cells(1, 4).Value = "Source"
ℹ️ Ligne 266: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Cells(1, 5).Value = "Utilisateur"
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Cells(1, 6).Value = "Message"
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Range(ws.Cells(1, 1), ws.Cells(1, 6)).Font.Bold = True
ℹ️ Ligne 270: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   ws.Range(ws.Cells(1, 1), ws.Cells(1, 6)).Font.Bold = True
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Columns("A:A").ColumnWidth = 20 ' Horodatage
ℹ️ Ligne 274: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Columns("B:B").ColumnWidth = 10 ' Niveau
ℹ️ Ligne 275: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Columns("C:C").ColumnWidth = 15 ' Catégorie
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Columns("D:D").ColumnWidth = 20 ' Source
ℹ️ Ligne 277: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Columns("E:E").ColumnWidth = 15 ' Utilisateur
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ws.Columns("F:F").ColumnWidth = 80 ' Message
ℹ️ Ligne 281: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       m_CurrentRow = 2
ℹ️ Ligne 283: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 290: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Private Function SheetExists(ByVal sheetName As String) As Boolean
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim ws As Worksheet
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Set ws = m_TargetWorkbook.Sheets(sheetName)
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       SheetExists = (Not ws Is Nothing)
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 302: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   Private Sub FindFirstEmptyRow()
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 307: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim ws As Worksheet
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Set ws = m_TargetWorkbook.Sheets(m_LogSheetName)
ℹ️ Ligne 311: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   m_CurrentRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row + 1
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If m_CurrentRow < 2 Then
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           m_CurrentRow = 2
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 325: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Sub RotateLogSheet()
ℹ️ Ligne 326: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 329: Le nom de variable 'archiveSheetName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim archiveSheetName As String
ℹ️ Ligne 329: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Dim archiveSheetName As String
ℹ️ Ligne 330: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       archiveSheetName = m_LogSheetName & "_Archive_" & Format(Now, "yyyymmdd_hhnnss")
ℹ️ Ligne 333: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       CreateLogSheet
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       m_TargetWorkbook.Sheets(m_LogSheetName & "(2)").Name = archiveSheetName
ℹ️ Ligne 338: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 343: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 345: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Private Sub FormatLogRow(ByVal rowNum As Long, ByVal level As LogLevelEnum)
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim ws As Worksheet
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Set ws = m_TargetWorkbook.Sheets(m_LogSheetName)
ℹ️ Ligne 352: Le nom de variable 'rowRange' de type Range devrait commencer par 'rng' [naming.variable_prefix]
   Dim rowRange As Range
ℹ️ Ligne 352: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim rowRange As Range
ℹ️ Ligne 353: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Set rowRange = ws.Range(ws.Cells(rowNum, 1), ws.Cells(rowNum, 6))
ℹ️ Ligne 353: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   Set rowRange = ws.Range(ws.Cells(rowNum, 1), ws.Cells(rowNum, 6))
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 72 espaces, trouvé: 12 [style.indentation]
               rowRange.Interior.Color = RGB(255, 200, 200) ' Rouge pâle
ℹ️ Ligne 359: Indentation incorrecte. Attendu: 72 espaces, trouvé: 12 [style.indentation]
               rowRange.Interior.Color = RGB(255, 255, 200) ' Jaune pâle
ℹ️ Ligne 364: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 369: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 371: Indentation incorrecte. Attendu: 76 espaces, trouvé: 0 [style.indentation]
   Private Function GetLevelName(ByVal level As LogLevelEnum) As String

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\testing\modTestRegistry.bas
------------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 24: Le nom de variable 'm_testSuites' de type Collection devrait commencer par 'col' [naming.variable_prefix]
   Private m_testSuites As Collection
ℹ️ Ligne 24: Le nom de variable 'm_testSuites' ne suit pas la convention camelCase [naming.variable_case]
   Private m_testSuites As Collection
ℹ️ Ligne 25: Le nom de variable 'm_initialized' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Private m_initialized As Boolean
ℹ️ Ligne 25: Le nom de variable 'm_initialized' ne suit pas la convention camelCase [naming.variable_case]
   Private m_initialized As Boolean
ℹ️ Ligne 26: Le nom de variable 'm_logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_logger As Object
ℹ️ Ligne 26: Le nom de variable 'm_logger' ne suit pas la convention camelCase [naming.variable_case]
   Private m_logger As Object
ℹ️ Ligne 27: Le nom de variable 'm_configManager' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Private m_configManager As Object
ℹ️ Ligne 27: Le nom de variable 'm_configManager' ne suit pas la convention camelCase [naming.variable_case]
   Private m_configManager As Object
ℹ️ Ligne 34: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Initialize()
ℹ️ Ligne 35: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If m_initialized Then Exit'@Description: 
ℹ️ Ligne 39: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 41: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set m_testSuites = New Collection
ℹ️ Ligne 44: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       InitializeDependencies
ℹ️ Ligne 47: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       m_initialized = True
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       LogMessage "Registre de tests initialisé", "info"
ℹ️ Ligne 58: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Sub RegisterSuite(suite As clsTestSuite)
ℹ️ Ligne 60: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Not m_initialized Then Initialize
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim existingSuite As clsTestSuite
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set existingSuite = m_testSuites(suite.Name)
ℹ️ Ligne 67: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Err.Number = 0 Then
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           LogMessage "Suite de test '" & suite.Name & "' déjà enregistrée", "warning"
ℹ️ Ligne 70: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           m_testSuites.Add suite, suite.Name
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           modTestRunner.RegisterTestSuite suite
ℹ️ Ligne 78: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           LogMessage "Suite de test '" & suite.Name & "' enregistrée avec " & suite.TestCount & " test(s)", "info"
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 90: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Public Function GetSuite(ByVal suiteName As String) As clsTestSuite
ℹ️ Ligne 92: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Not m_initialized Then Initialize
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set GetSuite = m_testSuites(suiteName)
ℹ️ Ligne 98: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 99: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Set GetSuite = Nothing
ℹ️ Ligne 100: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 16 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 110: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Public Function GetAllSuites() As Collection
ℹ️ Ligne 112: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       If Not m_initialized Then Initialize
ℹ️ Ligne 114: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Set GetAllSuites = m_testSuites
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 121: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Public Function GetSuiteCount() As Long
ℹ️ Ligne 123: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       If Not m_initialized Then Initialize
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       GetSuiteCount = m_testSuites.Count
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 36 espaces, trouvé: 0 [style.indentation]
   Public Sub DiscoverTests()
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       If Not m_initialized Then Initialize
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       LogMessage "Début de la découverte automatique des tests...", "info"
ℹ️ Ligne 140: Le nom de variable 'vbProj' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim vbProj As Object
ℹ️ Ligne 140: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim vbProj As Object
ℹ️ Ligne 141: Le nom de variable 'vbComp' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim vbComp As Object
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim vbComp As Object
ℹ️ Ligne 142: Le nom de variable 'prefixToUse' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim prefixToUse As String
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim prefixToUse As String
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If Not m_configManager Is Nothing Then
ℹ️ Ligne 146: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           prefixToUse = m_configManager.GetSetting("General", "DefaultSuitePrefix", DEFAULT_SUITE_PREFIX)
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           prefixToUse = DEFAULT_SUITE_PREFIX
ℹ️ Ligne 151: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 152: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       Set vbProj = Application.VBE.ActiveVBProject
ℹ️ Ligne 153: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then
ℹ️ Ligne 154: La ligne dépasse la longueur maximale recommandée (123/120) [style.line_length]
   LogMessage "Erreur lors de l'accès au projet VBA. Vérifiez que la sécurité du modèle d'objet est activée.", "error"
ℹ️ Ligne 154: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           LogMessage "Erreur lors de l'accès au projet VBA. Vérifiez que la sécurité du modèle d'objet est activée.", "error"
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 40 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 165: Le nom de variable 'modulesFound' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim modulesFound As Long
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Dim modulesFound As Long
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       modulesFound = 0
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       For Each vbComp In vbProj.VBComponents
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           If Left(vbComp.Name, Len(prefixToUse)) = prefixToUse Then
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 52 espaces, trouvé: 12 [style.indentation]
               If ProcessTestModule(vbComp) Then
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 52 espaces, trouvé: 16 [style.indentation]
                   modulesFound = modulesFound + 1
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       Next vbComp
ℹ️ Ligne 177: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       LogMessage "Découverte automatique terminée. " & modulesFound & " module(s) de test identifié(s).", "info"
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Public Sub RunAllDiscoveredTests(Optional ByVal outputReport As Boolean = True)
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 44 espaces, trouvé: 4 [style.indentation]
       If Not m_initialized Then Initialize
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If m_testSuites.Count = 0 Then
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           DiscoverTests
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       If m_testSuites.Count = 0 Then
ℹ️ Ligne 196: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           LogMessage "Aucune suite de test trouvée. Impossible d'exécuter les tests.", "warning"
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 205: Le nom de variable 'stopOnFailure' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim stopOnFailure As Boolean
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim stopOnFailure As Boolean
ℹ️ Ligne 206: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If Not m_configManager Is Nothing Then
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           stopOnFailure = (m_configManager.GetSetting("General", "StopOnFailure", "False") = "True")
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           stopOnFailure = False
ℹ️ Ligne 213: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       modTestRunner.RunAllTests outputReport, stopOnFailure
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   Public Function CreateSuite(ByVal suiteName As String) As clsTestSuite
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If Not m_initialized Then Initialize
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim existingSuite As clsTestSuite
ℹ️ Ligne 227: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Set existingSuite = GetSuite(suiteName)
ℹ️ Ligne 229: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If Not existingSuite Is Nothing Then
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Set CreateSuite = existingSuite
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Dim newSuite As New clsTestSuite
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           newSuite.Name = suiteName
ℹ️ Ligne 237: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           RegisterSuite newSuite
ℹ️ Ligne 239: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Set CreateSuite = newSuite
ℹ️ Ligne 248: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Private Function ProcessTestModule(vbComp As Object) As Boolean
ℹ️ Ligne 249: Le nom de variable 'procKind' de type Long devrait commencer par 'l' [naming.variable_prefix]
   Dim procKind As Long
ℹ️ Ligne 249: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim procKind As Long
ℹ️ Ligne 250: Le nom de variable 'procName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim procName As String
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim procName As String
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim lineNum As Long
ℹ️ Ligne 252: Le nom de variable 'suiteCreated' de type Boolean devrait commencer par 'b' [naming.variable_prefix]
   Dim suiteCreated As Boolean
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim suiteCreated As Boolean
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim suite As clsTestSuite
ℹ️ Ligne 254: Le nom de variable 'moduleName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim moduleName As String
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim moduleName As String
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       moduleName = vbComp.Name
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       suiteCreated = False
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       For i = 1 To vbComp.CodeModule.CountOfLines
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           lineNum = 1
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           On Error Resume Next
ℹ️ Ligne 263: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           procName = vbComp.CodeModule.ProcOfLine(i, procKind)
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           If Err.Number = 0 And procName <> "" Then
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 60 espaces, trouvé: 12 [style.indentation]
               If Left(procName, 4) = "Test" Then
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 64 espaces, trouvé: 16 [style.indentation]
                   If Not suiteCreated Then
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 64 espaces, trouvé: 20 [style.indentation]
                       Set suite = CreateSuite(moduleName)
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 64 espaces, trouvé: 20 [style.indentation]
                       suiteCreated = True
ℹ️ Ligne 275: Indentation incorrecte. Attendu: 60 espaces, trouvé: 16 [style.indentation]
                   suite.AddTest procName, procName, moduleName
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 60 espaces, trouvé: 16 [style.indentation]
                   i = i + vbComp.CodeModule.ProcCountLines(procName, procKind)
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           Err.Clear
ℹ️ Ligne 283: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           On Error GoTo 0
ℹ️ Ligne 284: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Next i
ℹ️ Ligne 286: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ProcessTestModule = suiteCreated
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Private Sub InitializeDependencies()
ℹ️ Ligne 295: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Set m_logger = CreateObject("APEX.Logger")
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then Set m_logger = Nothing
ℹ️ Ligne 300: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Set m_configManager = CreateObject("APEX.ConfigManager")
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       If Err.Number <> 0 Then Set m_configManager = Nothing
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Err.Clear
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 309: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 311: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Sub LogMessage(message As String, logLevel As String)
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       If Not m_logger Is Nothing Then
ℹ️ Ligne 317: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogDebug MODULE_NAME, message
ℹ️ Ligne 319: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 321: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogWarning MODULE_NAME, message
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogError MODULE_NAME, message
ℹ️ Ligne 325: Indentation incorrecte. Attendu: 72 espaces, trouvé: 16 [style.indentation]
                   m_logger.LogInfo MODULE_NAME, message
ℹ️ Ligne 329: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           Debug.Print message
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
⚠️ Ligne 335: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set m_testSuites = Nothing
ℹ️ Ligne 337: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set m_logger = Nothing
ℹ️ Ligne 338: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set m_configManager = Nothing

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\implementations\excel\clsExcelPivotTableAccessor.cls
-------------------------------------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 42: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function Initialize(ByVal pivotTable As PivotTable) As Boolean
ℹ️ Ligne 43: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If pivotTable Is Nothing Then
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Set this.PivotTable = pivotTable
ℹ️ Ligne 54: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       this.IsInitialized = True
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Initialize = True
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Sub CheckInitialized()
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Not this.IsInitialized Then
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelPivotTableAccessor", "PivotTable accessor not initialized"
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Property Get IPivotTableAccessor_PivotTableName() As String
ℹ️ Ligne 76: La fonction 'IPivotTableAccessor_PivotRange' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get IPivotTableAccessor_PivotRange() As Range
ℹ️ Ligne 81: La fonction 'IPivotTableAccessor_SourceRange' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get IPivotTableAccessor_SourceRange() As Range
ℹ️ Ligne 86: La fonction 'IPivotTableAccessor_SourceRange' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Set IPivotTableAccessor_SourceRange(ByVal rng As Range)
ℹ️ Ligne 89: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   this.PivotTable.Parent.Parent.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=rng)
⚠️ Ligne 96: Le nom de fonction 'IPivotTableAccessor_AddRowField' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_AddRowField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_AddRowField(ByVal fieldName As String, Optional ByVal position As Long = -1)
⚠️ Ligne 96: La fonction 'IPivotTableAccessor_AddRowField' est trop longue (264 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelPivotTableAccessor", "Field not found: " & fieldName
ℹ️ Ligne 112: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           If position > 0 Then .Position = position
ℹ️ Ligne 118: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 120: Le nom de fonction 'IPivotTableAccessor_AddColumnField' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_AddColumnField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 120: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_AddColumnField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 121: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 124: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim pvtField As PivotField
ℹ️ Ligne 125: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 126: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Set pvtField = this.PivotTable.PivotFields(fieldName)
ℹ️ Ligne 127: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If pvtField Is Nothing Then
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelPivotTableAccessor", "Field not found: " & fieldName
ℹ️ Ligne 134: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       With pvtField
ℹ️ Ligne 136: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           If position > 0 Then .Position = position
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 16 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 144: Le nom de fonction 'IPivotTableAccessor_AddValueField' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_AddValueField(ByVal fieldName As String, _
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_AddValueField(ByVal fieldName As String, _
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 16 espaces, trouvé: 44 [style.indentation]
                                               ByVal aggregationType As PivotAggregationType, _
ℹ️ Ligne 146: Indentation incorrecte. Attendu: 16 espaces, trouvé: 44 [style.indentation]
                                               Optional ByVal customName As String = "")
ℹ️ Ligne 147: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim pvtField As PivotField
ℹ️ Ligne 151: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 152: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set pvtField = this.PivotTable.PivotFields(fieldName)
ℹ️ Ligne 153: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If pvtField Is Nothing Then
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 16 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelPivotTableAccessor", "Field not found: " & fieldName
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       With pvtField
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           .Orientation = xlDataField
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 20 espaces, trouvé: 16 [style.indentation]
                   .Function = xlSum
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 24 espaces, trouvé: 16 [style.indentation]
                   .Function = xlCount
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 28 espaces, trouvé: 16 [style.indentation]
                   .Function = xlAverage
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 32 espaces, trouvé: 16 [style.indentation]
                   .Function = xlMax
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 36 espaces, trouvé: 16 [style.indentation]
                   .Function = xlMin
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 40 espaces, trouvé: 16 [style.indentation]
                   .Function = xlProduct
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 44 espaces, trouvé: 16 [style.indentation]
                   .Function = xlCountNums
ℹ️ Ligne 180: Indentation incorrecte. Attendu: 48 espaces, trouvé: 16 [style.indentation]
                   .Function = xlStDev
ℹ️ Ligne 182: Indentation incorrecte. Attendu: 52 espaces, trouvé: 16 [style.indentation]
                   .Function = xlStDevP
ℹ️ Ligne 184: Indentation incorrecte. Attendu: 56 espaces, trouvé: 16 [style.indentation]
                   .Function = xlVar
ℹ️ Ligne 186: Indentation incorrecte. Attendu: 60 espaces, trouvé: 16 [style.indentation]
                   .Function = xlVarP
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           If Len(customName) > 0 Then
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 60 espaces, trouvé: 12 [style.indentation]
               .Caption = customName
ℹ️ Ligne 198: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 200: Le nom de fonction 'IPivotTableAccessor_AddFilterField' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_AddFilterField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 200: Indentation incorrecte. Attendu: 64 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_AddFilterField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Dim pvtField As PivotField
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 206: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Set pvtField = this.PivotTable.PivotFields(fieldName)
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 209: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If pvtField Is Nothing Then
ℹ️ Ligne 210: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelPivotTableAccessor", "Field not found: " & fieldName
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       With pvtField
ℹ️ Ligne 215: Indentation incorrecte. Attendu: 60 espaces, trouvé: 8 [style.indentation]
           .Orientation = xlPageField
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           If position > 0 Then .Position = position
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 224: Le nom de fonction 'IPivotTableAccessor_RemoveField' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_RemoveField(ByVal fieldName As String)
ℹ️ Ligne 224: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_RemoveField(ByVal fieldName As String)
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Dim pvtField As PivotField
ℹ️ Ligne 229: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Set pvtField = this.PivotTable.PivotFields(fieldName)
ℹ️ Ligne 231: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       If pvtField Is Nothing Then
ℹ️ Ligne 234: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelPivotTableAccessor", "Field not found: " & fieldName
ℹ️ Ligne 238: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       pvtField.Orientation = xlHidden
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 245: Le nom de fonction 'IPivotTableAccessor_ApplyFilter' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_ApplyFilter(ByVal fieldName As String, ByVal criteria As Variant)
ℹ️ Ligne 245: Indentation incorrecte. Attendu: 76 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_ApplyFilter(ByVal fieldName As String, ByVal criteria As Variant)
ℹ️ Ligne 246: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 249: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       Dim pvtField As PivotField
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       Set pvtField = this.PivotTable.PivotFields(fieldName)
ℹ️ Ligne 252: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If pvtField Is Nothing Then
ℹ️ Ligne 255: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelPivotTableAccessor", "Field not found: " & fieldName
ℹ️ Ligne 259: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       With pvtField
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           .ClearAllFilters
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           If IsArray(criteria) Then
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               .PivotFilters.Add2 Type:=xlCaptionEquals, Value1:=criteria
ℹ️ Ligne 264: Indentation incorrecte. Attendu: 76 espaces, trouvé: 12 [style.indentation]
               .CurrentPage = criteria
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 273: Le nom de fonction 'IPivotTableAccessor_ClearFilters' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_ClearFilters()
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 80 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_ClearFilters()
ℹ️ Ligne 274: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 277: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Dim pvtField As PivotField
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       For Each pvtField In this.PivotTable.PivotFields
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 84 espaces, trouvé: 8 [style.indentation]
           pvtField.ClearAllFilters
ℹ️ Ligne 280: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Next pvtField
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 84 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 287: Le nom de fonction 'IPivotTableAccessor_ApplyPivotStyle' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_ApplyPivotStyle(ByVal styleName As String)
ℹ️ Ligne 287: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_ApplyPivotStyle(ByVal styleName As String)
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 289: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       this.PivotTable.TableStyle2 = styleName
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 296: Le nom de fonction 'IPivotTableAccessor_ConfigureDisplay' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_ConfigureDisplay(Optional ByVal showGrandTotals As Boolean = True, _
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_ConfigureDisplay(Optional ByVal showGrandTotals As Boolean = True, _
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 92 espaces, trouvé: 47 [style.indentation]
                                                  Optional ByVal showSubTotals As Boolean = True, _
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 92 espaces, trouvé: 47 [style.indentation]
                                                  Optional ByVal repeatLabels As Boolean = False)
ℹ️ Ligne 299: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 301: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       With this.PivotTable
ℹ️ Ligne 302: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           .ColumnGrand = showGrandTotals
ℹ️ Ligne 303: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           .RowGrand = showGrandTotals
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           .SubtotalLocation = IIf(showSubTotals, xlAtTop, xlAtBottom)
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 92 espaces, trouvé: 8 [style.indentation]
           .RepeatAllLabels IIf(repeatLabels, xlRepeatLabels, xlDoNotRepeatLabels)
ℹ️ Ligne 311: Indentation incorrecte. Attendu: 96 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 313: Le nom de fonction 'IPivotTableAccessor_Refresh' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_Refresh()
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 100 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_Refresh()
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       this.PivotTable.RefreshTable
ℹ️ Ligne 320: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 322: Le nom de fonction 'IPivotTableAccessor_Clear' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IPivotTableAccessor_Clear()
ℹ️ Ligne 322: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   Private Sub IPivotTableAccessor_Clear()
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 324: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       this.PivotTable.ClearTable
ℹ️ Ligne 329: Indentation incorrecte. Attendu: 112 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 331: Le nom de fonction 'IPivotTableAccessor_ExportToNewSheet' ne suit pas la convention PascalCase [naming.function_case]
   Private Function IPivotTableAccessor_ExportToNewSheet() As Worksheet
ℹ️ Ligne 331: Indentation incorrecte. Attendu: 116 espaces, trouvé: 0 [style.indentation]
   Private Function IPivotTableAccessor_ExportToNewSheet() As Worksheet
ℹ️ Ligne 332: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Dim ws As Worksheet
ℹ️ Ligne 336: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Set ws = this.PivotTable.Parent.Parent.Worksheets.Add
ℹ️ Ligne 339: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       this.PivotTable.TableRange2.Copy ws.Range("A1")
ℹ️ Ligne 341: Indentation incorrecte. Attendu: 116 espaces, trouvé: 4 [style.indentation]
       Set IPivotTableAccessor_ExportToNewSheet = ws
ℹ️ Ligne 346: Indentation incorrecte. Attendu: 120 espaces, trouvé: 1 [style.indentation]
    Function
⚠️ Ligne 348: Le nom de fonction 'IPivotTableAccessor_GetPivotData' ne suit pas la convention PascalCase [naming.function_case]
   Private Function IPivotTableAccessor_GetPivotData() As Variant
ℹ️ Ligne 348: Indentation incorrecte. Attendu: 124 espaces, trouvé: 0 [style.indentation]
   Private Function IPivotTableAccessor_GetPivotData() As Variant
ℹ️ Ligne 349: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 350: Indentation incorrecte. Attendu: 124 espaces, trouvé: 4 [style.indentation]
       IPivotTableAccessor_GetPivotData = this.PivotTable.TableRange2.value
ℹ️ Ligne 355: Indentation incorrecte. Attendu: 128 espaces, trouvé: 1 [style.indentation]
    Function
⚠️ Ligne 357: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 357: Indentation incorrecte. Attendu: 132 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 358: Indentation incorrecte. Attendu: 132 espaces, trouvé: 4 [style.indentation]
       Set this.PivotTable = Nothing

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\implementations\excel\clsExcelTableAccessor.cls
--------------------------------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 42: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function Initialize(ByVal tableObject As ListObject) As Boolean
ℹ️ Ligne 43: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If tableObject Is Nothing Then
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Set this.ListObject = tableObject
ℹ️ Ligne 54: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       this.IsInitialized = True
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Initialize = True
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Sub CheckInitialized()
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Not this.IsInitialized Then
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelTableAccessor", "Table accessor not initialized"
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Property Get ITableAccessor_TableName() As String
ℹ️ Ligne 76: La fonction 'ITableAccessor_DataRange' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get ITableAccessor_DataRange() As Range
ℹ️ Ligne 81: La fonction 'ITableAccessor_HeaderRange' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get ITableAccessor_HeaderRange() As Range
ℹ️ Ligne 86: La fonction 'ITableAccessor_DataRowCount' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get ITableAccessor_DataRowCount() As Long
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ITableAccessor_DataRowCount = 0
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           ITableAccessor_DataRowCount = this.ListObject.DataBodyRange.Rows.Count
ℹ️ Ligne 95: La fonction 'ITableAccessor_ColumnCount' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get ITableAccessor_ColumnCount() As Long
⚠️ Ligne 104: Le nom de fonction 'ITableAccessor_ReadData' ne suit pas la convention PascalCase [naming.function_case]
   Private Function ITableAccessor_ReadData() As Variant
ℹ️ Ligne 104: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Function ITableAccessor_ReadData() As Variant
⚠️ Ligne 104: La fonction 'ITableAccessor_ReadData' est trop longue (233 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 107: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If this.ListObject.DataBodyRange Is Nothing Then
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       ITableAccessor_ReadData = this.ListObject.DataBodyRange.value
ℹ️ Ligne 124: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
⚠️ Ligne 126: Le nom de fonction 'ITableAccessor_WriteData' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_WriteData(ByVal data As Variant, Optional ByVal appendData As Boolean = False)
ℹ️ Ligne 126: Indentation incorrecte. Attendu: 16 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_WriteData(ByVal data As Variant, Optional ByVal appendData As Boolean = False)
ℹ️ Ligne 127: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If Not IsArray(data) Then
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelTableAccessor", "Data must be a 2D array"
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If Not appendData Then
ℹ️ Ligne 136: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           If Not this.ListObject.DataBodyRange Is Nothing Then
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 24 espaces, trouvé: 12 [style.indentation]
               this.ListObject.DataBodyRange.Delete
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If appendData And Not this.ListObject.DataBodyRange Is Nothing Then
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           Dim lastRow As Long
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           lastRow = this.ListObject.DataBodyRange.Rows.Count
ℹ️ Ligne 146: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           this.ListObject.ListRows.Add.Range.Resize(UBound(data, 1), UBound(data, 2)).value = data
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           this.ListObject.Range.Resize(UBound(data, 1), UBound(data, 2)).Offset(1).value = data
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 157: Le nom de fonction 'ITableAccessor_ApplyFilter' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_ApplyFilter(ByVal columnName As String, ByVal criteria As Variant)
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_ApplyFilter(ByVal columnName As String, ByVal criteria As Variant)
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Dim col As ListColumn
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Set col = this.ListObject.ListColumns(columnName)
ℹ️ Ligne 164: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       If col Is Nothing Then
ℹ️ Ligne 165: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelTableAccessor", "Column not found: " & columnName
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       this.ListObject.Range.AutoFilter Field:=col.Index, Criteria1:=criteria
ℹ️ Ligne 174: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 176: Le nom de fonction 'ITableAccessor_ClearFilters' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_ClearFilters()
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_ClearFilters()
ℹ️ Ligne 177: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       If this.ListObject.AutoFilter Is Nothing Then Exit'@Description: 
ℹ️ Ligne 182: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 183: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       this.ListObject.AutoFilter.ShowAllData
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 190: Le nom de fonction 'ITableAccessor_Sort' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_Sort(ByVal columnName As String, Optional ByVal ascending As Boolean = True)
ℹ️ Ligne 190: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_Sort(ByVal columnName As String, Optional ByVal ascending As Boolean = True)
ℹ️ Ligne 191: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 194: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Dim col As ListColumn
ℹ️ Ligne 195: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       Set col = this.ListObject.ListColumns(columnName)
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       If col Is Nothing Then
ℹ️ Ligne 198: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelTableAccessor", "Column not found: " & columnName
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       With this.ListObject.Sort
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .SortFields.Clear
ℹ️ Ligne 204: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .SortFields.Add Key:=col.Range, _
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 48 espaces, trouvé: 24 [style.indentation]
                           SortOn:=xlSortOnValues, _
ℹ️ Ligne 206: Indentation incorrecte. Attendu: 48 espaces, trouvé: 24 [style.indentation]
                           Order:=IIf(ascending, xlAscending, xlDescending)
ℹ️ Ligne 207: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .Header = xlYes
ℹ️ Ligne 208: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           .Apply
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 216: Le nom de fonction 'ITableAccessor_AddColumn' ne suit pas la convention PascalCase [naming.function_case]
   Private Function ITableAccessor_AddColumn(ByVal columnName As String, Optional ByVal position As Long = -1) As Long
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 56 espaces, trouvé: 0 [style.indentation]
   Private Function ITableAccessor_AddColumn(ByVal columnName As String, Optional ByVal position As Long = -1) As Long
ℹ️ Ligne 217: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 220: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       Dim existingCol As ListColumn
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 222: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Set existingCol = this.ListObject.ListColumns(columnName)
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If Not existingCol Is Nothing Then
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelTableAccessor", "Column already exists: " & columnName
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       Dim newCol As ListColumn
ℹ️ Ligne 231: Indentation incorrecte. Attendu: 56 espaces, trouvé: 4 [style.indentation]
       If position <= 0 Or position > this.ListObject.ListColumns.Count Then
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Set newCol = this.ListObject.ListColumns.Add
ℹ️ Ligne 236: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           Set newCol = this.ListObject.ListColumns.Add(position)
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       newCol.name = columnName
ℹ️ Ligne 242: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ITableAccessor_AddColumn = newCol.Index
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 56 espaces, trouvé: 1 [style.indentation]
    Function
⚠️ Ligne 249: Le nom de fonction 'ITableAccessor_RemoveColumn' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_RemoveColumn(ByVal columnName As String)
ℹ️ Ligne 249: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_RemoveColumn(ByVal columnName As String)
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Dim col As ListColumn
ℹ️ Ligne 254: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       Set col = this.ListObject.ListColumns(columnName)
ℹ️ Ligne 256: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       If col Is Nothing Then
ℹ️ Ligne 257: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelTableAccessor", "Column not found: " & columnName
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       col.Delete
ℹ️ Ligne 265: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 267: Le nom de fonction 'ITableAccessor_GetColumnIndex' ne suit pas la convention PascalCase [naming.function_case]
   Private Function ITableAccessor_GetColumnIndex(ByVal columnName As String) As Long
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Function ITableAccessor_GetColumnIndex(ByVal columnName As String) As Long
ℹ️ Ligne 268: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       Dim col As ListColumn
ℹ️ Ligne 272: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 273: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       Set col = this.ListObject.ListColumns(columnName)
ℹ️ Ligne 274: Indentation incorrecte. Attendu: 64 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       If col Is Nothing Then
ℹ️ Ligne 277: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           ITableAccessor_GetColumnIndex = 0
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 68 espaces, trouvé: 8 [style.indentation]
           ITableAccessor_GetColumnIndex = col.Index
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 68 espaces, trouvé: 1 [style.indentation]
    Function
⚠️ Ligne 287: Le nom de fonction 'ITableAccessor_GetColumnName' ne suit pas la convention PascalCase [naming.function_case]
   Private Function ITableAccessor_GetColumnName(ByVal columnIndex As Long) As String
ℹ️ Ligne 287: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Private Function ITableAccessor_GetColumnName(ByVal columnIndex As Long) As String
ℹ️ Ligne 288: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       If columnIndex <= 0 Or columnIndex > this.ListObject.ListColumns.Count Then
ℹ️ Ligne 292: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           ITableAccessor_GetColumnName = ""
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 76 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 300: Indentation incorrecte. Attendu: 76 espaces, trouvé: 4 [style.indentation]
       ITableAccessor_GetColumnName = this.ListObject.ListColumns(columnIndex).name
ℹ️ Ligne 305: Indentation incorrecte. Attendu: 80 espaces, trouvé: 1 [style.indentation]
    Function
⚠️ Ligne 307: Le nom de fonction 'ITableAccessor_ApplyTableStyle' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_ApplyTableStyle(ByVal styleName As String)
ℹ️ Ligne 307: Indentation incorrecte. Attendu: 84 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_ApplyTableStyle(ByVal styleName As String)
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 309: Indentation incorrecte. Attendu: 84 espaces, trouvé: 4 [style.indentation]
       this.ListObject.TableStyle = styleName
ℹ️ Ligne 314: Indentation incorrecte. Attendu: 88 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 316: Le nom de fonction 'ITableAccessor_ConvertToRange' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_ConvertToRange()
ℹ️ Ligne 316: Indentation incorrecte. Attendu: 92 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_ConvertToRange()
ℹ️ Ligne 317: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 318: Indentation incorrecte. Attendu: 92 espaces, trouvé: 4 [style.indentation]
       this.ListObject.Unlist
ℹ️ Ligne 323: Indentation incorrecte. Attendu: 96 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 325: Le nom de fonction 'ITableAccessor_Refresh' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ITableAccessor_Refresh()
ℹ️ Ligne 325: Indentation incorrecte. Attendu: 100 espaces, trouvé: 0 [style.indentation]
   Private Sub ITableAccessor_Refresh()
ℹ️ Ligne 326: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 327: Indentation incorrecte. Attendu: 100 espaces, trouvé: 4 [style.indentation]
       this.ListObject.Refresh
ℹ️ Ligne 332: Indentation incorrecte. Attendu: 104 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 334: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 334: Indentation incorrecte. Attendu: 108 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 335: Indentation incorrecte. Attendu: 108 espaces, trouvé: 4 [style.indentation]
       Set this.ListObject = Nothing

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\implementations\excel\clsExcelChartAccessor.cls
--------------------------------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 42: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function Initialize(ByVal chart As Chart) As Boolean
ℹ️ Ligne 43: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If chart Is Nothing Then
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Set this.Chart = chart
ℹ️ Ligne 54: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       this.IsInitialized = True
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Initialize = True
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Sub CheckInitialized()
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If Not this.IsInitialized Then
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Err.Raise 5, "clsExcelChartAccessor", "Chart accessor not initialized"
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Property Get IChartAccessor_ChartName() As String
ℹ️ Ligne 76: La fonction 'IChartAccessor_ChartName' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Let IChartAccessor_ChartName(ByVal value As String)
ℹ️ Ligne 81: La fonction 'IChartAccessor_ChartTitle' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get IChartAccessor_ChartTitle() As String
ℹ️ Ligne 86: La fonction 'IChartAccessor_ChartTitle' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Let IChartAccessor_ChartTitle(ByVal value As String)
ℹ️ Ligne 91: La fonction 'IChartAccessor_SourceRange' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get IChartAccessor_SourceRange() As Range
ℹ️ Ligne 93: La ligne dépasse la longueur maximale recommandée (135/120) [style.line_length]
   Set IChartAccessor_SourceRange = this.Chart.ChartData.Workbook.Worksheets(1).Range(this.Chart.ChartData.Workbook.Names(1).RefersTo)
ℹ️ Ligne 93: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   Set IChartAccessor_SourceRange = this.Chart.ChartData.Workbook.Worksheets(1).Range(this.Chart.ChartData.Workbook.Names(1).RefersTo)
ℹ️ Ligne 96: La fonction 'IChartAccessor_SourceRange' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Set IChartAccessor_SourceRange(ByVal rng As Range)
ℹ️ Ligne 101: La fonction 'IChartAccessor_ChartType' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get IChartAccessor_ChartType() As ChartType
ℹ️ Ligne 106: La fonction 'IChartAccessor_ChartType' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Let IChartAccessor_ChartType(ByVal value As ChartType)
⚠️ Ligne 115: Le nom de fonction 'IChartAccessor_AddSeries' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_AddSeries(ByVal name As String, _
⚠️ Ligne 115: La fonction 'IChartAccessor_AddSeries' est trop longue (203 lignes, max recommandé: 100) [complexity.function_length]
⚠️ Ligne 115: La fonction 'IChartAccessor_AddSeries' a un niveau d'imbrication trop élevé (10, max recommandé: 5) [complexity.nesting_level]
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           If plotOrder > 0 Then .PlotOrder = plotOrder
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 137: Le nom de fonction 'IChartAccessor_RemoveSeries' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_RemoveSeries(ByVal seriesName As String)
ℹ️ Ligne 137: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_RemoveSeries(ByVal seriesName As String)
ℹ️ Ligne 138: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim series As series
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       For Each series In this.Chart.SeriesCollection
ℹ️ Ligne 143: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           If series.name = seriesName Then
ℹ️ Ligne 144: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               series.Delete
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 20 espaces, trouvé: 12 [style.indentation]
               Exit'@Description: 
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 151: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Next series
ℹ️ Ligne 153: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Err.Raise 5, "clsExcelChartAccessor", "Series not found: " & seriesName
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 160: Le nom de fonction 'IChartAccessor_ConfigureXAxis' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_ConfigureXAxis(Optional ByVal title As String = "", _
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_ConfigureXAxis(Optional ByVal title As String = "", _
ℹ️ Ligne 161: Indentation incorrecte. Attendu: 20 espaces, trouvé: 40 [style.indentation]
                                           Optional ByVal minValue As Variant = Empty, _
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 20 espaces, trouvé: 40 [style.indentation]
                                           Optional ByVal maxValue As Variant = Empty, _
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 20 espaces, trouvé: 40 [style.indentation]
                                           Optional ByVal majorUnit As Variant = Empty)
ℹ️ Ligne 164: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       With this.Chart.Axes(xlCategory)
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 24 espaces, trouvé: 8 [style.indentation]
           If Len(title) > 0 Then .AxisTitle.Text = title
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 28 espaces, trouvé: 8 [style.indentation]
           If Not IsEmpty(minValue) Then .MinimumScale = minValue
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 32 espaces, trouvé: 8 [style.indentation]
           If Not IsEmpty(maxValue) Then .MaximumScale = maxValue
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           If Not IsEmpty(majorUnit) Then .MajorUnit = majorUnit
ℹ️ Ligne 176: Indentation incorrecte. Attendu: 40 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 178: Le nom de fonction 'IChartAccessor_ConfigureYAxis' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_ConfigureYAxis(Optional ByVal title As String = "", _
ℹ️ Ligne 178: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_ConfigureYAxis(Optional ByVal title As String = "", _
ℹ️ Ligne 182: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 184: Indentation incorrecte. Attendu: 40 espaces, trouvé: 4 [style.indentation]
       With this.Chart.Axes(xlValue)
ℹ️ Ligne 185: Indentation incorrecte. Attendu: 44 espaces, trouvé: 8 [style.indentation]
           If Len(title) > 0 Then .AxisTitle.Text = title
ℹ️ Ligne 186: Indentation incorrecte. Attendu: 48 espaces, trouvé: 8 [style.indentation]
           If Not IsEmpty(minValue) Then .MinimumScale = minValue
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 52 espaces, trouvé: 8 [style.indentation]
           If Not IsEmpty(maxValue) Then .MaximumScale = maxValue
ℹ️ Ligne 188: Indentation incorrecte. Attendu: 56 espaces, trouvé: 8 [style.indentation]
           If Not IsEmpty(majorUnit) Then .MajorUnit = majorUnit
ℹ️ Ligne 194: Indentation incorrecte. Attendu: 60 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 196: Le nom de fonction 'IChartAccessor_ConfigureLegend' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_ConfigureLegend(Optional ByVal position As XlLegendPosition = xlLegendPositionRight, _
ℹ️ Ligne 196: Indentation incorrecte. Attendu: 60 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_ConfigureLegend(Optional ByVal position As XlLegendPosition = xlLegendPositionRight, _
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 60 espaces, trouvé: 41 [style.indentation]
                                            Optional ByVal showLegend As Boolean = True)
ℹ️ Ligne 198: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 200: Indentation incorrecte. Attendu: 60 espaces, trouvé: 4 [style.indentation]
       With this.Chart.Legend
ℹ️ Ligne 201: Indentation incorrecte. Attendu: 64 espaces, trouvé: 8 [style.indentation]
           If showLegend Then
ℹ️ Ligne 202: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               .position = position
ℹ️ Ligne 203: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               .Visible = True
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 64 espaces, trouvé: 12 [style.indentation]
               .Visible = False
ℹ️ Ligne 212: Indentation incorrecte. Attendu: 64 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 214: Le nom de fonction 'IChartAccessor_ApplyChartStyle' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_ApplyChartStyle(ByVal styleName As String)
ℹ️ Ligne 214: Indentation incorrecte. Attendu: 68 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_ApplyChartStyle(ByVal styleName As String)
ℹ️ Ligne 215: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 216: Indentation incorrecte. Attendu: 68 espaces, trouvé: 4 [style.indentation]
       this.Chart.ChartStyle = styleName
ℹ️ Ligne 221: Indentation incorrecte. Attendu: 72 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 223: Le nom de fonction 'IChartAccessor_ConfigureDataLabels' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_ConfigureDataLabels(Optional ByVal showValue As Boolean = True, _
ℹ️ Ligne 223: Indentation incorrecte. Attendu: 72 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_ConfigureDataLabels(Optional ByVal showValue As Boolean = True, _
ℹ️ Ligne 224: Indentation incorrecte. Attendu: 72 espaces, trouvé: 45 [style.indentation]
                                                Optional ByVal showSeriesName As Boolean = False, _
ℹ️ Ligne 225: Indentation incorrecte. Attendu: 72 espaces, trouvé: 45 [style.indentation]
                                                Optional ByVal showCategoryName As Boolean = False)
ℹ️ Ligne 226: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 228: Indentation incorrecte. Attendu: 72 espaces, trouvé: 4 [style.indentation]
       With this.Chart
ℹ️ Ligne 229: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           .HasDataLabels = True
ℹ️ Ligne 230: Indentation incorrecte. Attendu: 72 espaces, trouvé: 8 [style.indentation]
           With .DataLabels
ℹ️ Ligne 231: Indentation incorrecte. Attendu: 72 espaces, trouvé: 12 [style.indentation]
               .ShowValue = showValue
ℹ️ Ligne 232: Indentation incorrecte. Attendu: 72 espaces, trouvé: 12 [style.indentation]
               .ShowSeriesName = showSeriesName
ℹ️ Ligne 233: Indentation incorrecte. Attendu: 72 espaces, trouvé: 12 [style.indentation]
               .ShowCategoryName = showCategoryName
ℹ️ Ligne 240: Indentation incorrecte. Attendu: 76 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 242: Le nom de fonction 'IChartAccessor_ExportToNewSheet' ne suit pas la convention PascalCase [naming.function_case]
   Private Function IChartAccessor_ExportToNewSheet() As Worksheet
ℹ️ Ligne 242: Indentation incorrecte. Attendu: 80 espaces, trouvé: 0 [style.indentation]
   Private Function IChartAccessor_ExportToNewSheet() As Worksheet
ℹ️ Ligne 243: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 246: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Dim ws As Worksheet
ℹ️ Ligne 247: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Set ws = this.Chart.Parent.Parent.Worksheets.Add
ℹ️ Ligne 247: Accès répétés au même objet. Considérez utiliser 'With...End With' pour améliorer les performances [performance.repeated_access]
   Set ws = this.Chart.Parent.Parent.Worksheets.Add
ℹ️ Ligne 250: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       this.Chart.ChartArea.Copy
ℹ️ Ligne 251: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       ws.Paste ws.Range("A1")
ℹ️ Ligne 253: Indentation incorrecte. Attendu: 80 espaces, trouvé: 4 [style.indentation]
       Set IChartAccessor_ExportToNewSheet = ws
ℹ️ Ligne 258: Indentation incorrecte. Attendu: 84 espaces, trouvé: 1 [style.indentation]
    Function
⚠️ Ligne 260: Le nom de fonction 'IChartAccessor_ExportToImage' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_ExportToImage(ByVal filePath As String, Optional ByVal imageType As XlChartPictureType = xlBitmap)
ℹ️ Ligne 260: La ligne dépasse la longueur maximale recommandée (125/120) [style.line_length]
   Private Sub IChartAccessor_ExportToImage(ByVal filePath As String, Optional ByVal imageType As XlChartPictureType = xlBitmap)
ℹ️ Ligne 260: Indentation incorrecte. Attendu: 88 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_ExportToImage(ByVal filePath As String, Optional ByVal imageType As XlChartPictureType = xlBitmap)
ℹ️ Ligne 261: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 262: Indentation incorrecte. Attendu: 88 espaces, trouvé: 4 [style.indentation]
       this.Chart.Export Filename:=filePath, FilterName:=imageType
ℹ️ Ligne 267: Indentation incorrecte. Attendu: 92 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 269: Le nom de fonction 'IChartAccessor_Refresh' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_Refresh()
ℹ️ Ligne 269: Indentation incorrecte. Attendu: 96 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_Refresh()
ℹ️ Ligne 270: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 271: Indentation incorrecte. Attendu: 96 espaces, trouvé: 4 [style.indentation]
       this.Chart.Refresh
ℹ️ Ligne 276: Indentation incorrecte. Attendu: 100 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 278: Le nom de fonction 'IChartAccessor_Resize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_Resize(ByVal left As Single, ByVal top As Single, ByVal width As Single, ByVal height As Single)
ℹ️ Ligne 278: La ligne dépasse la longueur maximale recommandée (123/120) [style.line_length]
   Private Sub IChartAccessor_Resize(ByVal left As Single, ByVal top As Single, ByVal width As Single, ByVal height As Single)
ℹ️ Ligne 278: Indentation incorrecte. Attendu: 104 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_Resize(ByVal left As Single, ByVal top As Single, ByVal width As Single, ByVal height As Single)
ℹ️ Ligne 279: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 281: Indentation incorrecte. Attendu: 104 espaces, trouvé: 4 [style.indentation]
       With this.Chart.Parent
ℹ️ Ligne 282: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           .left = left
ℹ️ Ligne 283: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           .top = top
ℹ️ Ligne 284: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           .width = width
ℹ️ Ligne 285: Indentation incorrecte. Attendu: 104 espaces, trouvé: 8 [style.indentation]
           .height = height
ℹ️ Ligne 291: Indentation incorrecte. Attendu: 108 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 293: Le nom de fonction 'IChartAccessor_Move' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_Move(ByVal left As Single, ByVal top As Single)
ℹ️ Ligne 293: Indentation incorrecte. Attendu: 112 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_Move(ByVal left As Single, ByVal top As Single)
ℹ️ Ligne 294: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 296: Indentation incorrecte. Attendu: 112 espaces, trouvé: 4 [style.indentation]
       With this.Chart.Parent
ℹ️ Ligne 297: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           .left = left
ℹ️ Ligne 298: Indentation incorrecte. Attendu: 112 espaces, trouvé: 8 [style.indentation]
           .top = top
ℹ️ Ligne 304: Indentation incorrecte. Attendu: 116 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 306: Le nom de fonction 'IChartAccessor_CopyToClipboard' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub IChartAccessor_CopyToClipboard()
ℹ️ Ligne 306: Indentation incorrecte. Attendu: 120 espaces, trouvé: 0 [style.indentation]
   Private Sub IChartAccessor_CopyToClipboard()
ℹ️ Ligne 307: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       CheckInitialized
ℹ️ Ligne 308: Indentation incorrecte. Attendu: 120 espaces, trouvé: 4 [style.indentation]
       this.Chart.ChartArea.Copy
ℹ️ Ligne 313: Indentation incorrecte. Attendu: 124 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 315: Le nom de fonction 'Class_Terminate' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Terminate()
ℹ️ Ligne 315: Indentation incorrecte. Attendu: 128 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Terminate()
ℹ️ Ligne 316: Indentation incorrecte. Attendu: 128 espaces, trouvé: 4 [style.indentation]
       Set this.Chart = Nothing

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\clsDebugLogger.cls
---------------------------------------------------------------
ℹ️ Ligne 18: Le nom de variable 'm_MinLogLevel' ne suit pas la convention camelCase [naming.variable_case]
   Private m_MinLogLevel As LogLevelEnum
⚠️ Ligne 21: Le nom de fonction 'Class_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub Class_Initialize()
ℹ️ Ligne 21: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Private Sub Class_Initialize()
⚠️ Ligne 30: Le nom de fonction 'ILoggerBase_Initialize' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_Initialize(Optional ByVal minLevel As LogLevelEnum = LogLevelInfo, _
⚠️ Ligne 30: La fonction 'ILoggerBase_Initialize' a trop de paramètres (9/7) [complexity.too_many_params]
   Private Sub ILoggerBase_Initialize(Optional ByVal minLevel As LogLevelEnum = LogLevelInfo, _
⚠️ Ligne 30: La fonction 'ILoggerBase_Initialize' est trop longue (141 lignes, max recommandé: 100) [complexity.function_length]
ℹ️ Ligne 45: Indentation incorrecte. Attendu: 4 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 47: Le nom de fonction 'ILoggerBase_SetLogger' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_SetLogger(ByVal loggerInstance As ILoggerBase)
ℹ️ Ligne 47: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_SetLogger(ByVal loggerInstance As ILoggerBase)
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 55: Le nom de fonction 'ILoggerBase_LogMessage' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogMessage(ByVal msg As String, _
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogMessage(ByVal msg As String, _
ℹ️ Ligne 56: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 57: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 58: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 59: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "", _
ℹ️ Ligne 60: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toConsole As Boolean = True, _
ℹ️ Ligne 61: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toSheet As Boolean = False, _
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toFile As Boolean = True)
ℹ️ Ligne 65: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       If level < m_MinLogLevel Then Exit Sub
ℹ️ Ligne 68: Le nom de variable 'formattedMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim formattedMsg As String
ℹ️ Ligne 68: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Dim formattedMsg As String
ℹ️ Ligne 69: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       formattedMsg = Format(Now, "yyyy-mm-dd hh:nn:ss") & " [" & GetLevelName(level) & "]"
ℹ️ Ligne 71: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If category <> "" Then
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           formattedMsg = formattedMsg & " [" & category & "]"
ℹ️ Ligne 75: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       If source <> "" Then
ℹ️ Ligne 76: Indentation incorrecte. Attendu: 20 espaces, trouvé: 8 [style.indentation]
           formattedMsg = formattedMsg & " [" & source & "]"
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       formattedMsg = formattedMsg & " " & msg
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 16 espaces, trouvé: 4 [style.indentation]
       Debug.Print formattedMsg
ℹ️ Ligne 87: Indentation incorrecte. Attendu: 20 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 89: Le nom de fonction 'ILoggerBase_LogConsole' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogConsole(ByVal msg As String, _
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 20 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogConsole(ByVal msg As String, _
ℹ️ Ligne 90: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 92: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 93: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "")
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 20 espaces, trouvé: 4 [style.indentation]
       ILoggerBase_LogMessage msg, level, category, source, user, True, False, False
ℹ️ Ligne 100: Indentation incorrecte. Attendu: 24 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 102: Le nom de fonction 'ILoggerBase_LogSheet' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogSheet(ByVal msg As String, _
ℹ️ Ligne 102: Indentation incorrecte. Attendu: 24 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogSheet(ByVal msg As String, _
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 104: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 105: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 24 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "")
ℹ️ Ligne 113: Indentation incorrecte. Attendu: 28 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 115: Le nom de fonction 'ILoggerBase_LogFile' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogFile(ByVal msg As String, _
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 28 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogFile(ByVal msg As String, _
ℹ️ Ligne 116: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelInfo, _
ℹ️ Ligne 117: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "", _
ℹ️ Ligne 118: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Optional ByVal source As String = "", _
ℹ️ Ligne 119: Indentation incorrecte. Attendu: 28 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "")
ℹ️ Ligne 126: Indentation incorrecte. Attendu: 32 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 128: Le nom de fonction 'ILoggerBase_LogError' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_LogError(ByVal errObject As ErrObject, _
ℹ️ Ligne 128: Indentation incorrecte. Attendu: 32 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_LogError(ByVal errObject As ErrObject, _
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Optional ByVal level As LogLevelEnum = LogLevelError, _
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Optional ByVal sourceRoutine As String = "", _
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Optional ByVal category As String = "ERROR", _
ℹ️ Ligne 132: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Optional ByVal user As String = "", _
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toConsole As Boolean = True, _
ℹ️ Ligne 134: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toSheet As Boolean = True, _
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Optional ByVal toFile As Boolean = True)
ℹ️ Ligne 138: Le nom de variable 'errorMsg' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim errorMsg As String
ℹ️ Ligne 138: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       Dim errorMsg As String
ℹ️ Ligne 139: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       errorMsg = "Error #" & errObject.Number & ": " & errObject.Description
ℹ️ Ligne 141: Indentation incorrecte. Attendu: 36 espaces, trouvé: 4 [style.indentation]
       If sourceRoutine <> "" Then
ℹ️ Ligne 142: Indentation incorrecte. Attendu: 36 espaces, trouvé: 8 [style.indentation]
           errorMsg = errorMsg & " in " & sourceRoutine
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 32 espaces, trouvé: 4 [style.indentation]
       ILoggerBase_LogMessage errorMsg, level, category, sourceRoutine, user, toConsole, False, False
ℹ️ Ligne 150: Indentation incorrecte. Attendu: 36 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 152: Le nom de fonction 'ILoggerBase_FlushLogs' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_FlushLogs()
ℹ️ Ligne 152: Indentation incorrecte. Attendu: 40 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_FlushLogs()
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 44 espaces, trouvé: 1 [style.indentation]
    Sub
⚠️ Ligne 160: Le nom de fonction 'ILoggerBase_GenerateCrashReport' ne suit pas la convention PascalCase [naming.function_case]
   Private Sub ILoggerBase_GenerateCrashReport(Optional ByVal crashFilePath As String = "")
ℹ️ Ligne 160: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   Private Sub ILoggerBase_GenerateCrashReport(Optional ByVal crashFilePath As String = "")
ℹ️ Ligne 166: Indentation incorrecte. Attendu: 52 espaces, trouvé: 1 [style.indentation]
    Sub
ℹ️ Ligne 168: Indentation incorrecte. Attendu: 52 espaces, trouvé: 0 [style.indentation]
   Private Property Get ILoggerBase_MinLogLevel() As LogLevelEnum
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 52 espaces, trouvé: 4 [style.indentation]
       ILoggerBase_MinLogLevel = m_MinLogLevel
ℹ️ Ligne 172: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   Private Property Get ILoggerBase_IsInitialized() As Boolean
ℹ️ Ligne 172: La fonction 'ILoggerBase_IsInitialized' n'a pas de commentaire de documentation [best_practices.missing_doc]
   Private Property Get ILoggerBase_IsInitialized() As Boolean
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 48 espaces, trouvé: 4 [style.indentation]
       ILoggerBase_IsInitialized = True
ℹ️ Ligne 181: Indentation incorrecte. Attendu: 48 espaces, trouvé: 0 [style.indentation]
   Private Function GetLevelName(ByVal level As LogLevelEnum) As String

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\utils\modProcedureUtils.bas
------------------------------------------------------------------------
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 28: Le nom de variable 'logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim logger As Object
ℹ️ Ligne 38: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           logger.Log "ERREUR: Le fichier n'existe pas: " & filePath, "ERROR"
ℹ️ Ligne 39: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           PrepareFileForProcessing = False
ℹ️ Ligne 40: Indentation incorrecte. Attendu: 4 espaces, trouvé: 8 [style.indentation]
           Exit'@Description: 
ℹ️ Ligne 44: Indentation incorrecte. Attendu: 8 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 48: Le nom de variable 'config' de type Variant devrait commencer par 'v' [naming.variable_prefix]
   Dim config As Variant
ℹ️ Ligne 49: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If configSection <> "" Then
ℹ️ Ligne 55: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       If Not CheckFileAccess(filePath) Then
ℹ️ Ligne 62: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 66: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If IsFileOpen(filePath) Then
ℹ️ Ligne 67: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           logger.Log "AVERTISSEMENT: Le fichier est déjà ouvert: " & filePath, "WARN"
ℹ️ Ligne 72: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       If config("createBackup") = True Then
ℹ️ Ligne 73: Le nom de variable 'backupPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim backupPath As String
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           Dim backupPath As String
ℹ️ Ligne 74: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           backupPath = CreateBackup(filePath)
ℹ️ Ligne 75: Indentation incorrecte. Attendu: 12 espaces, trouvé: 8 [style.indentation]
           logger.Log "Sauvegarde créée: " & backupPath, "INFO"
ℹ️ Ligne 79: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       PrepareFileForProcessing = True
ℹ️ Ligne 80: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       logger.Log "Fichier prêt pour le traitement: " & filePath, "INFO"
ℹ️ Ligne 81: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Exit'@Description: 
ℹ️ Ligne 85: Indentation incorrecte. Attendu: 12 espaces, trouvé: 1 [style.indentation]
    Function
ℹ️ Ligne 87: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   ErrorHandler:
ℹ️ Ligne 88: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       logger.Log "ERREUR lors de la préparation du fichier: " & Err.Description & " (" & Err.Number & ")", "ERROR"
ℹ️ Ligne 89: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       PrepareFileForProcessing = False
ℹ️ Ligne 95: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Function CreateLoggerInstance(ByVal logLevel As String) As Object
ℹ️ Ligne 96: Le nom de variable 'logger' de type Object devrait commencer par 'obj' [naming.variable_prefix]
   Dim logger As Object
ℹ️ Ligne 96: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Dim logger As Object
ℹ️ Ligne 101: Indentation incorrecte. Attendu: 16 espaces, trouvé: 12 [style.indentation]
               Set logger = New clsDebugLogger
ℹ️ Ligne 103: Indentation incorrecte. Attendu: 16 espaces, trouvé: 12 [style.indentation]
               Set logger = New clsSheetLogger
ℹ️ Ligne 105: Indentation incorrecte. Attendu: 16 espaces, trouvé: 12 [style.indentation]
               Set logger = New clsLogger
ℹ️ Ligne 108: Indentation incorrecte. Attendu: 12 espaces, trouvé: 4 [style.indentation]
       Set CreateLoggerInstance = logger
ℹ️ Ligne 114: Indentation incorrecte. Attendu: 12 espaces, trouvé: 0 [style.indentation]
   Private Function FileExists(ByVal filePath As String) As Boolean
ℹ️ Ligne 115: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error Resume Next
ℹ️ Ligne 116: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       FileExists = (Dir(filePath) <> "")
ℹ️ Ligne 117: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 123: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Function CheckFileAccess(ByVal filePath As String) As Boolean
ℹ️ Ligne 126: Le nom de variable 'fileNum' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim fileNum As Integer
ℹ️ Ligne 129: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Open filePath For Binary Access Read Write Lock Read Write As #fileNum
ℹ️ Ligne 130: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       CheckFileAccess = (Err.Number = 0)
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Close #fileNum
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 139: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Function IsFileOpen(ByVal filePath As String) As Boolean
ℹ️ Ligne 142: Le nom de variable 'fileNum' de type Integer devrait commencer par 'i' [naming.variable_prefix]
   Dim fileNum As Integer
ℹ️ Ligne 145: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Open filePath For Input Lock Read As #fileNum
ℹ️ Ligne 146: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Close #fileNum
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       IsFileOpen = (Err.Number <> 0)
ℹ️ Ligne 149: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       On Error GoTo 0
ℹ️ Ligne 155: Indentation incorrecte. Attendu: 8 espaces, trouvé: 0 [style.indentation]
   Private Function CreateBackup(ByVal filePath As String) As String
ℹ️ Ligne 156: Le nom de variable 'backupPath' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim backupPath As String
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Dim backupPath As String
ℹ️ Ligne 157: Le nom de variable 'fileName' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim fileName As String
ℹ️ Ligne 157: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Dim fileName As String
ℹ️ Ligne 158: Le nom de variable 'fileExt' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim fileExt As String
ℹ️ Ligne 158: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Dim fileExt As String
ℹ️ Ligne 159: Le nom de variable 'dateStamp' de type String devrait commencer par 's' [naming.variable_prefix]
   Dim dateStamp As String
ℹ️ Ligne 159: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       Dim dateStamp As String
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       fileName = Mid(filePath, InStrRev(filePath, "\") + 1)
ℹ️ Ligne 163: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       fileExt = Mid(fileName, InStrRev(fileName, "."))
ℹ️ Ligne 164: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       fileName = Left(fileName, InStrRev(fileName, ".") - 1)
ℹ️ Ligne 167: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       dateStamp = Format(Now, "yyyymmdd_hhnnss")
ℹ️ Ligne 170: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       backupPath = Left(filePath, InStrRev(filePath, "\")) & fileName & "_backup_" & dateStamp & fileExt
ℹ️ Ligne 173: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       FileCopy filePath, backupPath
ℹ️ Ligne 175: Indentation incorrecte. Attendu: 8 espaces, trouvé: 4 [style.indentation]
       CreateBackup = backupPath

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\excel\ITableAccessor.cls
--------------------------------------------------------------------------------
⚠️ Ligne 0: Le nom du fichier ne commence pas par le préfixe attendu 'cls' [naming.file_prefix]
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 53: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function ReadData() As Variant
ℹ️ Ligne 63: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub WriteData(ByVal data As Variant, Optional ByVal appendData As Boolean = False)
ℹ️ Ligne 73: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ApplyFilter(ByVal columnName As String, ByVal criteria As Variant)
ℹ️ Ligne 81: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ClearFilters()
ℹ️ Ligne 91: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Sort(ByVal columnName As String, Optional ByVal ascending As Boolean = True)
ℹ️ Ligne 102: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function AddColumn(ByVal columnName As String, Optional ByVal position As Long = -1) As Long
ℹ️ Ligne 111: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub RemoveColumn(ByVal columnName As String)
ℹ️ Ligne 121: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function GetColumnIndex(ByVal columnName As String) As Long
ℹ️ Ligne 131: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function GetColumnName(ByVal columnIndex As Long) As String
ℹ️ Ligne 140: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ApplyTableStyle(ByVal styleName As String)
ℹ️ Ligne 148: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ConvertToRange()
ℹ️ Ligne 156: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Refresh()

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\excel\IPivotTableAccessor.cls
-------------------------------------------------------------------------------------
⚠️ Ligne 0: Le nom du fichier ne commence pas par le préfixe attendu 'cls' [naming.file_prefix]
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 64: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub AddRowField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 74: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub AddColumnField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 97: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub AddFilterField(ByVal fieldName As String, Optional ByVal position As Long = -1)
ℹ️ Ligne 106: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub RemoveField(ByVal fieldName As String)
ℹ️ Ligne 116: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ApplyFilter(ByVal fieldName As String, ByVal criteria As Variant)
ℹ️ Ligne 124: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ClearFilters()
ℹ️ Ligne 133: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ApplyPivotStyle(ByVal styleName As String)
ℹ️ Ligne 154: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Refresh()
ℹ️ Ligne 162: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Clear()
ℹ️ Ligne 171: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function ExportToNewSheet() As Worksheet
ℹ️ Ligne 180: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function GetPivotData() As Variant

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\ILoggerBase.cls
-----------------------------------------------------------------------
⚠️ Ligne 0: Le nom du fichier ne commence pas par le préfixe attendu 'cls' [naming.file_prefix]
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 42: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Log(ByVal level As LogLevel, ByVal message As String, Optional ByVal category As String = "")
ℹ️ Ligne 50: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub LogDebug(ByVal message As String, Optional ByVal category As String = "")
ℹ️ Ligne 58: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub LogInfo(ByVal message As String, Optional ByVal category As String = "")
ℹ️ Ligne 66: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub LogWarning(ByVal message As String, Optional ByVal category As String = "")
ℹ️ Ligne 74: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub LogError(ByVal message As String, Optional ByVal category As String = "")
ℹ️ Ligne 82: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub LogCritical(ByVal message As String, Optional ByVal category As String = "")
ℹ️ Ligne 99: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Configure(ByVal options As Variant)
ℹ️ Ligne 109: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Flush()

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\excel\IChartAccessor.cls
--------------------------------------------------------------------------------
⚠️ Ligne 0: Le nom du fichier ne commence pas par le préfixe attendu 'cls' [naming.file_prefix]
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]
ℹ️ Ligne 85: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub RemoveSeries(ByVal seriesIndex As Long)
ℹ️ Ligne 135: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ApplyChartStyle(ByVal styleName As String)
ℹ️ Ligne 159: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Function ExportToNewSheet() As Worksheet
ℹ️ Ligne 169: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub ExportToImage(ByVal filePath As String, ByVal format As String)
ℹ️ Ligne 177: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Refresh()
ℹ️ Ligne 187: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Resize(ByVal width As Double, ByVal height As Double)
ℹ️ Ligne 197: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub Move(ByVal left As Double, ByVal top As Double)
ℹ️ Ligne 205: Indentation incorrecte. Attendu: 4 espaces, trouvé: 0 [style.indentation]
   Public Sub CopyToClipboard()

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\IPlugin.cls
-------------------------------------------------------------------
⚠️ Ligne 0: Le nom du fichier ne commence pas par le préfixe attendu 'cls' [naming.file_prefix]
ℹ️ Ligne 27: La ligne dépasse la longueur maximale recommandée (128/120) [style.line_length]
   Public Function Initialize(Optional ByVal config As Variant) As Boolean: Err.Raise vbObjectError + 1001, "IPlugin": End Function
ℹ️ Ligne 32: La variable 'Sub' est déclarée mais semble non utilisée [best_practices.unused_variable]
ℹ️ Ligne 35: La ligne dépasse la longueur maximale recommandée (150/120) [style.line_length]
   Public Function HandleEvent(ByVal eventName As String, ByVal eventData As Variant) As Variant: Err.Raise vbObjectError + 1001, "IPlugin": End Function

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\IQueryBuilder.cls
-------------------------------------------------------------------------
⚠️ Ligne 0: Le nom du fichier ne commence pas par le préfixe attendu 'cls' [naming.file_prefix]
❌ Ligne 1: Il manque 'Option Explicit' en début de fichier [style.option_explicit]

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\excel\ICellAccessor.cls
-------------------------------------------------------------------------------
❌ Ligne 0: Le fichier n'est pas encodé en UTF-8 [encoding]

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\excel\IRangeAccessor.cls
--------------------------------------------------------------------------------
❌ Ligne 0: Le fichier n'est pas encodé en UTF-8 [encoding]

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\excel\ISheetAccessor.cls
--------------------------------------------------------------------------------
❌ Ligne 0: Le fichier n'est pas encodé en UTF-8 [encoding]

Fichier: d:\Dev\Apex_VBA_FRAMEWORK\apex-core\interfaces\excel\IWorkbookAccessor.cls
-----------------------------------------------------------------------------------
❌ Ligne 0: Le fichier n'est pas encodé en UTF-8 [encoding]

=== Fin du rapport ===