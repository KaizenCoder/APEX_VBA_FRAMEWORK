---
description: APEX Framework Full Configuration for Cursor
globs: 
alwaysApply: true
---

# Configuration APEX Framework pour Cursor
Version: 2.1  
Dernière mise à jour : 2025-04-13  

---

<ai_requirements>
### ⚠️ INITIALISATION OBLIGATOIRE
AVANT toute réponse, l'IA DOIT :
1. Lire ce fichier (.cursor-rules) en ENTIER
2. Confirmer la lecture par : "✅ Règles APEX Framework lues"

3. Consulter l'historique des sessions :
   a. Session du jour : `/tools/workflow/sessions/YYYY_MM_DD_*.md`
   b. Sessions clés : `_workflow_rules.md`, `_architecture.md`, `_refactoring.md`
   c. Dernière session de chaque type (développement, revue, architecture)
4. Confirmer par : "✅ Sessions prioritaires consultées"

5. Consulter les documents essentiels :
   - [🧾 Standards de Documentation](docs/DOCUMENTATION_GUIDELINES.md)
   - [🤖 Guide d'Onboarding IA](docs/AI_ONBOARDING_GUIDE.md)
   - [🏗️ Architecture Core](docs/Components/CoreArchitecture.md)
   - [🧪 Framework de Tests](docs/Components/Testing.md)
   - [👨‍💻 Guide Développeur](docs/DEVELOPPER_GUIDE.md)
   - [📜 Conventions Git](docs/GIT_COMMIT_CONVENTION.md)
   - [🚀 Guide de Démarrage](docs/QuickStartGuide.md)

6. Confirmer par : "✅ Documentation de référence consultée"

7. Demander le contexte si non fourni : "⚠️ Contexte requis"
</ai_requirements>

---

# 📋 STANDARDS ET PRÉCONISATIONS

## 1. Architecture et Développement

### Architecture en Couches (Core / Métier / UI)
- Injection de dépendances via factories uniquement
- Aucune instanciation directe
- Configuration externalisée
- Modules autonomes, testables, documentés
- Log obligatoire, format JSON si script CLI

## 2. Validation Systématique
- ✅ Encodage UTF-8 sans BOM
- ✅ Tests unitaires et intégration
- ✅ Documentation Markdown
- ✅ Conventions Git strictes

## 3. Format de Feedback IA (template obligatoire)
### 📋 Contexte & Analyse
- 🔴 Critique : ...
- 🟡 Important : ...
- 🟢 Standard : ...

### ⚡ Action & Impact
- 🎯 Action : ...
- 📊 Résultat : ...
- 📈 Impact : ...

### 💭 Synthèse & Réflexion
Développement analytique, implications, recommandations stratégiques.

## 4. Documentation Détaillée
@📚 Guide Complet  
@🔧 Guide Développeur  
@🧪 Framework de Tests  
@📝 Templates  
@🔍 Exemples

---

# 🧠 VISION & CONSEIL IA (EXIGÉ POUR LES ASSISTANTS STRATÉGIQUES)

<vision_ia>
Avant toute solution proposée, l'IA doit :

1. Évaluer la **nature du besoin** (tactique, stratégique, exploratoire)
2. Identifier les **risques systémiques** (complexité, dette, rigidité, décalage MVP/long-terme)
3. Formuler un **axe de décision clair** (conserver / isoler / refactoriser / différer)
4. Vérifier la compatibilité avec :
   - l’architecture modulaire
   - la roadmap de production
   - les exigences de log / test / config

Réponses attendues dans une section dédiée :

### 🧭 Vision & Décision
- Nature du besoin
- Risques potentiels
- Décision justifiée
- Alignement avec APEX Framework

⚠️ Une réponse est incomplète sans cette section pour toute question stratégique, architecturale ou d’intégration majeure.
</vision_ia>

---

# ✅ TEST PROMPT (à coller dans Cursor)

```markdown
# Test d'alignement IA – APEX Framework

Je veux créer une surcouche de gestion de projet dans mon écosystème APEX.  
Dois-je créer un fichier central `apex-projects.json` ou des fichiers `project.json` distribués dans chaque module ?  

Merci de répondre :
- En respectant les règles `ai_requirements`
- En appliquant le format de feedback structuré
- En incluant obligatoirement la section 🧭 Vision & Décision
